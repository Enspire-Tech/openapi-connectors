{
  "openapi": "3.0.3",
  "info": {
    "title": "Zoom Video SDK API",
    "description": "The Zoom Video SDK API allows owners of Zoom Video SDK accounts to access information from Zoom. You can use this API to build private services or applications. To learn how to get your JWT credentials and create private applications, read our [JWT](https://marketplace.zoom.us/docs/guides/auth/jwt) documentation. All endpoints are available via https and are located at api.zoom.us/v2/.",
    "contact": {
      "name": "Zoom Developer Support",
      "url": "https://developers.zoom.us/",
      "email": ""
    },
    "license": {
      "name": "",
      "url": ""
    },
    "version": "2.0.0",
    "termsOfService": "https://explore.zoom.us/docs/en-us/video-sdk-terms.html"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "tags": [
    {
      "name": "Sessions",
      "description": "Session operations"
    }
  ],
  "paths": {
    "/videosdk/recordings": {
      "get": {
        "summary": "List recordings of an account",
        "description": "List [Video SDK Cloud Recordings] available on an Account.\n\n> To access a password protected cloud recording, add an \"access_token\" parameter to the download URL and provide [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the value of the \"access_token\".\n<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/Trash"
          },
          {
            "$ref": "#/components/parameters/TrashType"
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-10-11"
            },
            "description": "The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”. \n\n**Note**: The \"trash\" files cannot be filtered by date range and thus, the \"from\" and \"to\" fields should not be used for trash files."
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-11"
            },
            "description": "End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of recording objects returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSession"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/videosdk/sessions/{sessionId}/recordings": {
      "get": {
        "summary": "List session's recordings",
        "description": "Get all the [recordings] from a session instance. The recording files can be downloaded via the `download_url` property listed in the response.\n\n> To access a password-protected cloud recording, add an `access_token` parameter to the download URL and provide [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the `access_token` value.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          },
          {
            "in": "query",
            "name": "include_fields",
            "schema": {
              "type": "string",
              "example": "download_access_token"
            },
            "description": "Get the `download_access_token` field for downloading session recordings."
          },
          {
            "in": "query",
            "name": "ttl",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 604800,
              "example": 0
            },
            "description": "Time to live (TTL) of the `download_access_token`. This is only valid if the `include_fields` query parameter contains `download_access_token`. The range is between 0-604800."
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nYou do not have the right permissions.\n**HTTP Status Code:** `200`<br>\nRecording object returned.<br>\n",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordingSession"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "download_access_token": {
                          "type": "string",
                          "description": "JWT token for downloading the session recording.\n This is only returned if the `include_fields` query parameter contains `download_access_token`.",
                          "example": "exampleTokenXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                        },
                        "password": {
                          "type": "string",
                          "description": "The password of the sharing recording file.",
                          "example": "123456"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/RecordingSeparateAudioList"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nSession recording not found.<br>\n**Error Code:** `3301`<br>\nThere is no recording for this session."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete session's recordings",
        "description": "Delete all recording files of a session.<br><br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:\n* Cloud Recording should be enabled on the user's account.<br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          },
          {
            "$ref": "#/components/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nYou do not have the right permission."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nSession recording deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nSession recording not found.<br>\n**Error Code:** `3301`<br>There is no recording for this session.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/{recordingId}": {
      "delete": {
        "summary": "Delete session's recording file",
        "description": "Delete a specific recording file from a session.<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note:</b> To use this API, you must enable the <b>The host can delete cloud recordings</b> setting.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDeleteOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          },
          {
            "$ref": "#/components/parameters/RecordingId"
          },
          {
            "$ref": "#/components/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nsession recording file deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br> \n**Error Code:** `3303` <br>\nYou can not delete an uncompleted session."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nsession recording file not found<br>\n**Error Code:** `3301` <br> There is no recording for this session.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/status": {
      "put": {
        "summary": "Recover session's recordings",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date.\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* Video SDK account with Cloud Recording enabled.",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "recover"
                    ],
                    "x-enum-descriptions": [
                      "recover session recording"
                    ],
                    "example": "recover"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nDeleted recordings of the session recovered."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nSession recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>\n**Error Code:** `3301`<br>There is no recording for this session.\n\n\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/videosdk/sessions/{sessionId}/recordings/{recordingId}/status": {
      "put": {
        "summary": "Recover a single recording",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the session.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdateOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          },
          {
            "$ref": "#/components/parameters/RecordingId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "recover"
                    ],
                    "x-enum-descriptions": [
                      "recover session recording"
                    ],
                    "example": "recover"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br> Session recording recovered.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>Session recording not found.<br>\n**Error Code:** `3301`There is no recording for this session."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/videosdk/sessions/{sessionId}/events": {
      "patch": {
        "responses": {
          "202": {
            "description": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully."
          },
          "400": {
            "description": "**HTTP Status:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br>\n* Session id does not exist.<br>\n* Invalid session id.<br>\n* Session does not exist.<br>\n* No permission.<br>\n* This API is not available for this account, please contact Zoom support."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001` <br> Session {sessionId} is not found or has expired."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n* You have exceeded the rate limit \"{0}\" of requests for this session. You can resume these API requests after 5 seconds.<br>\n* You have exceeded the rate limit \"{0}\" of requests for this session and this phone number. You may resume these requests after 5 seconds.\n"
          }
        },
        "summary": "Use in-Session events controls",
        "description": "Use this API to control in-Session events such as the **recording controls** to start a recording, stop a recording, pause a recording, and resume a recording, and **invitation control** to invite participants. The recording controls only work for Cloud Recordings and not for local recordings.\n\n\n**Prerequisite:**\n* The session must be a live session.\n* Cloud Recording must be enabled for recording controls.\n* The user using this API must either be the host or alternative host of the session.\n\n",
        "operationId": "inSessionEventsControl",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "description": "The method that you would like to control. The value of this field can be one of the following:\n* `recording.start`: Provide this value if you would like to start the recording.<br><br>\n* `recording.stop`: Provide this value if you would like to stop the recording.<br><br>\n* `recording.pause`: Provide this value if you would like to pause the recording.<br><br>\n* `recording.resume`: Provide this value if you would like to resume the recording that was previously paused.<br><br>\n* `user.invite.callout` — Invite a participant to the session through [call out (phone)](https://support.zoom.us/hc/en-us/articles/4404535651085-Inviting-others-by-phone-call-out). <br><br>\n* `user.invite.room_system_callout` — Invite a participant to the session through [call out (room system)](https://support.zoom.us/hc/en-us/articles/202954189-Inviting-others-to-join-a-Zoom-Rooms-meeting).\n\n\n\n",
                    "example": "recording.start"
                  },
                  "params": {
                    "description": "The in-Session parameters.",
                    "properties": {
                      "invitee_name": {
                        "type": "string",
                        "description": "The user's name to display in the session. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                        "example": "Jill Chill"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "The user's phone number. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                        "example": "5550100"
                      },
                      "invite_options": {
                        "type": "object",
                        "description": "Information about the `user.invite.callout` settings.",
                        "properties": {
                          "require_greeting": {
                            "type": "boolean",
                            "default": true,
                            "description": "Whether to require a greeting before being connected. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                            "example": true
                          },
                          "require_pressing_one": {
                            "type": "boolean",
                            "default": true,
                            "description": "Whether to require pressing 1 before being connected. Use this field if you pass the `user.invite.callout` value for the `method` field.",
                            "example": true
                          }
                        }
                      },
                      "call_type": {
                        "type": "string",
                        "description": "The type of call out. Use a value of `h323` or `sip`. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field.",
                        "example": "h323"
                      },
                      "device_ip": {
                        "type": "string",
                        "description": "The user's device IP address. Use this field if you pass the `user.invite.room_system_callout` value for the `method` field.",
                        "example": "10.100.111.237"
                      },
                      "sip_headers": {
                        "type": "object",
                        "description": "Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field and the `sip` value for the `call_type` field.",
                        "properties": {
                          "from_display_name": {
                            "type": "string",
                            "description": "Custom name that will be used within the SIP Header.",
                            "example": "display name",
                            "maxLength": 256
                          },
                          "to_display_name": {
                            "type": "string",
                            "description": "Custom remote name that will be used within the meeting.",
                            "example": "display name",
                            "maxLength": 256
                          },
                          "from_uri": {
                            "type": "string",
                            "description": "Custom URI that will be used within the SIP Header. The URI must be start with 'sip:' as a valid URI based on parameters defined by the platform",
                            "example": "sip:username@domain.company.org",
                            "maxLength": 256
                          },
                          "additional_headers": {
                            "description": "Ability to add 1 to 10 custom headers, each of which has a maximum length of 256 bytes to comply with SIP standards.  Custom headers would leverage header names starting with “X-“ per SIP guidelines.",
                            "items": {
                              "properties": {
                                "key": {
                                  "description": "Additional custom SIP header's key",
                                  "type": "string",
                                  "example": "X-Header1",
                                  "maxLength": 32
                                },
                                "value": {
                                  "description": "Additional custom SIP header's value",
                                  "type": "string",
                                  "example": "X-body1",
                                  "maxLength": 256
                                }
                              },
                              "type": "object"
                            },
                            "type": "array",
                            "maximum": 10
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/videosdk/report/daily": {
      "get": {
        "summary": "Get daily usage report",
        "description": "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of sessions, users, and session minutes.<br>\n**Prerequisites**<br>\n* A Video SDK account.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "tags": [
          "Video SDK Reports"
        ],
        "operationId": "vsdkReportDaily",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "description": "Year for this report",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "month",
            "description": "Month for this report",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nDaily report retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "integer",
                      "example": 2021,
                      "description": "Year for this report."
                    },
                    "month": {
                      "type": "integer",
                      "example": 12,
                      "description": "Month for this report."
                    },
                    "dates": {
                      "type": "array",
                      "description": "Array of date objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-12-01",
                            "description": "Date for this object."
                          },
                          "sessions": {
                            "type": "integer",
                            "example": 20,
                            "description": "Number of sessions on this date."
                          },
                          "users": {
                            "type": "integer",
                            "example": 80,
                            "description": "Number of participants on this date."
                          },
                          "session_minutes": {
                            "type": "integer",
                            "example": 380,
                            "description": "Number of session minutes on this date."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided within 6 months prior to the current date. \n**Error Code:** `200`<br> \nThis API is only available for Video SDK accounts."
          }
        }
      }
    },
    "/videosdk/report/telephone": {
      "get": {
        "summary": "Get telephone report",
        "description": "The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into sessions via phone (Audio Conferencing or SIP Connected Audio), which number they dialed into, and other details. Use this API to get the telephone report for a specified period of time. <br><br>\n**Prerequisites**<br>\n* A Video SDK account.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "tags": [
          "Video SDK Reports"
        ],
        "operationId": "vsdkReportTelephone",
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>\n`3` - SIP Connected Audio",
            "type": "string",
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Toll-free Call-in & Call-out"
            ],
            "default": "1"
          },
          {
            "in": "query",
            "name": "query_date_type",
            "description": "The type of date to query: \n* `start_time` — Query by call start time. \n* `end_time` — Query by call end time. \n* `session_start_time` — Query by session start time. \n* `session_end_time` — Query by session end time. \n\nThis value defaults to `start_time`.",
            "type": "string",
            "enum": [
              "start_time",
              "end_time",
              "session_start_time",
              "session_end_time"
            ],
            "x-enum-descriptions": [
              "Query Date Type"
            ],
            "default": "start_time"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nTelephone report returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300,
                      "example": 50
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2",
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "example": "2019-07-15",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "example": "2019-07-20",
                      "description": "End date for this report."
                    },
                    "telephony_usage": {
                      "type": "array",
                      "description": "Array of telephony objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "example": "sfk/aOFJSJSYhGwk1hnxgw==",
                            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** this value."
                          },
                          "phone_number": {
                            "type": "string",
                            "example": "000002001",
                            "description": "Toll-free telephone number. "
                          },
                          "signaled_number": {
                            "type": "string",
                            "example": "000002001",
                            "description": "The number that is signaled to Zoom. "
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-07-15T23:24:52Z",
                            "description": "Call leg start time"
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-07-15T23:30:19Z",
                            "description": "Call leg end time"
                          },
                          "duration": {
                            "type": "integer",
                            "example": "6",
                            "description": "Call leg duration"
                          },
                          "total": {
                            "type": "number",
                            "example": "11",
                            "description": "Total cost (USD) for Call Out. Calculated as plan rate by duration."
                          },
                          "country_name": {
                            "type": "string",
                            "example": "Macau SAR",
                            "description": "Country name."
                          },
                          "call_in_number": {
                            "type": "string",
                            "example": "+85123456789",
                            "description": "Caller's call-in number."
                          },
                          "type": {
                            "type": "string",
                            "description": "Call type.",
                            "example": "toll-free",
                            "enum": [
                              "toll-free",
                              "call-out",
                              "call-in",
                              "US toll-number",
                              "global toll-number",
                              "premium",
                              "premium call-in"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "example": "12",
                            "description": "Calling rate for the telephone call."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>The next page token is either invalid or has expired."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided within 6 months prior to the current date. \n**Error Code:** `200`<br> \nThis API is only available for Video SDK accounts."
          }
        }
      }
    },
    "/videosdk/report/cloud_recording": {
      "get": {
        "summary": "Get cloud recording usage report",
        "description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports for up to 6 months prior to the current date. The date gap between from and to dates should be smaller or equal to 30 days.  <br><br>\n**Prerequisites**<br>\n* A Video SDK account.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "tags": [
          "Video SDK Reports"
        ],
        "operationId": "vsdkReportCloudRecording",
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nCloud recording report returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-12-01",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-12-02",
                      "description": "End date for this report."
                    },
                    "cloud_recording_storage": {
                      "type": "array",
                      "description": "Array of cloud usage objects.",
                      "items": {
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-02-10T21:39:50Z",
                            "description": "Date of usage."
                          },
                          "usage": {
                            "type": "string",
                            "example": "29 MB",
                            "description": "Storage used on the date."
                          },
                          "plan_usage": {
                            "type": "string",
                            "example": "0",
                            "description": "Paid storage."
                          },
                          "free_usage": {
                            "type": "string",
                            "example": "1 GB",
                            "description": "Free storage."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided within 6 months prior to the current date. \n**Error Code:** `200`<br> \nThis API is only available for Video SDK accounts."
          }
        }
      }
    },
    "/videosdk/report/operationlogs": {
      "get": {
        "summary": "Get operation logs report",
        "description": "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as changing account settings, and deleting recordings.<br> Use this API to retrieve operation logs report for a specified period of time.  <br><br>\n**Prerequisites**<br>\n* A Video SDK account.<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "tags": [
          "Video SDK Reports"
        ],
        "operationId": "vsdkReportOperationLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "in": "query",
            "name": "category_type",
            "type": "string",
            "description": "**Optional**<br>\nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`",
            "enum": [
              "all",
              "user",
              "user_settings",
              "account",
              "billing",
              "im",
              "recording",
              "phone_contacts",
              "webinar",
              "sub_account",
              "role",
              "zoom_rooms"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300,
                      "example": 50
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2",
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-12-01",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-12-02",
                      "description": "End date for this report."
                    },
                    "operation_logs": {
                      "type": "array",
                      "description": "Array of operation log objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-08-20T19:09:01Z",
                            "description": "The time at which the operation was performed."
                          },
                          "operator": {
                            "type": "string",
                            "example": "someuser@example.com",
                            "description": "The user who performed the operation."
                          },
                          "category_type": {
                            "type": "string",
                            "example": "User",
                            "description": "Category type."
                          },
                          "action": {
                            "type": "string",
                            "example": "update",
                            "description": "Action taken."
                          },
                          "operation_detail": {
                            "type": "string",
                            "example": "Activate User someuser@example.com",
                            "description": "Operation detail."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided within 6 months prior to the current date. \n**Error Code:** `200`<br> \nThis API is only available for Video SDK accounts."
          }
        }
      }
    },
    "/videosdk/sessions": {
      "get": {
        "summary": "List sessions",
        "description": "Use this API to display the total live or past sessions that occurred during a specified period of time. You can specify a monthly date range for this data using the `from` and `to` query parameters. The month should fall within the last six months.\n\nThe overview response displays whether features such as audio, video, screensharing, and recording were used during the session.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`\n\n**Prerequisites:** \n* A Video SDK account",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionTypePast"
          },
          {
            "$ref": "#/components/parameters/FromDate"
          },
          {
            "$ref": "#/components/parameters/ToDate"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Sessions returned.<br>Only available for paid accounts that have dashboard feature enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listsessionmetrics"
                }
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>The next page token is invalid or expired."
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}": {
      "get": {
        "summary": "Get session details",
        "description": "Use this API to return information about live or past sessions. You can specify a monthly date range for this data using the `from` and `to` query parameters. The month should fall within the last six months.\n\nThe overview response displays whether features such as audio, video, screensharing, and recording were used during the session.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Video SDK account",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessionDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId4Metrics"
          },
          {
            "$ref": "#/components/parameters/SessionTypePast3"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Session returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionMetric"
                }
              }
            }
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts. \n\n**Error Code:** `12702` <br>\nCan not access a session a year ago."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session ID is invalid or the session has not ended yet.<br>This session's details are not available."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users": {
      "get": {
        "summary": "List session users",
        "description": "Use this API to return a list of users from live or past sessions. You can specify a monthly date range for this data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n* If you do **not** provide the `type` query parameter, the API defaults to the `live` value and the API will only return metrics for users in a live session, if a session is currently in progress.\n* To view metrics on past session users, provide the `past` value for the `type` query parameter.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Video SDK account.",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessionUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId4Metrics"
          },
          {
            "$ref": "#/components/parameters/SessionTypePast3"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Session users returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300,
                      "example": 50
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2",
                      "type": "string"
                    },
                    "users": {
                      "type": "array",
                      "description": "Information about session users.\n\n**Note:** \n* If a user left a session and rejoined the same session, their information will appear multiple times (for each time the user joined the session).\n* If the account calling this API is a [business associate (BAA) under HIPAA](https://www.ecfr.gov/cgi-bin/retrieveECFR?gp=1&n=se45.1.160_1103&r=SECTION&ty=HTML), this array returns an empty string value for the `user_name`, `ip_address`, `location`, and `email` responses.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "32dsfsd4g5gd",
                            "description": "The user's ID. This is a unique ID assigned to the user joining a session and is valid for **only** that session."
                          },
                          "name": {
                            "type": "string",
                            "example": "exampleuser",
                            "description": "The user's display name.\n\nThis returns an empty string value if the account calling the API is a BAA account."
                          },
                          "device": {
                            "type": "string",
                            "example": "Windows",
                            "description": "The type of device the user use to join the session: \n* `Phone` — The user joined via PSTN. \n* `H.323/SIP` — The user joined via an H.323 or SIP device. \n* `Windows` — The user joined via VoIP using a Windows device. \n* `Mac` — The user joined via VoIP using a Mac device. \n* `iOS` — The user joined via VoIP using an iOS device. \n* `Android` — The user joined via VoIP using an Android device.\n* `““` — An external user.\n\nNote: This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value.",
                            "enum": [
                              "Unknown",
                              "Windows",
                              "Mac",
                              "iOS",
                              "Android",
                              "Web"
                            ]
                          },
                          "ip_address": {
                            "type": "string",
                            "example": "127.0.0.1",
                            "description": "The user's IP address.\n\nThis returns an empty string value if the account calling the API is a BAA account."
                          },
                          "location": {
                            "type": "string",
                            "example": "New York",
                            "description": "The user's location.\n\nThis returns an empty string value if the account calling the API is a BAA account."
                          },
                          "network_type": {
                            "type": "string",
                            "example": "Wifi",
                            "description": "The user's network type:\n\n* `Wired`\n* `Wifi`\n* `PPP` — Point-to-Point.\n* `Cellular` — 3G, 4G, and 5G cellular.\n* `Others` — An unknown device.",
                            "enum": [
                              "Wired",
                              "Wifi",
                              "PPP",
                              "Cellular",
                              "Others"
                            ]
                          },
                          "microphone": {
                            "type": "string",
                            "example": "Plantronics BT600",
                            "description": "The type of microphone that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
                          },
                          "speaker": {
                            "type": "string",
                            "example": "Plantronics BT600",
                            "description": "The type of speaker that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
                          },
                          "camera": {
                            "type": "string",
                            "example": "FaceTime HD Camera",
                            "description": "The type of camera that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
                          },
                          "data_center": {
                            "type": "string",
                            "example": "SC",
                            "description": "The data center where user's session data is stored. See [Datacenter abbreviation list](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) for details."
                          },
                          "connection_type": {
                            "type": "string",
                            "example": "P2P",
                            "description": "The user's connection type."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which user joined the session.",
                            "example": "2021-12-07T05:42:28Z"
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which a user left the session.\n\nFor live sessions, this field is only returned if a user has left the ongoing session.",
                            "example": "2021-12-07T05:42:28Z"
                          },
                          "user_key": {
                            "type": "string",
                            "example": "myUserKey",
                            "description": "Another identifier for the user. Can be a number or characters, maximum length of 15 characters. ",
                            "maxLength": 15
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>The next page token is either invalid or expired."
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts. \n\n**Error Code:** `12702` <br>\nCan not access a session a year ago."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session ID is invalid or has not ended."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users/qos": {
      "get": {
        "summary": "List session users QoS",
        "description": "Use this API to return a list of session users from live or past sessions along with the QoS (quality of service) they received during the session. For example, connection quality for sending and receiving video, audio, and shared content. You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n* If you do **not** provide the `type` query parameter, the API defaults to the `live` value and the API will only return metrics for users in a live session, if a session is currently in progress.\n* To view metrics on past session users, provide the `past` value for the `type` query parameter.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Video SDK Account",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessionUsersQOS",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId4Metrics"
          },
          {
            "$ref": "#/components/parameters/SessionTypePast3"
          },
          {
            "$ref": "#/components/parameters/PageSize4Qos"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Session users returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSUserList"
                }
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300` <br>The next page token is either invalid or expired."
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts. \n\n**Error Code:** `12702` <br>\nCan not access a session a year ago."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>This session's detail info is not available.<br>The Session ID is not valid or the session has not ended yet."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users/{userId}/qos": {
      "get": {
        "summary": "Get session user QoS",
        "description": "Use this API to retrieve the quality of service (QoS) for users from live or past sessions. The data returned indicates the connection quality for sending and receiving video, audio, and shared content. The API returns this data for either the API request or when the API request was last received.\n* This API will **not** return data if there is no data being sent or received at the time of request.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note:</b> When the sender sends its data, a timestamp is attached to the sender's data packet. The receiver then returns this timestamp to the sender. This helps determine the upstream and downstream latency, which includes the application processing time. The latency data returned is the five second average and five second maximum.</p>",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessionUserQOS",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId4Metrics"
          },
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/SessionTypePast3"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Session user QOS returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QOSUser"
                }
              }
            }
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts. \n\n**Error Code:** `12702` <br>\nCan not access a session a year ago."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>This session's detail info is not available.<br>This session has not ended yet or the Session ID is invalid."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/users/sharing": {
      "get": {
        "summary": "Get sharing/recording details",
        "description": "Retrieve the sharing and recording details of participants from live or past sessions.<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* A Video SDK Account.",
        "tags": [
          "Sessions"
        ],
        "operationId": "sessionParticipantShare",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId4Metrics"
          },
          {
            "$ref": "#/components/parameters/SessionTypePast3"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Session user share returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserShareList"
                }
              }
            }
          },
          "400": {
            "description": "**Error Code:** `200`<br>This API is only available for Video SDK accounts. \n\n**Error Code:** `12702` <br>\nCan not access a session a year ago."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>This session's detail info is not available.<br>This session has not ended yet or the Session ID is invalid."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/status": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update session status",
        "description": "Use this API to update a session's status.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Video SDK account",
        "operationId": "sessionStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "requestBody": {
          "description": "Information about the updated session.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The session's type: \n* `end` — End the session.",
                    "enum": [
                      "end"
                    ],
                    "example": "end"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>Session updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `200`<br>This API is only available for Video SDK accounts.<br>**Error Code:** `300`<br>Session id does not exist.<br>**Error Code:** `300`<br>Invalid session id."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session does not exist: {sessionId}.<br>**Error Code:** `1001`<br>User does not exist: {0}."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/livestream": {
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update a session live stream",
        "description": "Use this API to update a session's live stream information.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Video SDK account",
        "operationId": "sessionLiveStreamUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "requestBody": {
          "description": "Information about the updated live stream.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionLiveStream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>Session live stream updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `200`<br>This API is only available for Video SDK accounts.<br>**Error Code:** `300`<br>Session id does not exist.<br>**Error Code:** `300`<br>Invalid session id."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session does not exist: {sessionId}.<br>**Error Code:** `1001`<br>User does not exist: {0}."
          }
        }
      },
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get session live stream details",
        "description": "Use this API to return a session's live stream configuration details, such as the stream's URL, key, and page URL.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br><br>\n**Prerequisites:** \n* A Video SDK account",
        "operationId": "getLiveStreamDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>Live Stream details returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stream_url": {
                      "type": "string",
                      "format": "url",
                      "description": "The live stream's URL.",
                      "example": "https://example.com/livestream"
                    },
                    "stream_key": {
                      "type": "string",
                      "description": "The live stream key.",
                      "example": "ABCDEFG12345HIJ6789"
                    },
                    "page_url": {
                      "type": "string",
                      "format": "url",
                      "description": "The live stream's page URL. This is the URL at which anyone can view the session's live stream.",
                      "example": "https://example.com/livestream/123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `200`<br>This API is only available for Video SDK accounts.<br>**Error Code:** `300`<br>Session id does not exist.<br>**Error Code:** `300`<br>Invalid session id."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session does not exist: {sessionId}.<br>**Error Code:** `1001`<br>User does not exist: {0}."
          }
        }
      }
    },
    "/videosdk/sessions/{sessionId}/livestream/status": {
      "patch": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update session live stream status",
        "description": "Use this API to update a session's live stream status.\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Video SDK account",
        "operationId": "sessionLiveStreamStatusUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/SessionId"
          }
        ],
        "requestBody": {
          "description": "Information about the updated live stream.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionLiveStreamStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>Session live stream updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `200`<br>This API is only available for Video SDK accounts.<br>**Error Code:** `300`<br>Session id does not exist.<br>**Error Code:** `300`<br>Invalid session id.<br>**Error Code:** `4927` <br>Session {sessionId} has not started."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `3001`<br>Session does not exist: {sessionId}.<br>**Error Code:** `1001`<br>User does not exist: {0}"
          },
          "429": {
            "description": "**HTTP Status Code:** `429`<br>Too many requests submitted to start the live stream of this session: {sessionId}. If the live stream has not already started, retry making a new request after 30 seconds."
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "SessionTypePast": {
        "in": "query",
        "name": "type",
        "description": "The type of session to query:\n* `past` — A past session that occurred during the specified date range.\n* `live` — A live sessions.\n\nThis parameter defaults to `live`.",
        "schema": {
          "type": "string",
          "default": "live",
          "enum": [
            "past",
            "live"
          ],
          "x-enum-descriptions": [
            "past sessions",
            "live sessions"
          ],
          "example": "live"
        }
      },
      "FromDate": {
        "in": "query",
        "name": "from",
        "description": "The start date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2021-10-11"
        },
        "required": true
      },
      "ToDate": {
        "in": "query",
        "name": "to",
        "description": "The end date to query, in `yyyy-mm-dd` format.\n\nThe ranges defined in the `from` and `to` parameters should **only** be a one month range. This is because the report only includes one month's worth of data.",
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2021-10-11"
        },
        "required": true
      },
      "PageSize": {
        "in": "query",
        "name": "page_size",
        "description": "The number of records returned within a single API call.",
        "schema": {
          "type": "integer",
          "default": 30,
          "maximum": 300,
          "example": 30
        }
      },
      "PageSize4Qos": {
        "in": "query",
        "name": "page_size",
        "description": "The number of items returned per page.",
        "schema": {
          "type": "integer",
          "default": 1,
          "maximum": 10,
          "example": 10
        }
      },
      "Trash": {
        "in": "query",
        "name": "trash",
        "description": "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
        "schema": {
          "type": "boolean",
          "default": false,
          "example": false
        }
      },
      "TrashType": {
        "in": "query",
        "name": "trash_type",
        "schema": {
          "type": "string",
          "default": "session_recordings",
          "example": "session_recordings"
        },
        "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `session_recordings`: List all session recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. "
      },
      "NextPageToken": {
        "in": "query",
        "name": "next_page_token",
        "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
        "schema": {
          "type": "string",
          "example": "Usse957pzxvmYwlmCZ50a6CNXFrhztxuj82"
        }
      },
      "SessionId4Metrics": {
        "in": "path",
        "name": "sessionId",
        "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
        "schema": {
          "type": "string",
          "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
        },
        "required": true
      },
      "UserId": {
        "in": "path",
        "name": "userId",
        "description": "The user's ID.",
        "schema": {
          "type": "string",
          "example": "xyz123abc"
        },
        "required": true
      },
      "SessionTypePast3": {
        "in": "query",
        "name": "type",
        "description": "The session types: \n* `past` — A past session. \n* `live` — A live session.\n\nThis value defaults to `live`.",
        "schema": {
          "type": "string",
          "default": "live",
          "enum": [
            "past",
            "live"
          ],
          "x-enum-descriptions": [
            "past session",
            "live session"
          ],
          "example": "live"
        }
      },
      "SessionId": {
        "name": "sessionId",
        "in": "path",
        "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** the ID value.",
        "schema": {
          "type": "string",
          "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
        },
        "required": true
      },
      "RecordingId": {
        "in": "path",
        "name": "recordingId",
        "description": "The recording ID.",
        "schema": {
          "type": "string",
          "example": "46cf7349-0b72-4ade-a8a2-a51dae38a69a"
        },
        "required": true
      },
      "RecordingDeleteAction": {
        "in": "query",
        "name": "action",
        "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.",
        "schema": {
          "type": "string",
          "enum": [
            "trash",
            "delete"
          ],
          "x-enum-descriptions": [
            "move recording to trash",
            "delete recording permanently"
          ],
          "default": "trash",
          "example": "trash"
        }
      }
    },
    "schemas": {
      "SessionMetric": {
        "type": "object",
        "title": "Session Metrics Object",
        "description": "Session metric information.",
        "properties": {
          "id": {
            "type": "string",
            "example": "sfk/aOFJSJSYhGwk1hnxgw==",
            "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** this value."
          },
          "session_name": {
            "type": "string",
            "example": "My session",
            "description": "The session's name."
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The session's start time.",
            "example": "2021-12-07T05:42:28Z"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The session's end time.",
            "example": "2021-12-07T05:42:28Z"
          },
          "duration": {
            "type": "string",
            "example": "30:00",
            "description": "The session's duration, in `hh:mm:ss` format."
          },
          "user_count": {
            "type": "integer",
            "example": 2,
            "description": "The session's user count."
          },
          "has_voip": {
            "type": "boolean",
            "description": "Whether VoIP was used in the session.",
            "example": true
          },
          "has_video": {
            "type": "boolean",
            "description": "Whether video was used in the session.",
            "example": true
          },
          "has_screen_share": {
            "type": "boolean",
            "description": "Whether the screenshare feature was used in the session.",
            "example": true
          },
          "has_recording": {
            "type": "boolean",
            "description": "Whether the recording feature was used in the session.",
            "example": true
          },
          "has_pstn": {
            "type": "boolean",
            "description": "Whether the PSTN feature was used in the session.",
            "example": true
          },
          "session_key": {
            "type": "string",
            "example": "my_session_key",
            "description": "The Video SDK custom session ID."
          }
        }
      },
      "listsessionmetrics": {
        "type": "object",
        "title": "Session Metrics List Object",
        "description": "List of session metric information.",
        "properties": {
          "from": {
            "type": "string",
            "format": "date",
            "description": "The report's start date, in `yyyy-mm-dd` format.",
            "example": "2021-10-11"
          },
          "to": {
            "type": "string",
            "format": "date",
            "description": "The report's end date, in `yyyy-mm-dd` format.",
            "example": "2021-10-11"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned within a single API call.",
            "default": 30,
            "maximum": 300,
            "example": 50
          },
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "example": "suQA5LvDBnH5No5OYD7mqpJuFzJqUOHK8U2",
            "type": "string"
          },
          "sessions": {
            "type": "array",
            "description": "Information about the session.",
            "items": {
              "type": "object",
              "title": "List Session Metrics Object",
              "description": "The session's metrics information.",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "sfk/aOFJSJSYhGwk1hnxgw==",
                  "description": "The session's ID. If the ID begins with a `/` character or contains `//` characters, you must **double-encode** this value."
                },
                "session_name": {
                  "type": "string",
                  "example": "My session",
                  "description": "The session's name."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The session's start time.",
                  "example": "2021-12-07T05:42:28Z"
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The session's end time.",
                  "example": "2021-12-07T05:42:28Z"
                },
                "duration": {
                  "type": "string",
                  "example": "30:00",
                  "description": "The session's duration, in `hh:mm:ss` format."
                },
                "user_count": {
                  "type": "integer",
                  "example": 2,
                  "description": "The session's user count."
                },
                "has_voip": {
                  "type": "boolean",
                  "description": "Whether VoIP was used in the session.",
                  "example": true
                },
                "has_video": {
                  "type": "boolean",
                  "description": "Whether video was used in the session.",
                  "example": true
                },
                "has_screen_share": {
                  "type": "boolean",
                  "description": "Whether the screenshare feature was used in the session.",
                  "example": true
                },
                "has_recording": {
                  "type": "boolean",
                  "description": "Whether the recording feature was used in the session.",
                  "example": true
                },
                "has_pstn": {
                  "type": "boolean",
                  "description": "Whether the PSTN feature was used in the session.",
                  "example": true
                },
                "session_key": {
                  "type": "string",
                  "example": "my_session_key",
                  "description": "The Video SDK custom session ID."
                }
              }
            }
          }
        }
      },
      "QOSUserList": {
        "title": "User QOS List Object",
        "description": "List of users' QOS information.",
        "type": "object",
        "properties": {
          "page_size": {
            "type": "integer",
            "description": "The number of items per page.",
            "default": 1,
            "maximum": 10,
            "example": 5
          },
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
            "example": "1cyhUewZa419P9F8QUYURck0U3rFWB0d1H2",
            "type": "string"
          },
          "users": {
            "type": "array",
            "description": "Information about the session users.\n\nIf the account calling this API is a [business associate (BAA) under HIPAA](https://www.ecfr.gov/cgi-bin/retrieveECFR?gp=1&n=se45.1.160_1103&r=SECTION&ty=HTML), this array returns an empty string value for the `user_name`, `ip_address`, and `location` responses.",
            "items": {
              "$ref": "#/components/schemas/QOSUser"
            }
          }
        }
      },
      "UserShareList": {
        "title": "User Share List Object",
        "description": "List of users' share information.",
        "type": "object",
        "properties": {
          "page_size": {
            "type": "integer",
            "description": "The number of items per page.",
            "default": 1,
            "maximum": 10,
            "example": 5
          },
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
            "example": "1cyhUewZa419P9F8QUYURck0U3rFWB0d1H2",
            "type": "string"
          },
          "users": {
            "type": "array",
            "description": "Array of users",
            "items": {
              "$ref": "#/components/schemas/UserShare"
            }
          }
        }
      },
      "UserShare": {
        "title": "User Share Object",
        "description": "The user's share information.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1670000000",
            "description": "The user's ID."
          },
          "name": {
            "type": "string",
            "example": "User",
            "description": "The user's display name. This returns an empty string value if the account calling the API is a [BAA account](https://support.zoom.us/hc/articles/207652183)."
          },
          "details": {
            "type": "array",
            "description": "Array of users",
            "items": {
              "$ref": "#/components/schemas/UserShareDetail"
            }
          }
        }
      },
      "UserShareDetail": {
        "title": "User Share Detail Object",
        "description": "Array of sharing and recording details.",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "desktop",
            "description": "Type of content shared.",
            "enum": [
              "local_recording",
              "cloud_recording",
              "desktop",
              "application",
              "whiteboard",
              "airplay",
              "camera",
              "video_sdk"
            ]
          },
          "start_time": {
            "type": "string",
            "example": "2021-06-17T06:49:06Z",
            "description": "Start time of sharing."
          },
          "end_time": {
            "type": "string",
            "example": "2021-06-17T06:49:35Z",
            "description": "End time of sharing."
          }
        }
      },
      "QOSAudio": {
        "type": "object",
        "title": "Audio QOS Object",
        "description": "Information about the session's audio QoS (quality of service).",
        "properties": {
          "bitrate": {
            "type": "string",
            "example": "23 kbps",
            "description": "The number of bits per second that can be transmitted along a digital network, in kbps."
          },
          "latency": {
            "type": "string",
            "example": "126 ms",
            "description": "The time it takes for a packet to travel from point to point, in milliseconds."
          },
          "jitter": {
            "type": "string",
            "example": "6 ms",
            "description": "The variation in the delay of received packets, in milliseconds."
          },
          "avg_loss": {
            "type": "string",
            "example": "0.3%",
            "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination."
          },
          "max_loss": {
            "type": "string",
            "example": "1.9%",
            "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination."
          }
        }
      },
      "QOSVideo": {
        "title": "Video QoS Object",
        "description": "Information about the session's video QoS (quality of service).",
        "type": "object",
        "properties": {
          "bitrate": {
            "type": "string",
            "example": "23 kbps",
            "description": "The number of bits per second that can be transmitted along a digital network, in kbps."
          },
          "latency": {
            "type": "string",
            "example": "126 ms",
            "description": "The time it takes for a packet to travel from point to point, in milliseconds."
          },
          "jitter": {
            "type": "string",
            "example": "6 ms",
            "description": "The variation in the delay of received packets, in milliseconds."
          },
          "avg_loss": {
            "type": "string",
            "example": "0.3%",
            "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination."
          },
          "max_loss": {
            "type": "string",
            "example": "1.9%",
            "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination."
          },
          "resolution": {
            "type": "string",
            "example": "1280*720",
            "description": "The number of pixels in each dimension that can be displayed by your video camera."
          },
          "frame_rate": {
            "type": "string",
            "example": "12 fps",
            "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps."
          }
        }
      },
      "QOSAs": {
        "title": "Share Screen QoS Object",
        "description": "Information about the session's share screen QoS (quality of service).",
        "type": "object",
        "properties": {
          "bitrate": {
            "type": "string",
            "example": "23 kbps",
            "description": "The number of bits per second that can be transmitted along a digital network, in kbps."
          },
          "latency": {
            "type": "string",
            "example": "126 ms",
            "description": "The time it takes for a packet to travel from point to point, in milliseconds."
          },
          "jitter": {
            "type": "string",
            "example": "6 ms",
            "description": "The variation in the delay of received packets, in milliseconds."
          },
          "avg_loss": {
            "type": "string",
            "example": "0.3%",
            "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination."
          },
          "max_loss": {
            "type": "string",
            "example": "1.9%",
            "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination."
          },
          "resolution": {
            "type": "string",
            "example": "1280*720",
            "description": "The number of pixels in each dimension that can be displayed by your video camera."
          },
          "frame_rate": {
            "type": "string",
            "example": "12 fps",
            "description": "The frame rate at which your video camera can produce unique images. Zoom supports a frame rate of up to 30fps."
          }
        }
      },
      "QOSUser": {
        "type": "object",
        "title": "User QoS Object",
        "description": "Information about the user's quality of service (QoS).",
        "properties": {
          "id": {
            "type": "string",
            "example": "1670000000",
            "description": "The user's ID."
          },
          "name": {
            "type": "string",
            "example": "User",
            "description": "The user's display name.\n\nThis returns an empty string value if the account calling the API is a BAA account."
          },
          "device": {
            "type": "string",
            "example": "Android",
            "description": "The type of device the user use to join the session.\n\nThis returns an empty string value for external users.",
            "enum": [
              "Unknown",
              "Windows",
              "Mac",
              "iOS",
              "Android",
              "Web"
            ]
          },
          "ip_address": {
            "type": "string",
            "example": "192.0.2.0",
            "description": "The user's IP address.\n\nThis returns an empty string value if the account calling the API is a BAA account."
          },
          "location": {
            "type": "string",
            "example": "San Jose (US)",
            "description": "The user's location.\n\nThis returns an empty string value if the account calling the API is a BAA account."
          },
          "network_type": {
            "type": "string",
            "example": "Wifi",
            "description": "The user's network type:\n\n* `Wired`\n* `Wifi`\n* `PPP` — Point-to-Point.\n* `Cellular` — 3G, 4G, and 5G cellular.\n* `Others` — An unknown device.",
            "enum": [
              "Wired",
              "Wifi",
              "PPP",
              "Cellular",
              "Others"
            ]
          },
          "microphone": {
            "type": "string",
            "example": "Plantronics BT600",
            "description": "The type of microphone that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
          },
          "speaker": {
            "type": "string",
            "example": "Plantronics BT600",
            "description": "The type of speaker that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
          },
          "camera": {
            "type": "string",
            "example": "FaceTime HD Camera",
            "description": "The type of camera that the user used during the session. This field **only** returns a value if the user is an internal user (for example, the user is a member of the same account as the host).\n\nFor external users, this field returns an empty string (`““`) value."
          },
          "data_center": {
            "type": "string",
            "example": "SC",
            "description": "The data center where user's session data is stored. See [Datacenter abbreviation list](https://support.zoom.us/hc/en-us/articles/360059254691-Datacenter-abbreviation-list) for details."
          },
          "connection_type": {
            "type": "string",
            "example": "P2P",
            "description": "The user's connection type."
          },
          "join_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which user joined the session.",
            "example": "2021-12-07T05:42:28Z"
          },
          "leave_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which user left the session.",
            "example": "2021-12-07T05:42:28Z"
          },
          "user_qos": {
            "type": "array",
            "description": "The QoS (quality of service) provided to the user.",
            "items": {
              "type": "object",
              "properties": {
                "date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The QoS date.",
                  "example": "2021-12-07T05:42:28Z"
                },
                "audio_input": {
                  "$ref": "#/components/schemas/QOSAudio"
                },
                "audio_output": {
                  "$ref": "#/components/schemas/QOSAudio"
                },
                "video_input": {
                  "$ref": "#/components/schemas/QOSVideo"
                },
                "video_output": {
                  "$ref": "#/components/schemas/QOSVideo"
                },
                "as_input": {
                  "$ref": "#/components/schemas/QOSAs"
                },
                "as_output": {
                  "$ref": "#/components/schemas/QOSAs"
                },
                "cpu_usage": {
                  "type": "object",
                  "description": "Information about CPU usage.",
                  "properties": {
                    "zoom_min_cpu_usage": {
                      "type": "string",
                      "example": "8%",
                      "description": "Zoom's minimum CPU usage."
                    },
                    "zoom_avg_cpu_usage": {
                      "type": "string",
                      "example": "12%",
                      "description": "Zoom's average CPU usage."
                    },
                    "zoom_max_cpu_usage": {
                      "type": "string",
                      "example": "18%",
                      "description": "Zoom's maximum CPU usage."
                    },
                    "system_max_cpu_usage": {
                      "type": "string",
                      "example": "40%",
                      "description": "The system's maximum CPU usage."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SessionLiveStream": {
        "type": "object",
        "title": "Session Live Stream Object",
        "description": "Information about the session live stream.",
        "properties": {
          "stream_url": {
            "type": "string",
            "maxLength": 1024,
            "format": "url",
            "description": "The live stream's URL.",
            "example": "https://example.com/livestream"
          },
          "stream_key": {
            "type": "string",
            "maxLength": 512,
            "description": "The live stream key.",
            "example": "ABCDEFG12345HIJ6789"
          },
          "page_url": {
            "type": "string",
            "format": "url",
            "description": "The live stream's page URL. This is the URL at which anyone can view the session's live stream.",
            "maxLength": 1024,
            "example": "https://example.com/livestream/123"
          }
        },
        "required": [
          "stream_url",
          "stream_key",
          "page_url"
        ]
      },
      "SessionLiveStreamStatus": {
        "type": "object",
        "title": "Session Live Stream Status Object",
        "description": "The session's live stream status.",
        "properties": {
          "action": {
            "type": "string",
            "description": "The session's live stream status: \n* `start` — Start a live stream.\n* `stop` — Stop an ongoing live stream.",
            "enum": [
              "start",
              "stop"
            ],
            "x-enum-descriptions": [
              "Start a session live stream.",
              "Stop a session live stream."
            ],
            "example": "start"
          },
          "settings": {
            "type": "object",
            "description": "The session's livestreaming settings. You can only update the settings of a live stream that has stopped.",
            "properties": {
              "active_speaker_name": {
                "type": "boolean",
                "description": "Whether to display the name of the active speaker during a session's live stream.",
                "example": true
              },
              "display_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50,
                "description": "The display name of the session's live stream.",
                "example": "example"
              }
            }
          }
        }
      },
      "RecordingSeparateAudio": {
        "type": "object",
        "description": "The recording file object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The recording file's unique ID. This is included in the general query response.",
            "example": "24698bd1-589e-4c33-9ba3-bc788b2a0ac2"
          },
          "recording_start": {
            "type": "string",
            "description": "The recording file's start time.",
            "format": "date-time",
            "example": "2021-12-07T05:40:28Z"
          },
          "recording_end": {
            "type": "string",
            "description": "The recording file's end time. This is included in the general query response.",
            "format": "date-time",
            "example": "2021-12-07T05:42:28Z"
          },
          "file_name": {
            "type": "string",
            "description": "The recording file's name.",
            "example": "file name"
          },
          "file_type": {
            "type": "string",
            "description": "The recording file's format. One of:\n\n* `MP4` — Video file.\n* `M4A` — Audio-only file.\n* `TIMELINE` — Timestamp file of the recording, in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting **must** be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/360060316092). The time will display in the host's timezone.\n* `TRANSCRIPT` — A transcript of the recording, in VTT format.\n* `CHAT` — A text file containing chat messages sent during the session.\n* `CC` — A file containing the closed captions of the recording, in VTT file format.\n* `CSV` — A file containing polling data, in CSV format.\n\nA recording file object with file the `CC` or `TIMELINE` value **does not** have the `id`, `status`, `file_size`, and `recording_type` properties.",
            "example": "MP4"
          },
          "file_extension": {
            "type": "string",
            "description": "The archived file's file extension.",
            "example": "MP4"
          },
          "file_size": {
            "type": "number",
            "description": "The recording file's size, in bytes.",
            "example": 352121
          },
          "download_url": {
            "type": "string",
            "description": "The URL at which to download the the recording. \n\n**JWT apps** \n\nTo access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL. For example: \n\n`https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}}`.",
            "example": "https://download/example/download_url"
          },
          "status": {
            "type": "string",
            "description": "The recording file's status.",
            "enum": [
              "completed"
            ],
            "example": "completed"
          }
        }
      },
      "RecordingSeparateAudioList": {
        "title": "List recording files for each participant.",
        "description": "Return a list of recording files for each participant. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
        "allOf": [
          {
            "properties": {
              "participant_audio_files": {
                "type": "array",
                "title": "The list of recording files for each participant.",
                "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordingSeparateAudio"
                    }
                  ]
                }
              }
            }
          }
        ],
        "type": "object"
      },
      "RecordingSession": {
        "description": "The recording session object.",
        "allOf": [
          {
            "properties": {
              "session_id": {
                "type": "string",
                "description": "Unique Session Identifier. Each instance of the session will have its own session_id.",
                "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
              },
              "session_name": {
                "type": "string",
                "description": "Session name.",
                "example": "session name"
              },
              "start_time": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the session started.",
                "example": "2022-03-10T02:27:24Z"
              },
              "duration": {
                "type": "integer",
                "description": "Session duration.",
                "example": 2
              },
              "total_size": {
                "type": "integer",
                "description": "The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files.",
                "format": "int64",
                "example": 444601
              },
              "recording_count": {
                "type": "integer",
                "description": "Number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files.",
                "example": 4
              }
            }
          },
          {
            "$ref": "#/components/schemas/RecordingList"
          }
        ],
        "type": "object"
      },
      "RecordingList": {
        "title": "Recording file List",
        "description": "List of recording file.",
        "allOf": [
          {
            "properties": {
              "recording_files": {
                "type": "array",
                "title": "Recording file List",
                "description": "List of recording file.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Recording"
                    }
                  ]
                }
              }
            }
          }
        ],
        "type": "object"
      },
      "Recording": {
        "type": "object",
        "description": "Recording file object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The recording file ID. Included in the response of general query.",
            "example": "35497738-9fef-4f8a-97db-0ec34caef065"
          },
          "session_id": {
            "type": "string",
            "description": "The session ID. ",
            "example": "KkMHZ4y8QhSUWAHi5sWvfg=="
          },
          "recording_start": {
            "type": "string",
            "description": "The recording start time.",
            "example": "2022-03-11T12:30:42Z"
          },
          "recording_end": {
            "type": "string",
            "description": "The recording end time. Response in general query.",
            "example": "2022-03-11T12:34:42Z"
          },
          "file_type": {
            "type": "string",
            "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the \"Add a timestamp to the recording\" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/360060316092). The time will display in the host's timezone, set on their Zoom profile.\n<br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-session chat messages that were sent during the session.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.\n\n<br>\n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, and `recording_type`.",
            "example": "MP4"
          },
          "file_size": {
            "type": "number",
            "description": "The recording file size.",
            "example": 12125
          },
          "download_url": {
            "type": "string",
            "description": "The URL at which to download the the recording. \n\n**JWT apps** \n\nTo access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL. For example: \n\n`https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}}`.",
            "example": "https://example/download_url"
          },
          "status": {
            "type": "string",
            "description": "The recording status.",
            "enum": [
              "completed"
            ],
            "example": "completed"
          },
          "deleted_time": {
            "type": "string",
            "description": "The time at which recording was deleted. Returned in the response only for trash query.",
            "example": "2022-03-28T07:22:22Z"
          },
          "recording_type": {
            "type": "string",
            "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`<br>`timeline`<br>`closed_caption`",
            "example": "audio_only"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}