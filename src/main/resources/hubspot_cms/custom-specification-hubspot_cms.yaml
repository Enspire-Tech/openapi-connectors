{
  "openapi": "3.0.3",
  "info": {
    "title": "Hubspot CMS API",
    "version": "v3"
  },
  "servers": [
    {
      "url": "https://api.hubapi.com/"
    }
  ],
  "tags": [
    {
      "name": "Domains",
      "description": "Operations for fetching domains"
    },
    {
      "name": "Content",
      "description": "Endpoints which interact with actual file contents."
    },
    {
      "name": "Metadata",
      "description": "Endpoints which interact with the object metadata for files."
    },
    {
      "name": "Validation",
      "description": "Endpoints used to validate developer asset files."
    },
    {
      "name": "Source_Code_Extract"
    },
    {
      "name": "Extract"
    },
    {
      "name": "Blog Posts"
    },
    {
      "name": "Blog Authors"
    },
    {
      "name": "Redirects"
    },
    {
      "name": "Public_Performance"
    },
    {
      "name": "Tables"
    },
    {
      "name": "Rows"
    },
    {
      "name": "Rows Batch"
    },
    {
      "name": "Blog Tags"
    },
    {
      "name": "Audit_Logs"
    },
    {
      "name": "Public",
      "description": "Public Site Searching across published content."
    }
  ],
  "paths": {
    "/cms/v3/domains/": {
      "get": {
        "tags": [
            "Domains"
        ],
        "summary": "Get current domains",
        "description": "Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.",
        "operationId": "get-/cms/v3/domains/_getPage",
        "parameters": [
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return domains created at this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return domains created after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return domains created before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return domains updated at this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return domains updated after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return domains updated before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results per page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalDomain"
                },
                "example": {
                  "total": 2,
                  "results": [
                    {
                      "id": "1234",
                      "createdAt": "2017-07-24T17:24:09.141Z",
                      "updatedAt": "2017-07-25T18:20:00.000Z",
                      "domain": "234.hs-sites.com",
                      "isPrimaryLandingPage": false,
                      "isPrimaryEmail": false,
                      "isPrimaryBlogPost": true,
                      "isPrimarySitePage": false,
                      "isPrimaryKnowledge": false,
                      "isResolving": true,
                      "isManuallyMarkedAsResolving": false,
                      "isHttpsEnabled": true,
                      "isHttpsOnly": false,
                      "isUsedForBlogPost": true,
                      "isUsedForSitePage": false,
                      "isUsedForLandingPage": false,
                      "isUsedForEmail": false,
                      "isUsedForKnowledge": false,
                      "expectedCname": "234.group34.sites.hubspot.net",
                      "redirectTo": ""
                    },
                    {
                      "id": "4321",
                      "createdAt": "2017-07-11T13:00:52.928Z",
                      "updatedAt": "2019-10-08T16:54:57.165Z",
                      "domain": "test.demo.com",
                      "isPrimaryLandingPage": false,
                      "isPrimaryEmail": false,
                      "isPrimaryBlogPost": true,
                      "isPrimarySitePage": false,
                      "isPrimaryKnowledge": false,
                      "isResolving": true,
                      "isManuallyMarkedAsResolving": false,
                      "isHttpsEnabled": true,
                      "isHttpsOnly": false,
                      "isUsedForBlogPost": true,
                      "isUsedForSitePage": false,
                      "isUsedForLandingPage": false,
                      "isUsedForEmail": false,
                      "isUsedForKnowledge": false,
                      "expectedCname": "234.group34.sites.hubspot.net",
                      "redirectTo": ""
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": []
      }
    },
    "/cms/v3/domains/{domainId}": {
      "get": {
        "tags": [
            "Domains"
        ],
        "summary": "Get a single domain",
        "description": "Returns a single domains with the id specified.",
        "operationId": "get-/cms/v3/domains/{domainId}_getById",
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "description": "The unique ID of the domain.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                },
                "example": {
                  "id": "3210329704",
                  "createdAt": "2017-07-11T13:00:52.928Z",
                  "updatedAt": "2019-10-08T16:54:57.165Z",
                  "domain": "99558489.hubspot.com",
                  "isPrimaryLandingPage": false,
                  "isPrimaryEmail": false,
                  "isPrimaryBlogPost": true,
                  "isPrimarySitePage": false,
                  "isPrimaryKnowledge": false,
                  "isResolving": true,
                  "isManuallyMarkedAsResolving": false,
                  "isHttpsEnabled": true,
                  "isHttpsOnly": false,
                  "isUsedForBlogPost": true,
                  "isUsedForSitePage": false,
                  "isUsedForLandingPage": false,
                  "isUsedForEmail": false,
                  "isUsedForKnowledge": false,
                  "expectedCname": "99558489.group39.sites.hubspotqa.net",
                  "redirectTo": ""
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": []
      }
    },
    "/cms/v3/source-code/extract/async": {
      "post": {
        "tags": [
            "Source_Code_Extract"
        ],
        "operationId": "post-/cms/v3/source-code/extract/async_doAsync",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/FileExtractRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLocator"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/source-code/extract/async/tasks/{taskId}/status": {
      "get": {
        "tags": [
            "Source_Code_Extract"
        ],
        "operationId": "get-/cms/v3/source-code/extract/async/tasks/{taskId}/status_getAsyncStatus",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/source-code/extract/{path}": {
      "post": {
        "tags": [
            "Extract"
        ],
        "summary": "Extracts a zip file",
        "description": "Extracts a zip file in the file system. The zip file will be extracted in-place and not be deleted automatically.",
        "operationId": "post-/cms/v3/source-code/extract/{path}_extractByPath",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the zip file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/source-code/{environment}/content/{path}": {
      "get": {
        "tags": [
            "Content"
        ],
        "summary": "Download a file",
        "description": "Downloads the byte contents of the file at the specified path in the specified environment.",
        "operationId": "get-/cms/v3/source-code/{environment}/content/{path}_get",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "description": "The environment of the file (\"draft\" or \"published\").",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      },
      "put": {
        "tags": [
            "Content"
        ],
        "summary": "Create or update a file",
        "description": "Upserts a file at the specified path in the specified environment. Accepts multipart/form-data content type.",
        "operationId": "put-/cms/v3/source-code/{environment}/content/{path}_replace",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "description": "The environment of the file (\"draft\" or \"published\").",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file to upload.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetFileMetadata"
                },
                "example": {
                  "id": "/example.json",
                  "name": "example.json",
                  "folder": false,
                  "children": [],
                  "updatedAt": 1608049506,
                  "createdAt": 1608049506,
                  "archivedAt": 0
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      },
      "post": {
        "tags": [
            "Content"
        ],
        "summary": "Create a file",
        "description": "Creates a file at the specified path in the specified environment. Accepts multipart/form-data content type. Throws an error if a file already exists at the specified path.",
        "operationId": "post-/cms/v3/source-code/{environment}/content/{path}_create",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "description": "The environment of the file (\"draft\" or \"published\").",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file to upload.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetFileMetadata"
                },
                "example": {
                  "id": "/example.json",
                  "name": "example.json",
                  "folder": false,
                  "children": [],
                  "updatedAt": 1608049506,
                  "createdAt": 1608049506,
                  "archivedAt": 0
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      },
      "delete": {
        "tags": [
            "Content"
        ],
        "summary": "Delete a file",
        "description": "Deletes the file at the specified path in the specified environment.",
        "operationId": "delete-/cms/v3/source-code/{environment}/content/{path}_archive",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "description": "The environment of the file (\"draft\" or \"published\").",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      }
    },
    "/cms/v3/source-code/{environment}/metadata/{path}": {
      "get": {
        "tags": [
            "Metadata"
        ],
        "summary": "Get the metadata for a file",
        "description": "Gets the metadata object for the file at the specified path in the specified environment.",
        "operationId": "get-/cms/v3/source-code/{environment}/metadata/{path}_get",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "description": "The environment of the file (\"draft\" or \"published\").",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetFileMetadata"
                },
                "example": {
                  "id": "/example.json",
                  "name": "example.json",
                  "folder": false,
                  "children": [],
                  "updatedAt": 1608049506,
                  "createdAt": 1608049506,
                  "archivedAt": 0
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      }
    },
    "/cms/v3/source-code/{environment}/validate/{path}": {
      "post": {
        "tags": [
            "Validation"
        ],
        "summary": "Validate the contents of a file",
        "description": "Validates the file contents passed to the endpoint given a specified path and environment. Accepts multipart/form-data content type.",
        "operationId": "post-/cms/v3/source-code/{environment}/validate/{path}_doValidate",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "The file system location of the file.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The file to validate.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ],
        "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
        ]
      }
    },
    "/cms/v3/blogs/posts": {
      "get": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Get all Blog Posts",
        "description": "Get the list of blog posts. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId": "get-/cms/v3/blogs/posts_getPage",
        "parameters": [
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return Blog Posts created at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return Blog Posts created after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return Blog Posts created before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return Blog Posts last updated at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return Blog Posts last updated after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return Blog Posts last updated before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 20.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalBlogPostForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Create a new Blog Post",
        "description": "Create a new Blog Post.",
        "operationId": "post-/cms/v3/blogs/posts_create",
        "requestBody": {
          "description": "The JSON representation of a new Blog Post.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/batch/archive": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Delete a batch of Blog Posts",
        "description": "Delete the Blog Post objects identified in the request body.\nNote: This is not the same as the in-app `archive` function. To perform a dashboard `archive` send an normal update with the `archivedInDashboard` field set to true.",
        "operationId": "post-/cms/v3/blogs/posts/batch/archive_archiveBatch",
        "requestBody": {
          "description": "The JSON array of Blog Post ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/batch/create": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Create a batch of Blog Posts",
        "description": "Create the Blog Post objects detailed in the request body.",
        "operationId": "post-/cms/v3/blogs/posts/batch/create_createBatch",
        "requestBody": {
          "description": "The JSON array of new Blog Posts to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputBlogPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/batch/read": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Retrieve a batch of Blog Posts",
        "description": "Retrieve the Blog Post objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/posts/batch/read_readBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON array of Blog Post ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/batch/update": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Update a batch of Blog Posts",
        "description": "Update the Blog Post objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/posts/batch/update_updateBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Posts. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON array of the JSON representations of the updated Blog Posts.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/clone": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Clone a Blog Post",
        "description": "Clone a Blog Post.",
        "operationId": "post-/cms/v3/blogs/posts/clone_clone",
        "requestBody": {
          "description": "The JSON representation of the ContentCloneRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentCloneRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/attach-to-lang-group": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Attach a Blog Post to a multi-language group",
        "description": "Attach a Blog Post to a multi-language group.",
        "operationId": "post-/cms/v3/blogs/posts/multi-language/attach-to-lang-group_attachToLangGroup",
        "requestBody": {
          "description": "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/create-language-variation": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Create a new language variation",
        "description": "Create a new language variation from an existing Blog Post",
        "operationId": "post-/cms/v3/blogs/posts/multi-language/create-language-variation_createLangVariation",
        "requestBody": {
          "description": "The JSON representation of the BlogPostLanguageCloneRequestVNext object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogPostLanguageCloneRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/detach-from-lang-group": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Detach a Blog Post from a multi-language group",
        "description": "Detach a Blog Post from a multi-language group.",
        "operationId": "post-/cms/v3/blogs/posts/multi-language/detach-from-lang-group_detachFromLangGroup",
        "requestBody": {
          "description": "The JSON representation of the DetachFromLangGroupRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/set-new-lang-primary": {
      "put": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Set a new primary language",
        "description": "Set a Blog Post as the primary language of a multi-language group.",
        "operationId": "put-/cms/v3/blogs/posts/multi-language/set-new-lang-primary_setLangPrimary",
        "requestBody": {
          "description": "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/update-languages": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Update languages of multi-language group",
        "description": "Explicitly set new languages for each Blog Post in a multi-language group.",
        "operationId": "post-/cms/v3/blogs/posts/multi-language/update-languages_updateLangs",
        "requestBody": {
          "description": "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/schedule": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Schedule a Blog Post to be Published",
        "description": "Schedule a Blog Post to be Published.",
        "operationId": "post-/cms/v3/blogs/posts/schedule_schedule",
        "requestBody": {
          "description": "The JSON representation of the ContentScheduleRequestVNext object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentScheduleRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}": {
      "get": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Retrieve a Blog Post",
        "description": "Retrieve the Blog Post object identified by the id in the path.",
        "operationId": "get-/cms/v3/blogs/posts/{objectId}_getById",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Delete a Blog Post",
        "description": "Delete the Blog Post object identified by the id in the path.",
        "operationId": "delete-/cms/v3/blogs/posts/{objectId}_archive",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Update a Blog Post",
        "description": "Sparse updates a single Blog Post object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId": "patch-/cms/v3/blogs/posts/{objectId}_update",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Posts. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the updated Blog Post.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft": {
      "get": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Retrieve the full draft version of the Blog Post",
        "description": "Retrieve the full draft version of the Blog Post.",
        "operationId": "get-/cms/v3/blogs/posts/{objectId}/draft_getDraftById",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Update a Blog Post draft",
        "description": "Sparse updates the draft version of a single Blog Post object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId": "patch-/cms/v3/blogs/posts/{objectId}/draft_updateDraft",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the updated Blog Post to be applied to the draft.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft/push-live": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Push Blog Post draft edits live",
        "description": "Take any changes from the draft version of the Blog Post and apply them to the live version.",
        "operationId": "post-/cms/v3/blogs/posts/{objectId}/draft/push-live_pushLive",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The id of the Blog Post for which it's draft will be pushed live.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft/reset": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Reset the Blog Post draft to the live version",
        "description": "Discards any edits and resets the draft to the live version.",
        "operationId": "post-/cms/v3/blogs/posts/{objectId}/draft/reset_resetDraft",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The id of the Blog Post for which it's draft will be reset.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions": {
      "get": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Retrieves all the previous versions of a blog post",
        "description": "Retrieves all the previous versions of a blog post.",
        "operationId": "get-/cms/v3/blogs/posts/{objectId}/revisions_getPreviousVersions",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalVersionBlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}": {
      "get": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Retrieves a previous version of a blog post",
        "description": "Retrieves a previous version of a blog post.",
        "operationId": "get-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}_getPreviousVersion",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "description": "The Blog Post version id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionBlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Restore a previous version of a blog post",
        "description": "Takes a specified version of a blog post and restores it.",
        "operationId": "post-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore_restorePreviousVersion",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "description": "The Blog Post version id to restore.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore-to-draft": {
      "post": {
        "tags": [
            "Blog Posts"
        ],
        "summary": "Restore a previous version of a blog post, to the draft version of the blog post",
        "description": "Takes a specified version of a blog post, sets it as the new draft version of the blog post.",
        "operationId": "post-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore-to-draft_restorePreviousVersionToDraft",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Post id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "description": "The Blog Post version id to restore.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors": {
      "get": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Get all Blog Authors",
        "description": "Get the list of blog authors. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId": "get-/cms/v3/blogs/authors_getPage",
        "parameters": [
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return Blog Authors created at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return Blog Authors created after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return Blog Authors created before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return Blog Authors last updated at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return Blog Authors last updated after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return Blog Authors last updated before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Authors. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalBlogAuthorForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Create a new Blog Author",
        "description": "Create a new Blog Author.",
        "operationId": "post-/cms/v3/blogs/authors_create",
        "requestBody": {
          "description": "The JSON representation of a new Blog Author.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogAuthor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/batch/archive": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Delete a batch of Blog Authors",
        "description": "Delete the Blog Author objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/authors/batch/archive_archiveBatch",
        "requestBody": {
          "description": "The JSON array of Blog Author ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/batch/create": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Create a batch of Blog Authors",
        "description": "Create the Blog Author objects detailed in the request body.",
        "operationId": "post-/cms/v3/blogs/authors/batch/create_createBatch",
        "requestBody": {
          "description": "The JSON array of new Blog Authors to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputBlogAuthor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/batch/read": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Retrieve a batch of Blog Authors",
        "description": "Retrieve the Blog Author objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/authors/batch/read_readBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Authors. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON array of Blog Author ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/batch/update": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Update a batch of Blog Authors",
        "description": "Update the Blog Author objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/authors/batch/update_updateBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Authors. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON array of the JSON representations of the updated Blog Authors.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/attach-to-lang-group": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Attach a Blog Author to a multi-language group",
        "description": "Attach a Blog Author to a multi-language group.",
        "operationId": "post-/cms/v3/blogs/authors/multi-language/attach-to-lang-group_attachToLangGroup",
        "requestBody": {
          "description": "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/create-language-variation": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Create a new language variation",
        "description": "Create a new language variation from an existing Blog Author.",
        "operationId": "post-/cms/v3/blogs/authors/multi-language/create-language-variation_createLangVariation",
        "requestBody": {
          "description": "The JSON representation of the ContentLanguageCloneRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogAuthorCloneRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/detach-from-lang-group": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Detach a Blog Author from a multi-language group",
        "description": "Detach a Blog Author from a multi-language group.",
        "operationId": "post-/cms/v3/blogs/authors/multi-language/detach-from-lang-group_detachFromLangGroup",
        "requestBody": {
          "description": "The JSON representation of the DetachFromLangGroupRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/set-new-lang-primary": {
      "put": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Set a new primary language",
        "description": "Set a Blog Author as the primary language of a multi-language group.",
        "operationId": "put-/cms/v3/blogs/authors/multi-language/set-new-lang-primary_setLangPrimary",
        "requestBody": {
          "description": "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/update-languages": {
      "post": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Update languages of multi-language group",
        "description": "Explicitly set new languages for each Blog Author in a multi-language group.",
        "operationId": "post-/cms/v3/blogs/authors/multi-language/update-languages_updateLangs",
        "requestBody": {
          "description": "The JSON representation of the UpdateLanguagesRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/authors/{objectId}": {
      "get": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Retrieve a Blog Author",
        "description": "Retrieve the Blog Author object identified by the id in the path.",
        "operationId": "get-/cms/v3/blogs/authors/{objectId}_getById",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Author id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Authors. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Delete a Blog Author",
        "description": "Delete the Blog Author object identified by the id in the path.",
        "operationId": "delete-/cms/v3/blogs/authors/{objectId}_archive",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Author id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Blog Authors"
        ],
        "summary": "Update a Blog Author",
        "description": "Sparse updates a single Blog Author object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId": "patch-/cms/v3/blogs/authors/{objectId}_update",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Author id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Authors. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the updated Blog Author.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogAuthor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/url-redirects/": {
      "get": {
        "tags": [
            "Redirects"
        ],
        "summary": "Get current redirects",
        "description": "Returns all existing URL redirects. Results can be limited and filtered by creation or updated date.",
        "operationId": "get-/cms/v3/url-redirects/_getPage",
        "parameters": [
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return redirects created on exactly this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return redirects created after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return redirects created before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return redirects last updated on exactly this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return redirects last updated after this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return redirects last updated before this date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of result per page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalUrlMappingForwardPaging"
                },
                "example": {
                  "total": 2,
                  "results": [
                    {
                      "id": "3212223134",
                      "createdAt": "2017-07-24T17:24:09.141Z",
                      "updatedAt": "2017-07-24T17:24:09.141Z",
                      "routePrefix": "http://test.hs-sites.com/(?P<page_slug>.*)",
                      "destination": "http://www.example.online/{page_slug}",
                      "redirectStyle": 301,
                      "isOnlyAfterNotFound": true,
                      "isMatchFullUrl": true,
                      "isMatchQueryString": false,
                      "isPattern": false,
                      "isTrailingSlashOptional": true,
                      "isProtocolAgnostic": true,
                      "precedence": 3
                    },
                    {
                      "id": "3212242073",
                      "createdAt": "2017-07-25T15:42:06.410Z",
                      "updatedAt": "2017-07-25T15:42:06.410Z",
                      "routePrefix": "/mytest/(?P<page_slug>.*)",
                      "destination": "/newtest/{page_slug}",
                      "redirectStyle": 301,
                      "isOnlyAfterNotFound": true,
                      "isMatchFullUrl": true,
                      "isMatchQueryString": false,
                      "isPattern": false,
                      "isTrailingSlashOptional": true,
                      "isProtocolAgnostic": true,
                      "precedence": 999999993
                    }
                  ],
                  "paging": {
                    "next": {
                      "after": "Mg%3D%3D",
                      "link": "https://api.hubspot.com/cms/v3/url-redirects?after=Mg%3D%3D"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Redirects"
        ],
        "summary": "Create a redirect",
        "description": "Creates and configures a new URL redirect.",
        "operationId": "post-/cms/v3/url-redirects/_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlMappingCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlMapping"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/url-redirects/{urlRedirectId}": {
      "get": {
        "tags": [
            "Redirects"
        ],
        "summary": "Get details for a redirect",
        "description": "Returns the details for a single existing URL redirect by ID.",
        "operationId": "get-/cms/v3/url-redirects/{urlRedirectId}_getById",
        "parameters": [
          {
            "name": "urlRedirectId",
            "in": "path",
            "description": "The ID of the target redirect.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlMapping"
                },
                "example": {
                  "id": "3212223134",
                  "createdAt": "2017-07-24T17:24:09.141Z",
                  "updatedAt": "2017-07-24T17:24:09.141Z",
                  "routePrefix": "http://test.hs-sites.com/(?P<page_slug>.*)",
                  "destination": "http://www.example.online/{page_slug}",
                  "isOnlyAfterNotFound": true,
                  "isMatchFullUrl": true,
                  "isMatchQueryString": false,
                  "isPattern": false,
                  "isTrailingSlashOptional": true,
                  "isProtocolAgnostic": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Redirects"
        ],
        "summary": "Delete a redirect",
        "description": "Delete one existing redirect, so it is no longer mapped.",
        "operationId": "delete-/cms/v3/url-redirects/{urlRedirectId}_archive",
        "parameters": [
          {
            "name": "urlRedirectId",
            "in": "path",
            "description": "The ID of the target redirect.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete succeeded",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Redirects"
        ],
        "summary": "Update a redirect",
        "description": "Updates the settings for an existing URL redirect.",
        "operationId": "patch-/cms/v3/url-redirects/{urlRedirectId}_update",
        "parameters": [
          {
            "name": "urlRedirectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlMapping"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/performance/": {
      "get": {
        "tags": [
            "Public_Performance"
        ],
        "summary": "View your website's performance.",
        "description": "Returns time series data website performance data for the given domain and/or path.",
        "operationId": "get-/cms/v3/performance/_getPage",
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "The domain to search return data for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "The url path of the domain to return data for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pad",
            "in": "query",
            "description": "Specifies whether the time series data should have empty intervals if performance data is not present to create a continuous set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Specifies whether the time series data should be summated for the given period. Defaults to false.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "A relative period to return time series data for. This value is ignored if start and/or end are provided. Valid periods: [15m, 30m, 1h, 4h, 12h, 1d, 1w]",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The time series interval to group data by. Valid intervals: [1m, 5m, 15m, 30m, 1h, 4h, 12h, 1d, 1w]",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "A timestamp in milliseconds that indicates the start of the time period.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "A timestamp in milliseconds that indicates the end of the time period.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicPerformanceResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": []
      }
    },
    "/cms/v3/performance/uptime": {
      "get": {
        "tags": [
            "Public_Performance"
        ],
        "summary": "View your website's uptime.",
        "description": "Returns uptime time series website performance data for the given domain.",
        "operationId": "get-/cms/v3/performance/uptime_getUptime",
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "The domain to search return data for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pad",
            "in": "query",
            "description": "Specifies whether the time series data should have empty intervals if performance data is not present to create a continuous set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Specifies whether the time series data should be summated for the given period. Defaults to false.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "A relative period to return time series data for. This value is ignored if start and/or end are provided. Valid periods: [15m, 30m, 1h, 4h, 12h, 1d, 1w]",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The time series interval to group data by. Valid intervals: [1m, 5m, 15m, 30m, 1h, 4h, 12h, 1d, 1w]",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "A timestamp in milliseconds that indicates the start of the time period.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "A timestamp in milliseconds that indicates the end of the time period.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicPerformanceResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": []
      }
    },
    "/cms/v3/hubdb/tables": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Get all published tables",
        "description": "Returns the details for the `published` version of each table defined in an account, including column definitions.",
        "operationId": "get-/cms/v3/hubdb/tables_getAllTables",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return tables created at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return tables created after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return tables created before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return tables last updated at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return tables last updated after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return tables last updated before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return archived tables. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Create a new table",
        "description": "Creates a new draft HubDB table given a JSON schema. The table name and label should be unique for each account.",
        "operationId": "post-/cms/v3/hubdb/tables_createTable",
        "requestBody": {
          "description": "The JSON schema for the table being created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/draft": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Return all draft tables",
        "description": "Returns the details for each draft table defined in the specified account, including column definitions.",
        "operationId": "get-/cms/v3/hubdb/tables/draft_getAllDraftTables",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return tables created at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return tables created after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return tables created before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return tables last updated at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return tables last updated after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return tables last updated before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return archived tables. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Get details for a published table",
        "description": "Returns the details for the `published` version of the specified table. This will include the definitions for the columns in the table and the number of rows in the table.\n\n**Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}_getTableDetails",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to return.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Set this to `true` to return details for an archived table. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the result.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Tables"
        ],
        "summary": "Archive a table",
        "description": "Archive (soft delete) an existing HubDB table. This archives both the published and draft versions.",
        "operationId": "delete-/cms/v3/hubdb/tables/{tableIdOrName}_archiveTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to archive.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Get details for a draft table",
        "description": "Get the details for the `draft` version of a specific HubDB table. This will include the definitions for the columns in the table and the number of rows in the table.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft_getDraftTableDetailsById",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to return.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Set this to `true` to return an archived table. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the result.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Tables"
        ],
        "summary": "Update an existing table",
        "description": "Update an existing HubDB table. You can use this endpoint to add or remove columns to the table as well as restore an archived table. Tables updated using the endpoint will only modify the `draft` verion of the table. Use `publish` endpoint to push all the changes to the `published` version. To restore a table, include the query parameter `archived=true` and `\"archived\": false` in the json body.\n**Note:** You need to include all the columns in the input when you are adding/removing/updating a column. If you do not include an already existing column in the request, it will be deleted.",
        "operationId": "patch-/cms/v3/hubdb/tables/{tableIdOrName}/draft_updateDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return archived tables. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the result.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON schema for the table being updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft/clone": {
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Clone a table",
        "description": "Clone an existing HubDB table. The `newName` and `newLabel` of the new table can be sent as JSON in the `body` parameter. This will create the cloned table as a `draft`.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/clone_cloneDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to clone.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object with the properties newName and newLabel. You can set copyRows to false to clone the table with copying rows and default is true.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableCloneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft/export": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Export a draft table",
        "description": "Exports the `draft` version of a table to CSV / EXCEL format.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft/export_exportDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to export.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The file format to export. Possible values include `CSV`, `XLSX`, and `XLS`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft/import": {
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Import data into draft table",
        "description": "Import the contents of a CSV file into an existing HubDB table. The data will always be imported into the `draft` version of the table. Use `/publish` endpoint to push these changes to `published` version.\nThis endpoint takes a multi-part POST request. The first part will be a set of JSON-formatted options for the import and you can specify this with the name as `config`.  The second part will be the CSV file you want to import and you can specify this with the name as `file`. Refer the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#importing-tables) to check the details and format of the JSON-formatted options for the import.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/import_importDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID of the destination table where data will be imported.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "config": {
                    "type": "string",
                    "description": "Configuration for the import in JSON format as described above."
                  },
                  "file": {
                    "type": "string",
                    "description": "The source CSV file to be imported.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResult"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft/publish": {
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Publish a table from draft",
        "description": "Publishes the table by copying the data and table schema changes from draft version to the published version, meaning any website pages using data from the table will be updated.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/publish_publishDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to publish.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/draft/reset": {
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Reset a draft table",
        "description": "Replaces the data in the `draft` version of the table with values from the `published` version. Any unpublished changes in the `draft` will be lost after this call is made.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/reset_resetDraftTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to reset.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/export": {
      "get": {
        "tags": [
            "Tables"
        ],
        "summary": "Export a published version of a table",
        "description": "Exports the `published` version of a table to CSV / EXCEL format.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/export_exportTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to export.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The file format to export. Possible values include `CSV`, `XLSX`, and `XLS`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows": {
      "get": {
        "tags": [
            "Rows"
        ],
        "summary": "Get rows for a table",
        "description": "Returns a set of rows in the `published` version of the specified table. Row results can be filtered and sorted. Filtering and sorting options will be sent as query parameters to the API request. For example, by adding the query parameters `column1__gt=5&sort=-column1`, API returns the rows with values for column `column1` greater than 5 and in the descending order of `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows) for detailed filtering and sorting options.\n**Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows_getTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to query.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the column names to sort the results by. See the above description for more details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is `1000`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Specify the column names to get results containing only the required columns instead of all column details.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalHubDbTableRowV3ForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Rows"
        ],
        "summary": "Add a new row to a table",
        "description": "Add a new row to a HubDB table. New rows will be added to the `draft` version of the table. Use `publish` endpoint to push these changes to published version.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows_createTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the target table.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The row definition JSON, formatted as described above.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableRowV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Get a set of rows",
        "description": "Returns rows in the `published` version of the specified table, given a set of row ids.\n**Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read_batchReadTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to query.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON array of row ids",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3WithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft": {
      "get": {
        "tags": [
            "Rows"
        ],
        "summary": "Get rows from draft table",
        "description": "Returns rows in the `draft` version of the specified table. Row results can be filtered and sorted. Filtering and sorting options will be sent as query parameters to the API request. For example, by adding the query parameters `column1__gt=5&sort=-column1`, API returns the rows with values for column `column1` greater than 5 and in the descending order of `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows) for detailed filtering and sorting options.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft_readDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to query.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the column names to sort the results by.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is `1000`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Specify the column names to get results containing only the required columns instead of all column details. If you want to include multiple columns in the result, use this query param as many times. ",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalHubDbTableRowV3ForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Clone rows in batch",
        "description": "Clones rows in the `draft` version of the specified table, given a set of row ids.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone_batchCloneDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON array of row ids",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Create rows in batch",
        "description": "Creates rows in the `draft` version of the specified table, given an array of row objects. See the overview section for more details with an example.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create_batchCreateDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON array of row objects",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputHubDbTableRowV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3WithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Permanently deletes rows",
        "description": "Permanently deletes rows from the `draft` version of the table, given a set of row ids.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge_batchPurgeDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON array of row ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Get a set of rows from draft table",
        "description": "Returns rows in the `draft` version of the specified table, given a set of row ids.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read_batchReadDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON array of row ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3WithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Replace rows in batch in draft table",
        "description": "Replaces multiple rows as a batch in the `draft` version of the table. See the endpoint `PUT /tables/{tableIdOrName}/rows/{rowId}/draft` for details on updating a single row.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace_batchReplaceDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON array of row objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputHubDbTableRowV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3WithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update": {
      "post": {
        "tags": [
            "Rows Batch"
        ],
        "summary": "Update rows in batch in draft table",
        "description": "Updates multiple rows as a batch in the `draft` version of the table. See the endpoint `PATCH /tables/{tableIdOrName}/rows/{rowId}/draft` for details on updating a single row.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update_batchUpdateDraftTableRows",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON array of row objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputJsonNode1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseHubDbTableRowV3WithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}": {
      "get": {
        "tags": [
            "Rows"
        ],
        "summary": "Get a table row",
        "description": "Get a single row by ID from a table's `published` version.\n**Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}_getTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft": {
      "get": {
        "tags": [
            "Rows"
        ],
        "summary": "Get a row from the draft table",
        "description": "Get a single row by ID from a table's `draft` version.",
        "operationId": "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_getDraftTableRowById",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "put": {
        "tags": [
            "Rows"
        ],
        "summary": "Replaces an existing row",
        "description": "Replace a single row in the table's `draft` version.\nAll the column values must be specified. If a column has a value in the target table and this request doesn't define that value, it will be deleted.\nSee the `Create a row` endpoint for instructions on how to format the JSON row definitions.",
        "operationId": "put-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_replaceDraftTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON object of the row",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableRowV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Rows"
        ],
        "summary": "Permanently deletes a row",
        "description": "Permanently deletes a row from a table's `draft` version.",
        "operationId": "delete-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_purgeDraftTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Rows"
        ],
        "summary": "Updates an existing row",
        "description": "Sparse updates a single row in the table's `draft` version.\nAll the column values need not be specified. Only the columns or fields that needs to be modified can be specified.\nSee the `Create a row` endpoint for instructions on how to format the JSON row definitions.",
        "operationId": "patch-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_updateDraftTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON object of the row with necessary fields that needs to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubDbTableRowV3Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone": {
      "post": {
        "tags": [
            "Rows"
        ],
        "summary": "Clone a row",
        "description": "Clones a single row in the `draft` version of the table.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone_cloneDraftTableRow",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowId",
            "in": "path",
            "description": "The ID of the row",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "\\d+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableRowV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/hubdb/tables/{tableIdOrName}/unpublish": {
      "post": {
        "tags": [
            "Tables"
        ],
        "summary": "Unpublish a table",
        "description": "Unpublishes the table, meaning any website pages using data from the table will not render any data.",
        "operationId": "post-/cms/v3/hubdb/tables/{tableIdOrName}/unpublish_unpublishTable",
        "parameters": [
          {
            "name": "tableIdOrName",
            "in": "path",
            "description": "The ID or name of the table to publish.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeForeignIds",
            "in": "query",
            "description": "Set this to `true` to populate foreign ID values in the response.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubDbTableV3"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "hubdb"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags": {
      "get": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Get all Blog Tags",
        "description": "Get the list of blog tags. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId": "get-/cms/v3/blogs/tags_getPage",
        "parameters": [
          {
            "name": "createdAt",
            "in": "query",
            "description": "Only return Blog Tags created at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return Blog Tags created after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return Blog Tags created before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Only return Blog Tags last updated at exactly the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return Blog Tags last updated after the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return Blog Tags last updated before the specified time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Default is 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseWithTotalTagForwardPaging"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Create a new Blog Tag",
        "description": "Create a new Blog Tag.",
        "operationId": "post-/cms/v3/blogs/tags_create",
        "requestBody": {
          "description": "The JSON representation of a new Blog Tag.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/batch/archive": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Delete a batch of Blog Tags",
        "description": "Delete the Blog Tag objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/tags/batch/archive_archiveBatch",
        "requestBody": {
          "description": "The JSON array of Blog Tag ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/batch/create": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Create a batch of Blog Tags",
        "description": "Create the Blog Tag objects detailed in the request body.",
        "operationId": "post-/cms/v3/blogs/tags/batch/create_createBatch",
        "requestBody": {
          "description": "The JSON array of new Blog Tags to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputTag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/batch/read": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Retrieve a batch of Blog Tags",
        "description": "Retrieve the Blog Tag objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/tags/batch/read_readBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON array of Blog Tag ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/batch/update": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Update a batch of Blog Tags",
        "description": "Update the Blog Tag objects identified in the request body.",
        "operationId": "post-/cms/v3/blogs/tags/batch/update_updateBatch",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Tags. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON array of the JSON representations of the updated Blog Tags.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207": {
            "description": "multiple statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/attach-to-lang-group": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Attach a Blog Tag to a multi-language group",
        "description": "Attach a Blog Tag to a multi-language group.",
        "operationId": "post-/cms/v3/blogs/tags/multi-language/attach-to-lang-group_attachToLangGroup",
        "requestBody": {
          "description": "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/create-language-variation": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Create a new language variation",
        "description": "Create a new language variation from an existing Blog Tag",
        "operationId": "post-/cms/v3/blogs/tags/multi-language/create-language-variation_createLangVariation",
        "requestBody": {
          "description": "The JSON representation of the ContentLanguageCloneRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCloneRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/detach-from-lang-group": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Detach a Blog Tag from a multi-language group",
        "description": "Detach a Blog Tag from a multi-language group.",
        "operationId": "post-/cms/v3/blogs/tags/multi-language/detach-from-lang-group_detachFromLangGroup",
        "requestBody": {
          "description": "The JSON representation of the DetachFromLangGroupRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/set-new-lang-primary": {
      "put": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Set a new primary language",
        "description": "Set a Blog Tag as the primary language of a multi-language group.",
        "operationId": "put-/cms/v3/blogs/tags/multi-language/set-new-lang-primary_setLangPrimary",
        "requestBody": {
          "description": "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/update-languages": {
      "post": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Update languages of multi-language group",
        "description": "Explicitly set new languages for each Blog Tag in a multi-language group.",
        "operationId": "post-/cms/v3/blogs/tags/multi-language/update-languages_updateLangs",
        "requestBody": {
          "description": "The JSON representation of the UpdateLanguagesRequest object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/blogs/tags/{objectId}": {
      "get": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Retrieve a Blog Tag",
        "description": "Retrieve the Blog Tag object identified by the id in the path.",
        "operationId": "get-/cms/v3/blogs/tags/{objectId}_getById",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Tag id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Delete a Blog Tag",
        "description": "Delete the Blog Tag object identified by the id in the path.",
        "operationId": "delete-/cms/v3/blogs/tags/{objectId}_archive",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Tag id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
            "Blog Tags"
        ],
        "summary": "Update a Blog Tag",
        "description": "Sparse updates a single Blog Tag object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId": "patch-/cms/v3/blogs/tags/{objectId}_update",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "The Blog Tag id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Specifies whether to update deleted Blog Tags. Defaults to `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the updated Blog Tag.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/audit-logs/": {
      "get": {
        "tags": [
            "Audit_Logs"
        ],
        "summary": "Query audit logs",
        "description": "Returns audit logs based on filters.",
        "operationId": "get-/cms/v3/audit-logs/_getPage",
        "parameters": [
          {
            "name": "objectId",
            "in": "query",
            "description": "Comma separated list of object ids to filter by.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Comma separated list of user ids to filter by.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Timestamp after which audit logs will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Timestamp before which audit logs will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort direction for the audit logs. (Can only sort by timestamp).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Comma separated list of event types to filter by (CREATED, UPDATED, PUBLISHED, DELETED, UNPUBLISHED).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of logs to return.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Comma separated list of object types to filter by (BLOG, LANDING_PAGE, DOMAIN, HUBDB_TABLE etc.)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponsePublicAuditLog"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/site-search/indexed-data/{contentId}": {
      "get": {
        "tags": [
            "Public"
        ],
        "summary": "Get indexed properties.",
        "description": "For a given account and document ID (page ID, blog post ID, HubDB row ID, etc.), return all indexed data for that document. This is useful when debugging why a particular document is not returned from a custom search.",
        "operationId": "get-/cms/v3/site-search/indexed-data/{contentId}_getById",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "ID of the target document when searching for indexed properties.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": ".*",
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of document. Can be one of `SITE_PAGE`, `BLOG_POST`, or `KNOWLEDGE_ARTICLE`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                  "LANDING_PAGE",
                  "BLOG_POST",
                  "SITE_PAGE",
                  "KNOWLEDGE_ARTICLE",
                  "LISTING_PAGE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexedData"
                },
                "example": {
                  "id": "24314356",
                  "type": "BLOG_POST",
                  "fields": {
                    "html_h2_nested.ja": {
                      "name": "html_h2_nested.ja",
                      "values": [
                          "Subscribe to Our Blog"
                      ],
                      "value": "Subscribe to Our Blog",
                      "metadataField": false
                    },
                    "hidden": {
                      "name": "hidden",
                      "values": [
                          false
                      ],
                      "value": false,
                      "metadataField": false
                    },
                    "html_other_nested.ja": {
                      "name": "html_other_nested.ja",
                      "values": [
                          "Customer Stories",
                          "Hire a Partner",
                          "We're committed to your privacy. HubSpot uses the information you provide to us to contact you about our relevant content, products, and services. You may unsubscribe from these communications at any time. For more information, check out our privacy policy .",
                          "@Kippbodnar",
                          "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of  Marketing Transformation Week , April 4-8, 2011."
                      ],
                      "value": "Customer Stories",
                      "metadataField": false
                    },
                    "language": {
                      "name": "language",
                      "values": [
                          "en-us"
                      ],
                      "value": "en-us",
                      "metadataField": false
                    },
                    "type": {
                      "name": "type",
                      "values": [
                          2
                      ],
                      "value": 2,
                      "metadataField": false
                    },
                    "featuredImageUrl": {
                      "name": "featuredImageUrl",
                      "values": [
                          "https://cdn2.hubspot.net/hubfs/53/assets/hubspot.com/buzz/HubSpotOpenGraph.png"
                      ],
                      "value": "https://cdn2.hubspot.net/hubfs/53/assets/hubspot.com/buzz/HubSpotOpenGraph.png",
                      "metadataField": false
                    },
                    "path": {
                      "name": "path",
                      "values": [
                          "/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx"
                      ],
                      "value": "/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx",
                      "metadataField": false
                    },
                    "title_nested.en": {
                      "name": "title_nested.en",
                      "values": [
                          "Inbound Marketing Vs. Outbound Marketing"
                      ],
                      "value": "Inbound Marketing Vs. Outbound Marketing",
                      "metadataField": false
                    },
                    "description_nested.en": {
                      "name": "description_nested.en",
                      "values": [
                          "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of Marketing Transformation Week, April 4"
                      ],
                      "value": "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of Marketing Transformation Week, April 4",
                      "metadataField": false
                    },
                    "portalId": {
                      "name": "portalId",
                      "values": [
                          53
                      ],
                      "value": 53,
                      "metadataField": false
                    },
                    "id": {
                      "name": "id",
                      "values": [
                          24314356
                      ],
                      "value": 24314356,
                      "metadataField": false
                    },
                    "tag": {
                      "name": "tag",
                      "values": [
                          "Inbound Marketing"
                      ],
                      "value": "Inbound Marketing",
                      "metadataField": false
                    },
                    "_routing": {
                      "name": "_routing",
                      "values": [
                          "53"
                      ],
                      "value": "53",
                      "metadataField": true
                    },
                    "path_tokenized": {
                      "name": "path_tokenized",
                      "values": [
                          "/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx"
                      ],
                      "value": "/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx",
                      "metadataField": false
                    },
                    "description_nested.ja": {
                      "name": "description_nested.ja",
                      "values": [
                          "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of Marketing Transformation Week, April 4"
                      ],
                      "value": "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of Marketing Transformation Week, April 4",
                      "metadataField": false
                    },
                    "html_h3_nested.ja": {
                      "name": "html_h3_nested.ja",
                      "values": [
                          "Free HubSpot CRM",
                          "App Marketplace",
                          "Subscribe via Email",
                          "Don't forget to share this post!",
                          "Related Articles",
                          "The Qualities of a Powerful Word-of-Mouth Marketing Strategy",
                          "[UPDATE] 7 Customer Loyalty Programs That Actually Add Value",
                          "The Ultimate Dictionary of Marketing Terms You Should Know",
                          "Download for Later"
                      ],
                      "value": "Free HubSpot CRM",
                      "metadataField": false
                    },
                    "name_nested.en": {
                      "name": "name_nested.en",
                      "values": [
                          "Inbound Marketing Vs. Outbound Marketing"
                      ],
                      "value": "Inbound Marketing Vs. Outbound Marketing",
                      "metadataField": false
                    },
                    "author_full_name": {
                      "name": "author_full_name",
                      "values": [
                          "Kipp Bodnar"
                      ],
                      "value": "Kipp Bodnar",
                      "metadataField": false
                    },
                    "html_all_nested.en": {
                      "name": "html_all_nested.en",
                      "values": [
                          "English",
                          "日本語",
                          "Deutsch",
                          "Español",
                          "Português",
                          "Français",
                          "Contact Us",
                          "Log in",
                          "Get HubSpot free",
                          "Software",
                          "All your contacts and companies, 100% free.",
                          "Marketing Hub",
                          "All-in-one marketing software, starting at $0/month.",
                          "Sales Hub",
                          "All-in-one sales software, starting at $0/month.",
                          "Service Hub",
                          "All-in-one customer service software, starting at $0/month.",
                          "New",
                          "Find HubSpot apps for the tools and software you use to run your business.",
                          "Pricing",
                          "Resources",
                          "Blog",
                          "Read marketing, sales, agency, and customer success blog content.",
                          "Hear from the businesses that use HubSpot to grow better every day.",
                          "Developers New",
                          "Create apps and custom integrations for businesses using HubSpot.",
                          "Ebooks, Guides & More",
                          "Get access to HubSpot’s most popular marketing resources.",
                          "Onboarding & Services",
                          "Find training and consulting services to help you thrive with HubSpot.",
                          "Research & Reports",
                          "Get up-to-date research and data on hot business trends.",
                          "Free Courses & Certifications",
                          "Take courses on the latest business trends, taught by industry experts.",
                          "What Is Inbound?",
                          "Get a primer on how inbound helps your business grow better.",
                          "Customer Support",
                          "Get help if you have questions about using HubSpot software.",
                          "Partners",
                          "Find a partner in our global community of service providers who can help you grow.",
                          "Partner With Us",
                          "Explore our sales, agency, and app partnership programs.",
                          "About",
                          "Company",
                          "About Us",
                          "Management Team",
                          "Board of Directors",
                          "Careers",
                          "News",
                          "HubSpot News",
                          "Press Resources",
                          "Speakers",
                          "Investors",
                          "Investor Relations",
                          "Marketing",
                          "Sales",
                          "Service",
                          "Website",
                          "Subscribe",
                          "Stay up to date with the latest marketing, sales, and service tips and news.",
                          "Subscribe on Slack",
                          "Agency",
                          "Email Address",
                          "Back to other options",
                          "Thank You!",
                          "Marketing | 1 min read",
                          "Written by Kipp Bodnar",
                          "Originally published Apr 6, 2011 6:51:00 PM, updated March 21 2013",
                          "Topics:",
                          "Inbound Marketing",
                          "Marketing  | 5 min read",
                          "Marketing  | 12 min read",
                          "Marketing  | 32 min read"
                      ],
                      "value": "English",
                      "metadataField": false
                    },
                    "contentGroupId": {
                      "name": "contentGroupId",
                      "values": [
                          58774
                      ],
                      "value": 58774,
                      "metadataField": false
                    },
                    "title_nested.ja": {
                      "name": "title_nested.ja",
                      "values": [
                          "Inbound Marketing Vs. Outbound Marketing"
                      ],
                      "value": "Inbound Marketing Vs. Outbound Marketing",
                      "metadataField": false
                    },
                    "html_h3_nested.en": {
                      "name": "html_h3_nested.en",
                      "values": [
                          "Free HubSpot CRM",
                          "App Marketplace",
                          "Subscribe via Email",
                          "Don't forget to share this post!",
                          "Related Articles",
                          "The Qualities of a Powerful Word-of-Mouth Marketing Strategy",
                          "[UPDATE] 7 Customer Loyalty Programs That Actually Add Value",
                          "The Ultimate Dictionary of Marketing Terms You Should Know",
                          "Download for Later"
                      ],
                      "value": "Free HubSpot CRM",
                      "metadataField": false
                    },
                    "author_handle": {
                      "name": "author_handle",
                      "values": [
                          "@Kippbodnar"
                      ],
                      "value": "@Kippbodnar",
                      "metadataField": false
                    },
                    "url": {
                      "name": "url",
                      "values": [
                          "https://blog.hubspot.com/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx"
                      ],
                      "value": "https://blog.hubspot.com/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx",
                      "metadataField": false
                    },
                    "name_nested.ja": {
                      "name": "name_nested.ja",
                      "values": [
                          "Inbound Marketing Vs. Outbound Marketing"
                      ],
                      "value": "Inbound Marketing Vs. Outbound Marketing",
                      "metadataField": false
                    },
                    "analyticsPageId": {
                      "name": "analyticsPageId",
                      "values": [
                          "6307-11692"
                      ],
                      "value": "6307-11692",
                      "metadataField": false
                    },
                    "publicAccessRulesEnabled": {
                      "name": "publicAccessRulesEnabled",
                      "values": [
                          false
                      ],
                      "value": false,
                      "metadataField": false
                    },
                    "html_h2_nested.en": {
                      "name": "html_h2_nested.en",
                      "values": [
                          "Subscribe to Our Blog"
                      ],
                      "value": "Subscribe to Our Blog",
                      "metadataField": false
                    },
                    "domain": {
                      "name": "domain",
                      "values": [
                          "blog.hubspot.com"
                      ],
                      "value": "blog.hubspot.com",
                      "metadataField": false
                    },
                    "html_all_nested.ja": {
                      "name": "html_all_nested.ja",
                      "values": [
                          "English",
                          "日本語",
                          "Deutsch",
                          "Español",
                          "Português",
                          "Français",
                          "Contact Us",
                          "Log in",
                          "Get HubSpot free",
                          "Software",
                          "All your contacts and companies, 100% free.",
                          "Marketing Hub",
                          "All-in-one marketing software, starting at $0/month.",
                          "Sales Hub",
                          "All-in-one sales software, starting at $0/month.",
                          "Service Hub",
                          "All-in-one customer service software, starting at $0/month.",
                          "New",
                          "Find HubSpot apps for the tools and software you use to run your business.",
                          "Pricing",
                          "Resources",
                          "Blog",
                          "Read marketing, sales, agency, and customer success blog content.",
                          "Hear from the businesses that use HubSpot to grow better every day.",
                          "Developers New",
                          "Create apps and custom integrations for businesses using HubSpot.",
                          "Ebooks, Guides & More",
                          "Get access to HubSpot’s most popular marketing resources.",
                          "Onboarding & Services",
                          "Find training and consulting services to help you thrive with HubSpot.",
                          "Research & Reports",
                          "Get up-to-date research and data on hot business trends.",
                          "Free Courses & Certifications",
                          "Take courses on the latest business trends, taught by industry experts.",
                          "What Is Inbound?",
                          "Get a primer on how inbound helps your business grow better.",
                          "Customer Support",
                          "Get help if you have questions about using HubSpot software.",
                          "Partners",
                          "Find a partner in our global community of service providers who can help you grow.",
                          "Partner With Us",
                          "Explore our sales, agency, and app partnership programs.",
                          "About",
                          "Company",
                          "About Us",
                          "Management Team",
                          "Board of Directors",
                          "Careers",
                          "News",
                          "HubSpot News",
                          "Press Resources",
                          "Speakers",
                          "Investors",
                          "Investor Relations",
                          "Marketing",
                          "Sales",
                          "Service",
                          "Website",
                          "Subscribe",
                          "Stay up to date with the latest marketing, sales, and service tips and news.",
                          "Subscribe on Slack",
                          "Agency",
                          "Email Address",
                          "Back to other options",
                          "Thank You!",
                          "Marketing | 1 min read",
                          "Written by Kipp Bodnar",
                          "Originally published Apr 6, 2011 6:51:00 PM, updated March 21 2013",
                          "Topics:",
                          "Inbound Marketing",
                          "Marketing  | 5 min read",
                          "Marketing  | 12 min read",
                          "Marketing  | 32 min read"
                      ],
                      "value": "English",
                      "metadataField": false
                    },
                    "author_full_name_raw": {
                      "name": "author_full_name_raw",
                      "values": [
                          "Kipp Bodnar"
                      ],
                      "value": "Kipp Bodnar",
                      "metadataField": false
                    },
                    "publishedDate": {
                      "name": "publishedDate",
                      "values": [
                          1302130260000
                      ],
                      "value": 1302130260000,
                      "metadataField": false
                    },
                    "html_other_nested.en": {
                      "name": "html_other_nested.en",
                      "values": [
                          "Customer Stories",
                          "Hire a Partner",
                          "We're committed to your privacy. HubSpot uses the information you provide to us to contact you about our relevant content, products, and services. You may unsubscribe from these communications at any time. For more information, check out our privacy policy .",
                          "@Kippbodnar",
                          "This blog post is one of several Marketing Transformation Success Stories we'll be featuring in celebration of  Marketing Transformation Week , April 4-8, 2011."
                      ],
                      "value": "Customer Stories",
                      "metadataField": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    },
    "/cms/v3/site-search/search": {
      "get": {
        "tags": [
            "Public"
        ],
        "summary": "Search your site.",
        "description": "Returns any website content matching the given search criteria for a given HubSpot account. Searches can be filtered by content type, domain, or URL path.",
        "operationId": "get-/cms/v3/site-search/search_search",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The term to search for.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the number of results to be returned in a single response. Defaults to `10`. Maximum value is `100`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Used to page through the results. If there are more results than specified by the `limit` parameter, you will need to use the value of offset returned in the previous request to get the next set of results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Specifies the language of content to be searched. This value must be a valid [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `es` for Spanish)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                  "af",
                  "af-na",
                  "af-za",
                  "agq",
                  "agq-cm",
                  "ak",
                  "ak-gh",
                  "am",
                  "am-et",
                  "ar",
                  "ar-001",
                  "ar-ae",
                  "ar-bh",
                  "ar-dj",
                  "ar-dz",
                  "ar-eg",
                  "ar-eh",
                  "ar-er",
                  "ar-il",
                  "ar-iq",
                  "ar-jo",
                  "ar-km",
                  "ar-kw",
                  "ar-lb",
                  "ar-ly",
                  "ar-ma",
                  "ar-mr",
                  "ar-om",
                  "ar-ps",
                  "ar-qa",
                  "ar-sa",
                  "ar-sd",
                  "ar-so",
                  "ar-ss",
                  "ar-sy",
                  "ar-td",
                  "ar-tn",
                  "ar-ye",
                  "as",
                  "as-in",
                  "asa",
                  "asa-tz",
                  "ast",
                  "ast-es",
                  "az",
                  "az-az",
                  "bas",
                  "bas-cm",
                  "be",
                  "be-by",
                  "bem",
                  "bem-zm",
                  "bez",
                  "bez-tz",
                  "bg",
                  "bg-bg",
                  "bm",
                  "bm-ml",
                  "bn",
                  "bn-bd",
                  "bn-in",
                  "bo",
                  "bo-cn",
                  "bo-in",
                  "br",
                  "br-fr",
                  "brx",
                  "brx-in",
                  "bs",
                  "bs-ba",
                  "ca",
                  "ca-ad",
                  "ca-es",
                  "ca-fr",
                  "ca-it",
                  "ccp",
                  "ccp-bd",
                  "ccp-in",
                  "ce",
                  "ce-ru",
                  "ceb",
                  "ceb-ph",
                  "cgg",
                  "cgg-ug",
                  "chr",
                  "chr-us",
                  "ckb",
                  "ckb-iq",
                  "ckb-ir",
                  "cs",
                  "cs-cz",
                  "cu",
                  "cu-ru",
                  "cy",
                  "cy-gb",
                  "da",
                  "da-dk",
                  "da-gl",
                  "dav",
                  "dav-ke",
                  "de",
                  "de-at",
                  "de-be",
                  "de-ch",
                  "de-de",
                  "de-gr",
                  "de-it",
                  "de-li",
                  "de-lu",
                  "dje",
                  "dje-ne",
                  "doi",
                  "doi-in",
                  "dsb",
                  "dsb-de",
                  "dua",
                  "dua-cm",
                  "dyo",
                  "dyo-sn",
                  "dz",
                  "dz-bt",
                  "ebu",
                  "ebu-ke",
                  "ee",
                  "ee-gh",
                  "ee-tg",
                  "el",
                  "el-cy",
                  "el-gr",
                  "en",
                  "en-001",
                  "en-150",
                  "en-ae",
                  "en-ag",
                  "en-ai",
                  "en-as",
                  "en-at",
                  "en-au",
                  "en-bb",
                  "en-be",
                  "en-bi",
                  "en-bm",
                  "en-bs",
                  "en-bw",
                  "en-bz",
                  "en-ca",
                  "en-cc",
                  "en-ch",
                  "en-ck",
                  "en-cm",
                  "en-cx",
                  "en-cy",
                  "en-de",
                  "en-dg",
                  "en-dk",
                  "en-dm",
                  "en-er",
                  "en-fi",
                  "en-fj",
                  "en-fk",
                  "en-fm",
                  "en-gb",
                  "en-gd",
                  "en-gg",
                  "en-gh",
                  "en-gi",
                  "en-gm",
                  "en-gu",
                  "en-gy",
                  "en-hk",
                  "en-ie",
                  "en-il",
                  "en-im",
                  "en-in",
                  "en-io",
                  "en-je",
                  "en-jm",
                  "en-ke",
                  "en-ki",
                  "en-kn",
                  "en-ky",
                  "en-lc",
                  "en-lr",
                  "en-ls",
                  "en-lu",
                  "en-mg",
                  "en-mh",
                  "en-mo",
                  "en-mp",
                  "en-ms",
                  "en-mt",
                  "en-mu",
                  "en-mw",
                  "en-my",
                  "en-na",
                  "en-nf",
                  "en-ng",
                  "en-nl",
                  "en-nr",
                  "en-nu",
                  "en-nz",
                  "en-pg",
                  "en-ph",
                  "en-pk",
                  "en-pn",
                  "en-pr",
                  "en-pw",
                  "en-rw",
                  "en-sb",
                  "en-sc",
                  "en-sd",
                  "en-se",
                  "en-sg",
                  "en-sh",
                  "en-si",
                  "en-sl",
                  "en-ss",
                  "en-sx",
                  "en-sz",
                  "en-tc",
                  "en-tk",
                  "en-to",
                  "en-tt",
                  "en-tv",
                  "en-tz",
                  "en-ug",
                  "en-um",
                  "en-us",
                  "en-vc",
                  "en-vg",
                  "en-vi",
                  "en-vu",
                  "en-ws",
                  "en-za",
                  "en-zm",
                  "en-zw",
                  "eo",
                  "eo-001",
                  "es",
                  "es-419",
                  "es-ar",
                  "es-bo",
                  "es-br",
                  "es-bz",
                  "es-cl",
                  "es-co",
                  "es-cr",
                  "es-cu",
                  "es-do",
                  "es-ea",
                  "es-ec",
                  "es-es",
                  "es-gq",
                  "es-gt",
                  "es-hn",
                  "es-ic",
                  "es-mx",
                  "es-ni",
                  "es-pa",
                  "es-pe",
                  "es-ph",
                  "es-pr",
                  "es-py",
                  "es-sv",
                  "es-us",
                  "es-uy",
                  "es-ve",
                  "et",
                  "et-ee",
                  "eu",
                  "eu-es",
                  "ewo",
                  "ewo-cm",
                  "fa",
                  "fa-af",
                  "fa-ir",
                  "ff",
                  "ff-bf",
                  "ff-cm",
                  "ff-gh",
                  "ff-gm",
                  "ff-gn",
                  "ff-gw",
                  "ff-lr",
                  "ff-mr",
                  "ff-ne",
                  "ff-ng",
                  "ff-sl",
                  "ff-sn",
                  "fi",
                  "fi-fi",
                  "fil",
                  "fil-ph",
                  "fo",
                  "fo-dk",
                  "fo-fo",
                  "fr",
                  "fr-be",
                  "fr-bf",
                  "fr-bi",
                  "fr-bj",
                  "fr-bl",
                  "fr-ca",
                  "fr-cd",
                  "fr-cf",
                  "fr-cg",
                  "fr-ch",
                  "fr-ci",
                  "fr-cm",
                  "fr-dj",
                  "fr-dz",
                  "fr-fr",
                  "fr-ga",
                  "fr-gf",
                  "fr-gn",
                  "fr-gp",
                  "fr-gq",
                  "fr-ht",
                  "fr-km",
                  "fr-lu",
                  "fr-ma",
                  "fr-mc",
                  "fr-mf",
                  "fr-mg",
                  "fr-ml",
                  "fr-mq",
                  "fr-mr",
                  "fr-mu",
                  "fr-nc",
                  "fr-ne",
                  "fr-pf",
                  "fr-pm",
                  "fr-re",
                  "fr-rw",
                  "fr-sc",
                  "fr-sn",
                  "fr-sy",
                  "fr-td",
                  "fr-tg",
                  "fr-tn",
                  "fr-vu",
                  "fr-wf",
                  "fr-yt",
                  "fur",
                  "fur-it",
                  "fy",
                  "fy-nl",
                  "ga",
                  "ga-gb",
                  "ga-ie",
                  "gd",
                  "gd-gb",
                  "gl",
                  "gl-es",
                  "gsw",
                  "gsw-ch",
                  "gsw-fr",
                  "gsw-li",
                  "gu",
                  "gu-in",
                  "guz",
                  "guz-ke",
                  "gv",
                  "gv-im",
                  "ha",
                  "ha-gh",
                  "ha-ne",
                  "ha-ng",
                  "haw",
                  "haw-us",
                  "he",
                  "hi",
                  "hi-in",
                  "hr",
                  "hr-ba",
                  "hr-hr",
                  "hsb",
                  "hsb-de",
                  "hu",
                  "hu-hu",
                  "hy",
                  "hy-am",
                  "ia",
                  "ia-001",
                  "id",
                  "ig",
                  "ig-ng",
                  "ii",
                  "ii-cn",
                  "id-id",
                  "is",
                  "is-is",
                  "it",
                  "it-ch",
                  "it-it",
                  "it-sm",
                  "it-va",
                  "he-il",
                  "ja",
                  "ja-jp",
                  "jgo",
                  "jgo-cm",
                  "yi",
                  "yi-001",
                  "jmc",
                  "jmc-tz",
                  "jv",
                  "jv-id",
                  "ka",
                  "ka-ge",
                  "kab",
                  "kab-dz",
                  "kam",
                  "kam-ke",
                  "kde",
                  "kde-tz",
                  "kea",
                  "kea-cv",
                  "khq",
                  "khq-ml",
                  "ki",
                  "ki-ke",
                  "kk",
                  "kk-kz",
                  "kkj",
                  "kkj-cm",
                  "kl",
                  "kl-gl",
                  "kln",
                  "kln-ke",
                  "km",
                  "km-kh",
                  "kn",
                  "kn-in",
                  "ko",
                  "ko-kp",
                  "ko-kr",
                  "kok",
                  "kok-in",
                  "ks",
                  "ks-in",
                  "ksb",
                  "ksb-tz",
                  "ksf",
                  "ksf-cm",
                  "ksh",
                  "ksh-de",
                  "kw",
                  "kw-gb",
                  "ku",
                  "ku-tr",
                  "ky",
                  "ky-kg",
                  "lag",
                  "lag-tz",
                  "lb",
                  "lb-lu",
                  "lg",
                  "lg-ug",
                  "lkt",
                  "lkt-us",
                  "ln",
                  "ln-ao",
                  "ln-cd",
                  "ln-cf",
                  "ln-cg",
                  "lo",
                  "lo-la",
                  "lrc",
                  "lrc-iq",
                  "lrc-ir",
                  "lt",
                  "lt-lt",
                  "lu",
                  "lu-cd",
                  "luo",
                  "luo-ke",
                  "luy",
                  "luy-ke",
                  "lv",
                  "lv-lv",
                  "mai",
                  "mai-in",
                  "mas",
                  "mas-ke",
                  "mas-tz",
                  "mer",
                  "mer-ke",
                  "mfe",
                  "mfe-mu",
                  "mg",
                  "mg-mg",
                  "mgh",
                  "mgh-mz",
                  "mgo",
                  "mgo-cm",
                  "mi",
                  "mi-nz",
                  "mk",
                  "mk-mk",
                  "ml",
                  "ml-in",
                  "mn",
                  "mn-mn",
                  "mni",
                  "mni-in",
                  "mr",
                  "mr-in",
                  "ms",
                  "ms-bn",
                  "ms-id",
                  "ms-my",
                  "ms-sg",
                  "mt",
                  "mt-mt",
                  "mua",
                  "mua-cm",
                  "my",
                  "my-mm",
                  "mzn",
                  "mzn-ir",
                  "naq",
                  "naq-na",
                  "nb",
                  "nb-no",
                  "nb-sj",
                  "nd",
                  "nd-zw",
                  "nds",
                  "nds-de",
                  "nds-nl",
                  "ne",
                  "ne-in",
                  "ne-np",
                  "nl",
                  "nl-aw",
                  "nl-be",
                  "nl-ch",
                  "nl-bq",
                  "nl-cw",
                  "nl-lu",
                  "nl-nl",
                  "nl-sr",
                  "nl-sx",
                  "nmg",
                  "nmg-cm",
                  "nn",
                  "nn-no",
                  "nnh",
                  "nnh-cm",
                  "no",
                  "no-no",
                  "nus",
                  "nus-ss",
                  "nyn",
                  "nyn-ug",
                  "om",
                  "om-et",
                  "om-ke",
                  "or",
                  "or-in",
                  "os",
                  "os-ge",
                  "os-ru",
                  "pa",
                  "pa-in",
                  "pa-pk",
                  "pcm",
                  "pcm-ng",
                  "pl",
                  "pl-pl",
                  "prg",
                  "prg-001",
                  "ps",
                  "ps-af",
                  "ps-pk",
                  "pt",
                  "pt-ao",
                  "pt-br",
                  "pt-ch",
                  "pt-cv",
                  "pt-gq",
                  "pt-gw",
                  "pt-lu",
                  "pt-mo",
                  "pt-mz",
                  "pt-pt",
                  "pt-st",
                  "pt-tl",
                  "qu",
                  "qu-bo",
                  "qu-ec",
                  "qu-pe",
                  "rm",
                  "rm-ch",
                  "rn",
                  "rn-bi",
                  "ro",
                  "ro-md",
                  "ro-ro",
                  "rof",
                  "rof-tz",
                  "ru",
                  "ru-by",
                  "ru-kg",
                  "ru-kz",
                  "ru-md",
                  "ru-ru",
                  "ru-ua",
                  "rw",
                  "rw-rw",
                  "rwk",
                  "rwk-tz",
                  "sa",
                  "sa-in",
                  "sah",
                  "sah-ru",
                  "saq",
                  "saq-ke",
                  "sat",
                  "sat-in",
                  "sbp",
                  "sbp-tz",
                  "sd",
                  "sd-in",
                  "sd-pk",
                  "se",
                  "se-fi",
                  "se-no",
                  "se-se",
                  "seh",
                  "seh-mz",
                  "ses",
                  "ses-ml",
                  "sg",
                  "sg-cf",
                  "shi",
                  "shi-ma",
                  "si",
                  "si-lk",
                  "sk",
                  "sk-sk",
                  "sl",
                  "sl-si",
                  "smn",
                  "smn-fi",
                  "sn",
                  "sn-zw",
                  "so",
                  "so-dj",
                  "so-et",
                  "so-ke",
                  "so-so",
                  "sq",
                  "sq-al",
                  "sq-mk",
                  "sq-xk",
                  "sr",
                  "sr-ba",
                  "sr-cs",
                  "sr-me",
                  "sr-rs",
                  "sr-xk",
                  "su",
                  "su-id",
                  "sv",
                  "sv-ax",
                  "sv-fi",
                  "sv-se",
                  "sw",
                  "sw-cd",
                  "sw-ke",
                  "sw-tz",
                  "sw-ug",
                  "sy",
                  "ta",
                  "ta-in",
                  "ta-lk",
                  "ta-my",
                  "ta-sg",
                  "te",
                  "te-in",
                  "teo",
                  "teo-ke",
                  "teo-ug",
                  "tg",
                  "tg-tj",
                  "th",
                  "th-th",
                  "ti",
                  "ti-er",
                  "ti-et",
                  "tk",
                  "tk-tm",
                  "tl",
                  "to",
                  "to-to",
                  "tr",
                  "tr-cy",
                  "tr-tr",
                  "tt",
                  "tt-ru",
                  "twq",
                  "twq-ne",
                  "tzm",
                  "tzm-ma",
                  "ug",
                  "ug-cn",
                  "uk",
                  "uk-ua",
                  "ur",
                  "ur-in",
                  "ur-pk",
                  "uz",
                  "uz-af",
                  "uz-uz",
                  "vai",
                  "vai-lr",
                  "vi",
                  "vi-vn",
                  "vo",
                  "vo-001",
                  "vun",
                  "vun-tz",
                  "wae",
                  "wae-ch",
                  "wo",
                  "wo-sn",
                  "xh",
                  "xh-za",
                  "xog",
                  "xog-ug",
                  "yav",
                  "yav-cm",
                  "yo",
                  "yo-bj",
                  "yo-ng",
                  "yue",
                  "yue-cn",
                  "yue-hk",
                  "zgh",
                  "zgh-ma",
                  "zh",
                  "zh-cn",
                  "zh-hk",
                  "zh-mo",
                  "zh-sg",
                  "zh-tw",
                  "zh-hans",
                  "zh-hant",
                  "zu",
                  "zu-za"
              ]
            }
          },
          {
            "name": "matchPrefix",
            "in": "query",
            "description": "Inverts the behavior of the pathPrefix filter when set to `false`. Defaults to `true`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autocomplete",
            "in": "query",
            "description": "Specifies whether or not you are showing autocomplete results. Defaults to false.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "popularityBoost",
            "in": "query",
            "description": "Specifies how strongly a result is boosted based on its view count. Defaults to 1.0.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "boostLimit",
            "in": "query",
            "description": "Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0. Read more about elasticsearch boosting [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "boostRecent",
            "in": "query",
            "description": "Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent=10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableId",
            "in": "query",
            "description": "Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the `hubdbQuery` parameter to further filter results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "hubdbQuery",
            "in": "query",
            "description": "Specify a HubDB query to further filter the search results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "A domain to match search results for. Multiple domains can be provided with &.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                    "LANDING_PAGE",
                    "BLOG_POST",
                    "SITE_PAGE",
                    "KNOWLEDGE_ARTICLE",
                    "LISTING_PAGE"
                ]
              }
            }
          },
          {
            "name": "pathPrefix",
            "in": "query",
            "description": "Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "property",
            "in": "query",
            "description": "Specifies which properties to include in the search. Options include `title`, `description`, and `html`. All properties will be searched by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "Specifies the length of the search results. Can be set to `LONG` or `SHORT`. `SHORT` will return the first 128 characters of the content's meta description. `LONG` will build a more detailed content snippet based on the html/content of the page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                  "SHORT",
                  "LONG"
              ]
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicSearchResults"
                },
                "example": {
                  "total": 12,
                  "offset": 0,
                  "limit": 1,
                  "results": [
                    {
                      "id": 24314356,
                      "score": 2.536124,
                      "type": "BLOG_POST",
                      "domain": "blog.hubspot.com",
                      "url": "https://blog.hubspot.com/blog/tabid/6307/bid/11692/Inbound-Marketing-Vs-Outbound-Marketing.aspx",
                      "featuredImageUrl": "https://cdn2.hubspot.net/hubfs/53/assets/hubspot.com/buzz/HubSpotOpenGraph.png",
                      "language": "en-us",
                      "title": "Inbound <span class=\"hs-search-highlight hs-highlight-title\">Marketing</span> Vs. Outbound <span class=\"hs-search-highlight hs-highlight-title\">Marketing</span>",
                      "description": "This blog post is one of several <span class=\"hs-search-highlight hs-highlight-html\">Marketing</span> Transformation Success Stories we&#39;ll be featuring in celebration of  <span class=\"hs-search-highlight hs-highlight-html\">Marketing</span> Transformation Week , April 4-8, 2011.... All-in-one <span class=\"hs-search-highlight hs-highlight-html\">marketing</span> software, starting at $0/month.... Read <span class=\"hs-search-highlight hs-highlight-html\">marketing</span>, sales, agency, and customer success blog content.... Get access to HubSpot’s most popular <span class=\"hs-search-highlight hs-highlight-html\">marketing</span> resources.... Stay up to date with the latest <span class=\"hs-search-highlight hs-highlight-html\">marketing</span>, sales, and service tips and news.",
                      "authorFullName": "Kipp Bodnar",
                      "tags": [
                          "Inbound Marketing"
                      ],
                      "publishedDate": 1302130260000
                    }
                  ],
                  "searchTerm": "marketing",
                  "page": 0
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        },
        "security": [
          {
            "oauth2_legacy": [
                "content"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CollectionResponseWithTotalDomain": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        }
      },
      "Domain": {
        "required": [
            "actualCname",
            "actualIp",
            "apexDomain",
            "apexIpAddresses",
            "apexResolutionStatus",
            "authorAt",
            "brandId",
            "cdnPurgeEmbargoTime",
            "certificateId",
            "consecutiveNonResolvingCount",
            "correctCname",
            "cosObjectType",
            "created",
            "createdById",
            "deletable",
            "derivedBrandName",
            "domain",
            "domainCdnConfig",
            "fullCategoryKey",
            "id",
            "isAnyPrimary",
            "isDnsCorrect",
            "isInternalDomain",
            "isLegacy",
            "isLegacyDomain",
            "isResolving",
            "isResolvingIgnoringManuallyMarkedAsResolving",
            "isResolvingInternalProperty",
            "isSetupComplete",
            "isSslEnabled",
            "isSslOnly",
            "isStagingDomain",
            "isUsedForAnyContentType",
            "isUsedForBlogPost",
            "isUsedForEmail",
            "isUsedForKnowledge",
            "isUsedForLandingPage",
            "isUsedForSitePage",
            "label",
            "manuallyMarkedAsResolving",
            "portalId",
            "primaryBlog",
            "primaryBlogPost",
            "primaryClickTracking",
            "primaryEmail",
            "primaryKnowledge",
            "primaryLandingPage",
            "primaryLegacyPage",
            "primarySitePage",
            "publicSuffix",
            "secondaryToDomain",
            "setUpLanguage",
            "setupInfo",
            "setupTaskId",
            "siteId",
            "sslCname",
            "sslRequestId",
            "teamIds",
            "updated",
            "updatedById"
        ],
        "type": "object",
        "properties": {
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "domain": {
            "type": "string"
          },
          "primaryLandingPage": {
            "type": "boolean"
          },
          "primaryEmail": {
            "type": "boolean"
          },
          "primaryBlog": {
            "type": "boolean"
          },
          "primaryBlogPost": {
            "type": "boolean"
          },
          "primarySitePage": {
            "type": "boolean"
          },
          "primaryKnowledge": {
            "type": "boolean"
          },
          "primaryLegacyPage": {
            "type": "boolean"
          },
          "primaryClickTracking": {
            "type": "boolean"
          },
          "fullCategoryKey": {
            "type": "string"
          },
          "secondaryToDomain": {
            "type": "string"
          },
          "isResolving": {
            "type": "boolean"
          },
          "isDnsCorrect": {
            "type": "boolean"
          },
          "manuallyMarkedAsResolving": {
            "type": "boolean"
          },
          "consecutiveNonResolvingCount": {
            "type": "integer",
            "format": "int32"
          },
          "sslCname": {
            "type": "string"
          },
          "isSslEnabled": {
            "type": "boolean"
          },
          "isSslOnly": {
            "type": "boolean"
          },
          "certificateId": {
            "type": "integer",
            "format": "int64"
          },
          "sslRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "isUsedForBlogPost": {
            "type": "boolean"
          },
          "isUsedForSitePage": {
            "type": "boolean"
          },
          "isUsedForLandingPage": {
            "type": "boolean"
          },
          "isUsedForEmail": {
            "type": "boolean"
          },
          "isUsedForKnowledge": {
            "type": "boolean"
          },
          "setupTaskId": {
            "type": "integer",
            "format": "int64"
          },
          "isSetupComplete": {
            "type": "boolean"
          },
          "setUpLanguage": {
            "type": "string"
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "actualCname": {
            "type": "string"
          },
          "correctCname": {
            "type": "string"
          },
          "actualIp": {
            "type": "string"
          },
          "apexResolutionStatus": {
            "type": "string",
            "enum": [
                "INELIGIBLE",
                "SUGGEST_RESOLVING",
                "ALREADY_RESOLVING",
                "ERROR"
            ]
          },
          "apexDomain": {
            "type": "string"
          },
          "publicSuffix": {
            "type": "string"
          },
          "apexIpAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "siteId": {
            "type": "integer",
            "format": "int64"
          },
          "brandId": {
            "type": "integer",
            "format": "int64"
          },
          "deletable": {
            "type": "boolean"
          },
          "domainCdnConfig": {
            "$ref": "#/components/schemas/DomainCdnConfig"
          },
          "setupInfo": {
            "$ref": "#/components/schemas/DomainSetupInfo"
          },
          "derivedBrandName": {
            "type": "string"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string"
          },
          "isAnyPrimary": {
            "type": "boolean"
          },
          "isLegacyDomain": {
            "type": "boolean"
          },
          "isInternalDomain": {
            "type": "boolean"
          },
          "isResolvingInternalProperty": {
            "type": "boolean"
          },
          "isResolvingIgnoringManuallyMarkedAsResolving": {
            "type": "boolean"
          },
          "isUsedForAnyContentType": {
            "type": "boolean"
          },
          "isLegacy": {
            "type": "boolean"
          },
          "authorAt": {
            "type": "integer",
            "format": "int64"
          },
          "cosObjectType": {
            "type": "string",
            "enum": [
                "CONTENT",
                "EXTENSION_RESOURCE",
                "LAYOUT",
                "CUSTOM_WIDGET",
                "WIDGET",
                "FORM",
                "PLACEMENT",
                "IMAGE",
                "DOMAIN_SETTINGS",
                "SITE_SETTINGS",
                "EMAIL_ADDRESS",
                "WORKFLOW",
                "HUBDB_TABLE",
                "REDIRECT_URL",
                "DESIGN_FOLDER",
                "SITE_MAP",
                "DOMAIN",
                "BLOG",
                "FILE",
                "FOLDER",
                "SITE_MENU",
                "THEME",
                "CONTENT_GROUP",
                "FOLLOW_ME",
                "KNOWLEDGE_BASE",
                "LIST_MEMBERSHIP",
                "CONTACT_MEMBERSHIP",
                "PASSWORD_PROTECTED",
                "UNRESTRICTED_ACCESS",
                "MARKETPLACE_LISTING",
                "LAYOUT_SECTION",
                "THEME_SETTINGS",
                "VIDEO_PLAYER",
                "URL_MAPPING",
                "KNOWLEDGE_CATEGORY",
                "KNOWLEDGE_HOMEPAGE_CATEGORY",
                "RAW_ASSET",
                "GLOBAL_CONTENT",
                "HUBDB_TABLE_ROW",
                "BLOG_AUTHOR",
                "SERVERLESS_FUNCTION",
                "KNOWLEDGE_CATEGORY_TRANSLATION"
            ]
          },
          "cdnPurgeEmbargoTime": {
            "type": "integer",
            "format": "int64"
          },
          "isStagingDomain": {
            "type": "boolean"
          }
        }
      },
      "DomainCdnConfig": {
        "required": [
            "alternateOriginHostname",
            "cdnGroupId",
            "cdnId",
            "certExpirationDate",
            "certId",
            "cname",
            "cnameTarget",
            "created",
            "domainId",
            "httpBody",
            "httpUrlPath",
            "id",
            "minimumTlsVersion",
            "portalId",
            "sslStatus",
            "updated",
            "validationMethod"
        ],
        "type": "object",
        "properties": {
          "portalId": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "domainId": {
            "type": "integer",
            "format": "int64"
          },
          "certId": {
            "type": "integer",
            "format": "int64"
          },
          "certExpirationDate": {
            "type": "integer",
            "format": "int64"
          },
          "cdnId": {
            "type": "string"
          },
          "cdnGroupId": {
            "type": "string"
          },
          "sslStatus": {
            "type": "string",
            "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11"
            ]
          },
          "validationMethod": {
            "type": "string",
            "enum": [
                "0",
                "1",
                "2"
            ]
          },
          "httpBody": {
            "type": "string"
          },
          "httpUrlPath": {
            "type": "string"
          },
          "cname": {
            "type": "string"
          },
          "cnameTarget": {
            "type": "string"
          },
          "minimumTlsVersion": {
            "type": "string",
            "enum": [
                "1.0",
                "1.1",
                "1.2",
                "1.3",
                "none",
                "null"
            ]
          },
          "alternateOriginHostname": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DomainSetupInfo": {
        "required": [
            "supportsSslExternally",
            "whoIsEmailAddresses"
        ],
        "type": "object",
        "properties": {
          "supportsSslExternally": {
            "type": "boolean"
          },
          "whoIsEmailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "required": [
            "category",
            "correlationId",
            "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human readable message describing the error along with remediation steps where appropriate",
            "example": "An error occurred"
          },
          "correlationId": {
            "type": "string",
            "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format": "uuid",
            "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "category": {
            "type": "string",
            "description": "The error category"
          },
          "subCategory": {
            "type": "string",
            "description": "A specific category that contains more specific detail about the error"
          },
          "errors": {
            "type": "array",
            "description": "further information about the error",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Context about the error condition",
            "example": {
              "invalidPropertyName": [
                  "propertyValue"
              ],
              "missingScopes": [
                  "scope1",
                  "scope2"
              ]
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          }
        },
        "example": {
          "message": "Invalid input (details will vary based on the error)",
          "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category": "VALIDATION_ERROR",
          "links": {
            "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "ErrorDetail": {
        "required": [
            "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human readable message describing the error along with remediation steps where appropriate"
          },
          "in": {
            "type": "string",
            "description": "The name of the field or parameter in which the error was found."
          },
          "code": {
            "type": "string",
            "description": "The status code associated with the error detail"
          },
          "subCategory": {
            "type": "string",
            "description": "A specific category that contains more specific detail about the error"
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Context about the error condition",
            "example": {
              "missingScopes": [
                  "scope1",
                  "scope2"
              ]
            }
          }
        }
      },
      "NextPage": {
        "required": [
            "after"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "Paging": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage"
          }
        }
      },
      "ActionResponse": {
        "required": [
            "completedAt",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AssetFileMetadata": {
        "required": [
            "createdAt",
            "folder",
            "id",
            "name",
            "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The path of the file in the CMS Developer File System."
          },
          "name": {
            "type": "string",
            "description": "The name of the file."
          },
          "folder": {
            "type": "boolean",
            "description": "Determines whether or not this path points to a folder."
          },
          "children": {
            "type": "array",
            "description": "If the object is a folder, contains the filenames of the files within the folder.",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "integer",
            "description": "Timestamp of when the object was last updated.",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "description": "Timestamp of when the object was first created.",
            "format": "int32"
          },
          "archivedAt": {
            "type": "integer",
            "description": "Timestamp of when the object was archived (deleted).",
            "format": "int64"
          }
        },
        "description": "The object metadata of a file."
      },
      "FileExtractRequest": {
        "required": [
            "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        }
      },
      "TaskLocator": {
        "required": [
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Angle": {
        "required": [
            "units",
            "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "units": {
            "type": "string",
            "enum": [
                "deg",
                "grad",
                "rad",
                "turn"
            ]
          }
        }
      },
      "AttachToLangPrimaryRequestVNext": {
        "required": [
            "id",
            "language",
            "primaryId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the object to add to a multi-language group."
          },
          "language": {
            "type": "string",
            "description": "Designated language of the object to add to a multi-language group.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-cm",
                "ff-gn",
                "ff-mr",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          },
          "primaryId": {
            "type": "string",
            "description": "ID of primary language object in multi-language group."
          },
          "primaryLanguage": {
            "type": "string",
            "description": "Primary language of the multi-language group.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-cm",
                "ff-gn",
                "ff-mr",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          }
        },
        "description": "Request body object fro attaching objects to multi-language groups."
      },
      "BackgroundImage": {
        "required": [
            "backgroundPosition",
            "backgroundSize",
            "imageUrl"
        ],
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "backgroundSize": {
            "type": "string"
          },
          "backgroundPosition": {
            "type": "string",
            "enum": [
                "TOP_LEFT",
                "TOP_CENTER",
                "TOP_RIGHT",
                "MIDDLE_LEFT",
                "MIDDLE_CENTER",
                "MIDDLE_RIGHT",
                "BOTTOM_LEFT",
                "BOTTOM_CENTER",
                "BOTTOM_RIGHT"
            ]
          }
        }
      },
      "BatchInputBlogPost": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "description": "Blog posts to input.",
            "items": {
              "$ref": "#/components/schemas/BlogPost"
            }
          }
        },
        "description": "Wrapper for providing an array of blog posts as inputs."
      },
      "BatchInputJsonNode": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "description": "JSON nodes to input.",
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Wrapper for providing an array of JSON nodes as inputs."
      },
      "BatchInputString": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "description": "Strings to input.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Wrapper for providing an array of strings as inputs."
      },
      "BatchResponseBlogPost": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/BlogPost"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog posts."
      },
      "BatchResponseBlogPostWithErrors": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/BlogPost"
            }
          },
          "numErrors": {
            "type": "integer",
            "description": "Number of errors.",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "description": "Errors in batch operation.",
            "items": {
              "$ref": "#/components/schemas/StandardError"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog posts with errors."
      },
      "BlogPost": {
        "required": [
            "abStatus",
            "abTestId",
            "archived",
            "archivedInDashboard",
            "attachedStylesheets",
            "authorName",
            "blogAuthorId",
            "campaign",
            "categoryId",
            "contentGroupId",
            "contentTypeCategory",
            "created",
            "createdById",
            "currentState",
            "currentlyPublished",
            "deletedAt",
            "domain",
            "dynamicPageDataSourceId",
            "dynamicPageDataSourceType",
            "enableDomainStylesheets",
            "enableGoogleAmpOutputOverride",
            "enableLayoutStylesheets",
            "featuredImage",
            "featuredImageAltText",
            "folderId",
            "footerHtml",
            "headHtml",
            "htmlTitle",
            "id",
            "includeDefaultCustomCss",
            "language",
            "layoutSections",
            "linkRelCanonicalUrl",
            "mabExperimentId",
            "metaDescription",
            "name",
            "pageExpiryDate",
            "pageExpiryEnabled",
            "pageExpiryRedirectId",
            "pageExpiryRedirectUrl",
            "password",
            "postBody",
            "postSummary",
            "publicAccessRules",
            "publicAccessRulesEnabled",
            "publishDate",
            "publishImmediately",
            "rssBody",
            "rssSummary",
            "slug",
            "state",
            "tagIds",
            "themeSettingsValues",
            "translatedFromId",
            "translations",
            "updated",
            "updatedById",
            "url",
            "useFeaturedImage",
            "widgetContainers",
            "widgets"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the Blog Post."
          },
          "slug": {
            "type": "string",
            "description": "The path of the this blog post. This field is appended to the domain to construct the url of this post."
          },
          "contentGroupId": {
            "type": "string",
            "description": "The ID of the parent Blog this Blog Post is associated with."
          },
          "campaign": {
            "type": "string",
            "description": "The GUID of the marketing campaign this Blog Post is a part of."
          },
          "categoryId": {
            "type": "integer",
            "description": "ID of the type of object this is. Should always .",
            "format": "int32"
          },
          "state": {
            "maxLength": 25,
            "type": "string",
            "description": "An ENUM descibing the current state of this Blog Post."
          },
          "name": {
            "type": "string",
            "description": "The internal name of the Blog Post."
          },
          "mabExperimentId": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "authorName": {
            "type": "string",
            "description": "The name of the user that updated this Blog Post."
          },
          "abTestId": {
            "type": "string"
          },
          "createdById": {
            "type": "string",
            "description": "The ID of the user that created this Blog Post."
          },
          "updatedById": {
            "type": "string",
            "description": "The ID of the user that updated this Blog Post."
          },
          "domain": {
            "type": "string",
            "description": "The domain this Blog Post will resolve to. If null, the Blog Post will default to the domain of the ParentBlog."
          },
          "abStatus": {
            "type": "string",
            "enum": [
                "master",
                "variant",
                "loser_variant",
                "mab_master",
                "mab_variant",
                "automated_master",
                "automated_variant",
                "automated_loser_variant"
            ]
          },
          "folderId": {
            "type": "string"
          },
          "widgetContainers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "A data structure containing the data for all the modules inside the containers for this post. This will only be populated if the page has widget containers."
          },
          "widgets": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "A data structure containing the data for all the modules for this page."
          },
          "language": {
            "type": "string",
            "description": "The explicitly defined ISO 639 language code of the Blog Post. If null, the Blog Post will default to the language of the ParentBlog.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-cm",
                "ff-gn",
                "ff-mr",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          },
          "translatedFromId": {
            "type": "string",
            "description": "ID of the primary blog post this object was translated from."
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ContentLanguageVariation"
            }
          },
          "dynamicPageDataSourceType": {
            "type": "integer",
            "format": "int32"
          },
          "dynamicPageDataSourceId": {
            "type": "string"
          },
          "blogAuthorId": {
            "type": "string",
            "description": "The ID of the Blog Author associated with this Blog Post."
          },
          "tagIds": {
            "type": "array",
            "description": "List of IDs for the tags associated with this Blog Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "htmlTitle": {
            "type": "string",
            "description": "The html title of this Blog Post."
          },
          "enableGoogleAmpOutputOverride": {
            "type": "boolean",
            "description": "Boolean to allow overriding the AMP settings for the blog."
          },
          "useFeaturedImage": {
            "type": "boolean",
            "description": "Boolean to determine if this post should use a featuredImage."
          },
          "postBody": {
            "type": "string",
            "description": "The HTML of the main post body."
          },
          "postSummary": {
            "type": "string",
            "description": "The summary of the blog post that will appear on the main listing page."
          },
          "rssBody": {
            "type": "string",
            "description": "The contents of the RSS body for this Blog Post."
          },
          "rssSummary": {
            "type": "string",
            "description": "The contents of the RSS summary for this Blog Post."
          },
          "currentlyPublished": {
            "type": "boolean"
          },
          "pageExpiryEnabled": {
            "type": "boolean"
          },
          "pageExpiryRedirectId": {
            "type": "integer",
            "format": "int64"
          },
          "pageExpiryRedirectUrl": {
            "type": "string"
          },
          "pageExpiryDate": {
            "type": "integer",
            "format": "int64"
          },
          "includeDefaultCustomCss": {
            "type": "boolean",
            "description": "Boolean to determine whether or not the Primary CSS Files should be applied."
          },
          "enableLayoutStylesheets": {
            "type": "boolean",
            "description": "Boolean to determine whether or not the styles from the template should be applied."
          },
          "enableDomainStylesheets": {
            "type": "boolean",
            "description": "Boolean to determine whether or not the styles from the template should be applied."
          },
          "publishImmediately": {
            "type": "boolean",
            "description": "Set this to true if you want to be published immediately when the schedule publish endpoint is called, and to ignore the publish_date setting."
          },
          "featuredImage": {
            "type": "string",
            "description": "The featuredImage of this Blog Post."
          },
          "featuredImageAltText": {
            "type": "string",
            "description": "Alt Text of the featuredImage."
          },
          "linkRelCanonicalUrl": {
            "type": "string",
            "description": "Optional override to set the URL to be used in the rel=canonical link tag on the page."
          },
          "contentTypeCategory": {
            "type": "string",
            "description": "An ENUM descibing the type of this object. Should always be BLOG_POST.",
            "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9"
            ]
          },
          "attachedStylesheets": {
            "type": "array",
            "description": "List of stylesheets to attach to this blog post. These stylesheets are attached to just this page. Order of precedence is bottom to top, just like in the HTML.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "metaDescription": {
            "type": "string",
            "description": "A description that goes in <meta> tag on the page."
          },
          "headHtml": {
            "type": "string",
            "description": "Custom HTML for embed codes, javascript, etc. that goes in the <head> tag of the page."
          },
          "footerHtml": {
            "type": "string",
            "description": "Custom HTML for embed codes, javascript that should be placed before the </body> tag of the page."
          },
          "archivedInDashboard": {
            "type": "boolean",
            "description": "If True, the post will not show up in your dashboard, although the post could still be live."
          },
          "publicAccessRulesEnabled": {
            "type": "boolean",
            "description": "Boolean to determine whether or not to respect publicAccessRules."
          },
          "publicAccessRules": {
            "type": "array",
            "description": "Rules for require member registration to access private content.",
            "items": {
              "$ref": "#/components/schemas/PublicAccessRule"
            }
          },
          "layoutSections": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LayoutSection"
            }
          },
          "themeSettingsValues": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "url": {
            "type": "string",
            "description": "A generated field representing the URL of this blog post."
          },
          "password": {
            "type": "string",
            "description": "Set this to create a password protected page. Entering the password will be required to view the page."
          },
          "currentState": {
            "type": "string",
            "description": "A generated ENUM descibing the current state of this Blog Post. Should always match state.",
            "enum": [
                "AUTOMATED",
                "AUTOMATED_DRAFT",
                "AUTOMATED_SENDING",
                "AUTOMATED_FOR_FORM",
                "AUTOMATED_FOR_FORM_BUFFER",
                "AUTOMATED_FOR_FORM_DRAFT",
                "AUTOMATED_FOR_FORM_LEGACY",
                "BLOG_EMAIL_DRAFT",
                "BLOG_EMAIL_PUBLISHED",
                "DRAFT",
                "DRAFT_AB",
                "DRAFT_AB_VARIANT",
                "ERROR",
                "LOSER_AB_VARIANT",
                "PAGE_STUB",
                "PRE_PROCESSING",
                "PROCESSING",
                "PUBLISHED",
                "PUBLISHED_AB",
                "PUBLISHED_AB_VARIANT",
                "PUBLISHED_OR_SCHEDULED",
                "RSS_TO_EMAIL_DRAFT",
                "RSS_TO_EMAIL_PUBLISHED",
                "SCHEDULED",
                "SCHEDULED_AB",
                "SCHEDULED_OR_PUBLISHED",
                "AUTOMATED_AB",
                "AUTOMATED_AB_VARIANT",
                "AUTOMATED_DRAFT_AB",
                "AUTOMATED_DRAFT_ABVARIANT",
                "AUTOMATED_LOSER_ABVARIANT"
            ]
          },
          "publishDate": {
            "type": "string",
            "description": "The date (ISO8601 format) the blog post is to be published at.",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "The timestamp (ISO8601 format) when this Blog Post was deleted.",
            "format": "date-time"
          }
        },
        "description": "Model definition for a Blog Post."
      },
      "BlogPostLanguageCloneRequestVNext": {
        "required": [
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of blog post to clone."
          },
          "language": {
            "type": "string",
            "description": "Target language of new variant."
          }
        },
        "description": "Request body object for creating new blog post language variant."
      },
      "CollectionResponseWithTotalBlogPostForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of blog posts.",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "description": "Collection of blog posts.",
            "items": {
              "$ref": "#/components/schemas/BlogPost"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging"
          }
        },
        "description": "Response object for collections of blog posts with pagination information."
      },
      "CollectionResponseWithTotalVersionBlogPost": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of blog post versions.",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "description": "Collection of blog post versions.",
            "items": {
              "$ref": "#/components/schemas/VersionBlogPost"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging1"
          }
        },
        "description": "Response object for collections of blog post versions with pagination information."
      },
      "ColorStop": {
        "required": [
            "color"
        ],
        "type": "object",
        "properties": {
          "color": {
            "$ref": "#/components/schemas/RGBAColor"
          }
        }
      },
      "ContentCloneRequestVNext": {
        "required": [
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the object to be cloned."
          },
          "cloneName": {
            "type": "string",
            "description": "Name of the cloned object."
          }
        },
        "description": "Request body object for cloning content."
      },
      "ContentLanguageVariation": {
        "required": [
            "archivedInDashboard",
            "authorName",
            "campaign",
            "created",
            "id",
            "name",
            "password",
            "publicAccessRules",
            "publicAccessRulesEnabled",
            "publishDate",
            "slug",
            "state",
            "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "authorName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "publicAccessRulesEnabled": {
            "type": "boolean"
          },
          "publicAccessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicAccessRule"
            }
          },
          "campaign": {
            "type": "string"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "archivedInDashboard": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContentScheduleRequestVNext": {
        "required": [
            "id",
            "publishDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object to be scheduled."
          },
          "publishDate": {
            "type": "string",
            "description": "The date the object should transition from scheduled to published.",
            "format": "date-time"
          }
        },
        "description": "Request body object for scheduling the publish of content"
      },
      "DetachFromLangGroupRequestVNext": {
        "required": [
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the object to remove from a multi-language group."
          }
        },
        "description": "Request body object for detaching objects from multi-language groups."
      },
      "ErrorCategory": {
        "type": "object",
        "description": "Model definition for an error category."
      },
      "ForwardPaging": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage1"
          }
        },
        "description": "Model definition for forward paging."
      },
      "Gradient": {
        "required": [
            "angle",
            "colors",
            "sideOrCorner"
        ],
        "type": "object",
        "properties": {
          "sideOrCorner": {
            "$ref": "#/components/schemas/SideOrCorner"
          },
          "angle": {
            "$ref": "#/components/schemas/Angle"
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorStop"
            }
          }
        }
      },
      "LayoutSection": {
        "required": [
            "cells",
            "cssClass",
            "cssId",
            "cssStyle",
            "label",
            "name",
            "params",
            "rowMetaData",
            "rows",
            "styles",
            "type",
            "w",
            "x"
        ],
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "w": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "null"
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/LayoutSection"
              }
            }
          },
          "rowMetaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowMetaData"
            }
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LayoutSection"
            }
          },
          "cssClass": {
            "type": "string"
          },
          "cssStyle": {
            "type": "string"
          },
          "cssId": {
            "type": "string"
          },
          "styles": {
            "$ref": "#/components/schemas/Styles"
          }
        }
      },
      "NextPage1": {
        "required": [
            "after"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "description": "Model definition for a next page."
      },
      "Paging1": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage1"
          },
          "prev": {
            "$ref": "#/components/schemas/PreviousPage"
          }
        },
        "description": "Model definition for paging."
      },
      "PreviousPage": {
        "required": [
            "before"
        ],
        "type": "object",
        "properties": {
          "before": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "description": "Model definition for a previous page"
      },
      "PublicAccessRule": {
        "type": "object"
      },
      "RGBAColor": {
        "required": [
            "a",
            "b",
            "g",
            "r"
        ],
        "type": "object",
        "properties": {
          "r": {
            "type": "integer",
            "description": "Red.",
            "format": "int32"
          },
          "g": {
            "type": "integer",
            "description": "Green.",
            "format": "int32"
          },
          "b": {
            "type": "integer",
            "description": "Blue.",
            "format": "int32"
          },
          "a": {
            "type": "number",
            "description": "Alpha."
          }
        },
        "description": "A color defined by RGB values."
      },
      "RowMetaData": {
        "required": [
            "cssClass",
            "styles"
        ],
        "type": "object",
        "properties": {
          "styles": {
            "$ref": "#/components/schemas/Styles"
          },
          "cssClass": {
            "type": "string"
          }
        }
      },
      "SetNewLanguagePrimaryRequestVNext": {
        "required": [
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of object to set as primary in multi-language group."
          }
        },
        "description": "Request body object for setting a new primary language."
      },
      "SideOrCorner": {
        "required": [
            "horizontalSide",
            "verticalSide"
        ],
        "type": "object",
        "properties": {
          "verticalSide": {
            "type": "string",
            "enum": [
                "TOP",
                "MIDDLE",
                "BOTTOM"
            ]
          },
          "horizontalSide": {
            "type": "string",
            "enum": [
                "LEFT",
                "CENTER",
                "RIGHT"
            ]
          }
        }
      },
      "StandardError": {
        "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Error status."
          },
          "id": {
            "type": "string",
            "description": "Error ID."
          },
          "category": {
            "$ref": "#/components/schemas/ErrorCategory"
          },
          "subCategory": {
            "type": "object",
            "properties": {},
            "description": "Error subcategory."
          },
          "message": {
            "type": "string",
            "description": "Error message."
          },
          "errors": {
            "type": "array",
            "description": "List of error details.",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Error context."
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Error links."
          }
        },
        "description": "Model definition for a standard error."
      },
      "Styles": {
        "required": [
            "backgroundColor",
            "backgroundGradient",
            "backgroundImage",
            "flexboxPositioning",
            "forceFullWidthSection",
            "maxWidthSectionCentering",
            "verticalAlignment"
        ],
        "type": "object",
        "properties": {
          "verticalAlignment": {
            "type": "string",
            "enum": [
                "TOP",
                "MIDDLE",
                "BOTTOM"
            ]
          },
          "backgroundColor": {
            "$ref": "#/components/schemas/RGBAColor"
          },
          "backgroundImage": {
            "$ref": "#/components/schemas/BackgroundImage"
          },
          "backgroundGradient": {
            "$ref": "#/components/schemas/Gradient"
          },
          "maxWidthSectionCentering": {
            "type": "integer",
            "format": "int32"
          },
          "forceFullWidthSection": {
            "type": "boolean"
          },
          "flexboxPositioning": {
            "type": "string",
            "enum": [
                "TOP_LEFT",
                "TOP_CENTER",
                "TOP_RIGHT",
                "MIDDLE_LEFT",
                "MIDDLE_CENTER",
                "MIDDLE_RIGHT",
                "BOTTOM_LEFT",
                "BOTTOM_CENTER",
                "BOTTOM_RIGHT"
            ]
          }
        }
      },
      "UpdateLanguagesRequestVNext": {
        "required": [
            "languages",
            "primaryId"
        ],
        "type": "object",
        "properties": {
          "primaryId": {
            "type": "string",
            "description": "ID of the primary object in the multi-language group."
          },
          "languages": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                  "af",
                  "af-na",
                  "af-za",
                  "agq",
                  "agq-cm",
                  "ak",
                  "ak-gh",
                  "am",
                  "am-et",
                  "ar",
                  "ar-001",
                  "ar-ae",
                  "ar-bh",
                  "ar-dj",
                  "ar-dz",
                  "ar-eg",
                  "ar-eh",
                  "ar-er",
                  "ar-il",
                  "ar-iq",
                  "ar-jo",
                  "ar-km",
                  "ar-kw",
                  "ar-lb",
                  "ar-ly",
                  "ar-ma",
                  "ar-mr",
                  "ar-om",
                  "ar-ps",
                  "ar-qa",
                  "ar-sa",
                  "ar-sd",
                  "ar-so",
                  "ar-ss",
                  "ar-sy",
                  "ar-td",
                  "ar-tn",
                  "ar-ye",
                  "as",
                  "as-in",
                  "asa",
                  "asa-tz",
                  "ast",
                  "ast-es",
                  "az",
                  "az-az",
                  "bas",
                  "bas-cm",
                  "be",
                  "be-by",
                  "bem",
                  "bem-zm",
                  "bez",
                  "bez-tz",
                  "bg",
                  "bg-bg",
                  "bm",
                  "bm-ml",
                  "bn",
                  "bn-bd",
                  "bn-in",
                  "bo",
                  "bo-cn",
                  "bo-in",
                  "br",
                  "br-fr",
                  "brx",
                  "brx-in",
                  "bs",
                  "bs-ba",
                  "ca",
                  "ca-ad",
                  "ca-es",
                  "ca-fr",
                  "ca-it",
                  "ccp",
                  "ccp-bd",
                  "ccp-in",
                  "ce",
                  "ce-ru",
                  "cgg",
                  "cgg-ug",
                  "chr",
                  "chr-us",
                  "ckb",
                  "ckb-iq",
                  "ckb-ir",
                  "cs",
                  "cs-cz",
                  "cu",
                  "cu-ru",
                  "cy",
                  "cy-gb",
                  "da",
                  "da-dk",
                  "da-gl",
                  "dav",
                  "dav-ke",
                  "de",
                  "de-at",
                  "de-be",
                  "de-ch",
                  "de-de",
                  "de-gr",
                  "de-it",
                  "de-li",
                  "de-lu",
                  "dje",
                  "dje-ne",
                  "dsb",
                  "dsb-de",
                  "dua",
                  "dua-cm",
                  "dyo",
                  "dyo-sn",
                  "dz",
                  "dz-bt",
                  "ebu",
                  "ebu-ke",
                  "ee",
                  "ee-gh",
                  "ee-tg",
                  "el",
                  "el-cy",
                  "el-gr",
                  "en",
                  "en-001",
                  "en-150",
                  "en-ae",
                  "en-ag",
                  "en-ai",
                  "en-as",
                  "en-at",
                  "en-au",
                  "en-bb",
                  "en-be",
                  "en-bi",
                  "en-bm",
                  "en-bs",
                  "en-bw",
                  "en-bz",
                  "en-ca",
                  "en-cc",
                  "en-ch",
                  "en-ck",
                  "en-cm",
                  "en-cx",
                  "en-cy",
                  "en-de",
                  "en-dg",
                  "en-dk",
                  "en-dm",
                  "en-er",
                  "en-fi",
                  "en-fj",
                  "en-fk",
                  "en-fm",
                  "en-gb",
                  "en-gd",
                  "en-gg",
                  "en-gh",
                  "en-gi",
                  "en-gm",
                  "en-gu",
                  "en-gy",
                  "en-hk",
                  "en-ie",
                  "en-il",
                  "en-im",
                  "en-in",
                  "en-io",
                  "en-je",
                  "en-jm",
                  "en-ke",
                  "en-ki",
                  "en-kn",
                  "en-ky",
                  "en-lc",
                  "en-lr",
                  "en-ls",
                  "en-lu",
                  "en-mg",
                  "en-mh",
                  "en-mo",
                  "en-mp",
                  "en-ms",
                  "en-mt",
                  "en-mu",
                  "en-mw",
                  "en-my",
                  "en-na",
                  "en-nf",
                  "en-ng",
                  "en-nl",
                  "en-nr",
                  "en-nu",
                  "en-nz",
                  "en-pg",
                  "en-ph",
                  "en-pk",
                  "en-pn",
                  "en-pr",
                  "en-pw",
                  "en-rw",
                  "en-sb",
                  "en-sc",
                  "en-sd",
                  "en-se",
                  "en-sg",
                  "en-sh",
                  "en-si",
                  "en-sl",
                  "en-ss",
                  "en-sx",
                  "en-sz",
                  "en-tc",
                  "en-tk",
                  "en-to",
                  "en-tt",
                  "en-tv",
                  "en-tz",
                  "en-ug",
                  "en-um",
                  "en-us",
                  "en-vc",
                  "en-vg",
                  "en-vi",
                  "en-vu",
                  "en-ws",
                  "en-za",
                  "en-zm",
                  "en-zw",
                  "eo",
                  "eo-001",
                  "es",
                  "es-419",
                  "es-ar",
                  "es-bo",
                  "es-br",
                  "es-bz",
                  "es-cl",
                  "es-co",
                  "es-cr",
                  "es-cu",
                  "es-do",
                  "es-ea",
                  "es-ec",
                  "es-es",
                  "es-gq",
                  "es-gt",
                  "es-hn",
                  "es-ic",
                  "es-mx",
                  "es-ni",
                  "es-pa",
                  "es-pe",
                  "es-ph",
                  "es-pr",
                  "es-py",
                  "es-sv",
                  "es-us",
                  "es-uy",
                  "es-ve",
                  "et",
                  "et-ee",
                  "eu",
                  "eu-es",
                  "ewo",
                  "ewo-cm",
                  "fa",
                  "fa-af",
                  "fa-ir",
                  "ff",
                  "ff-cm",
                  "ff-gn",
                  "ff-mr",
                  "ff-sn",
                  "fi",
                  "fi-fi",
                  "fil",
                  "fil-ph",
                  "fo",
                  "fo-dk",
                  "fo-fo",
                  "fr",
                  "fr-be",
                  "fr-bf",
                  "fr-bi",
                  "fr-bj",
                  "fr-bl",
                  "fr-ca",
                  "fr-cd",
                  "fr-cf",
                  "fr-cg",
                  "fr-ch",
                  "fr-ci",
                  "fr-cm",
                  "fr-dj",
                  "fr-dz",
                  "fr-fr",
                  "fr-ga",
                  "fr-gf",
                  "fr-gn",
                  "fr-gp",
                  "fr-gq",
                  "fr-ht",
                  "fr-km",
                  "fr-lu",
                  "fr-ma",
                  "fr-mc",
                  "fr-mf",
                  "fr-mg",
                  "fr-ml",
                  "fr-mq",
                  "fr-mr",
                  "fr-mu",
                  "fr-nc",
                  "fr-ne",
                  "fr-pf",
                  "fr-pm",
                  "fr-re",
                  "fr-rw",
                  "fr-sc",
                  "fr-sn",
                  "fr-sy",
                  "fr-td",
                  "fr-tg",
                  "fr-tn",
                  "fr-vu",
                  "fr-wf",
                  "fr-yt",
                  "fur",
                  "fur-it",
                  "fy",
                  "fy-nl",
                  "ga",
                  "ga-ie",
                  "gd",
                  "gd-gb",
                  "gl",
                  "gl-es",
                  "gsw",
                  "gsw-ch",
                  "gsw-fr",
                  "gsw-li",
                  "gu",
                  "gu-in",
                  "guz",
                  "guz-ke",
                  "gv",
                  "gv-im",
                  "ha",
                  "ha-gh",
                  "ha-ne",
                  "ha-ng",
                  "haw",
                  "haw-us",
                  "he",
                  "hi",
                  "hi-in",
                  "hr",
                  "hr-ba",
                  "hr-hr",
                  "hsb",
                  "hsb-de",
                  "hu",
                  "hu-hu",
                  "hy",
                  "hy-am",
                  "id",
                  "ig",
                  "ig-ng",
                  "ii",
                  "ii-cn",
                  "id-id",
                  "is",
                  "is-is",
                  "it",
                  "it-ch",
                  "it-it",
                  "it-sm",
                  "it-va",
                  "he-il",
                  "ja",
                  "ja-jp",
                  "jgo",
                  "jgo-cm",
                  "yi",
                  "yi-001",
                  "jmc",
                  "jmc-tz",
                  "ka",
                  "ka-ge",
                  "kab",
                  "kab-dz",
                  "kam",
                  "kam-ke",
                  "kde",
                  "kde-tz",
                  "kea",
                  "kea-cv",
                  "khq",
                  "khq-ml",
                  "ki",
                  "ki-ke",
                  "kk",
                  "kk-kz",
                  "kkj",
                  "kkj-cm",
                  "kl",
                  "kl-gl",
                  "kln",
                  "kln-ke",
                  "km",
                  "km-kh",
                  "kn",
                  "kn-in",
                  "ko",
                  "ko-kp",
                  "ko-kr",
                  "kok",
                  "kok-in",
                  "ks",
                  "ks-in",
                  "ksb",
                  "ksb-tz",
                  "ksf",
                  "ksf-cm",
                  "ksh",
                  "ksh-de",
                  "kw",
                  "kw-gb",
                  "ky",
                  "ky-kg",
                  "lag",
                  "lag-tz",
                  "lb",
                  "lb-lu",
                  "lg",
                  "lg-ug",
                  "lkt",
                  "lkt-us",
                  "ln",
                  "ln-ao",
                  "ln-cd",
                  "ln-cf",
                  "ln-cg",
                  "lo",
                  "lo-la",
                  "lrc",
                  "lrc-iq",
                  "lrc-ir",
                  "lt",
                  "lt-lt",
                  "lu",
                  "lu-cd",
                  "luo",
                  "luo-ke",
                  "luy",
                  "luy-ke",
                  "lv",
                  "lv-lv",
                  "mas",
                  "mas-ke",
                  "mas-tz",
                  "mer",
                  "mer-ke",
                  "mfe",
                  "mfe-mu",
                  "mg",
                  "mg-mg",
                  "mgh",
                  "mgh-mz",
                  "mgo",
                  "mgo-cm",
                  "mk",
                  "mk-mk",
                  "ml",
                  "ml-in",
                  "mn",
                  "mn-mn",
                  "mr",
                  "mr-in",
                  "ms",
                  "ms-bn",
                  "ms-my",
                  "ms-sg",
                  "mt",
                  "mt-mt",
                  "mua",
                  "mua-cm",
                  "my",
                  "my-mm",
                  "mzn",
                  "mzn-ir",
                  "naq",
                  "naq-na",
                  "nb",
                  "nb-no",
                  "nb-sj",
                  "nd",
                  "nd-zw",
                  "nds",
                  "nds-de",
                  "nds-nl",
                  "ne",
                  "ne-in",
                  "ne-np",
                  "nl",
                  "nl-aw",
                  "nl-be",
                  "nl-ch",
                  "nl-bq",
                  "nl-cw",
                  "nl-lu",
                  "nl-nl",
                  "nl-sr",
                  "nl-sx",
                  "nmg",
                  "nmg-cm",
                  "nn",
                  "nn-no",
                  "nnh",
                  "nnh-cm",
                  "no",
                  "no-no",
                  "nus",
                  "nus-ss",
                  "nyn",
                  "nyn-ug",
                  "om",
                  "om-et",
                  "om-ke",
                  "or",
                  "or-in",
                  "os",
                  "os-ge",
                  "os-ru",
                  "pa",
                  "pa-in",
                  "pa-pk",
                  "pl",
                  "pl-pl",
                  "prg",
                  "prg-001",
                  "ps",
                  "ps-af",
                  "pt",
                  "pt-ao",
                  "pt-br",
                  "pt-ch",
                  "pt-cv",
                  "pt-gq",
                  "pt-gw",
                  "pt-lu",
                  "pt-mo",
                  "pt-mz",
                  "pt-pt",
                  "pt-st",
                  "pt-tl",
                  "qu",
                  "qu-bo",
                  "qu-ec",
                  "qu-pe",
                  "rm",
                  "rm-ch",
                  "rn",
                  "rn-bi",
                  "ro",
                  "ro-md",
                  "ro-ro",
                  "rof",
                  "rof-tz",
                  "ru",
                  "ru-by",
                  "ru-kg",
                  "ru-kz",
                  "ru-md",
                  "ru-ru",
                  "ru-ua",
                  "rw",
                  "rw-rw",
                  "rwk",
                  "rwk-tz",
                  "sa",
                  "sah",
                  "sah-ru",
                  "saq",
                  "saq-ke",
                  "sbp",
                  "sbp-tz",
                  "sd",
                  "sd-pk",
                  "se",
                  "se-fi",
                  "se-no",
                  "se-se",
                  "seh",
                  "seh-mz",
                  "ses",
                  "ses-ml",
                  "sg",
                  "sg-cf",
                  "shi",
                  "shi-ma",
                  "si",
                  "si-lk",
                  "sk",
                  "sk-sk",
                  "sl",
                  "sl-si",
                  "smn",
                  "smn-fi",
                  "sn",
                  "sn-zw",
                  "so",
                  "so-dj",
                  "so-et",
                  "so-ke",
                  "so-so",
                  "sq",
                  "sq-al",
                  "sq-mk",
                  "sq-xk",
                  "sr",
                  "sr-ba",
                  "sr-cs",
                  "sr-me",
                  "sr-rs",
                  "sr-xk",
                  "sv",
                  "sv-ax",
                  "sv-fi",
                  "sv-se",
                  "sw",
                  "sw-cd",
                  "sw-ke",
                  "sw-tz",
                  "sw-ug",
                  "sy",
                  "ta",
                  "ta-in",
                  "ta-lk",
                  "ta-my",
                  "ta-sg",
                  "te",
                  "te-in",
                  "teo",
                  "teo-ke",
                  "teo-ug",
                  "tg",
                  "tg-tj",
                  "th",
                  "th-th",
                  "ti",
                  "ti-er",
                  "ti-et",
                  "tk",
                  "tk-tm",
                  "to",
                  "to-to",
                  "tr",
                  "tr-cy",
                  "tr-tr",
                  "tt",
                  "tt-ru",
                  "twq",
                  "twq-ne",
                  "tzm",
                  "tzm-ma",
                  "ug",
                  "ug-cn",
                  "uk",
                  "uk-ua",
                  "ur",
                  "ur-in",
                  "ur-pk",
                  "uz",
                  "uz-af",
                  "uz-uz",
                  "vai",
                  "vai-lr",
                  "vi",
                  "vi-vn",
                  "vo",
                  "vo-001",
                  "vun",
                  "vun-tz",
                  "wae",
                  "wae-ch",
                  "wo",
                  "wo-sn",
                  "xog",
                  "xog-ug",
                  "yav",
                  "yav-cm",
                  "yo",
                  "yo-bj",
                  "yo-ng",
                  "yue",
                  "yue-cn",
                  "yue-hk",
                  "zgh",
                  "zgh-ma",
                  "zh",
                  "zh-cn",
                  "zh-hk",
                  "zh-mo",
                  "zh-sg",
                  "zh-tw",
                  "zh-hans",
                  "zh-hant",
                  "zu",
                  "zu-za"
              ],
              "x-hubspot-external-project-origin": true
            },
            "description": "Map of object IDs to associated languages of object in the multi-language group."
          }
        },
        "description": "Request object for updating languages within a multi-language group."
      },
      "VersionBlogPost": {
        "required": [
            "id",
            "object",
            "updatedAt",
            "user"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/BlogPost"
          },
          "user": {
            "$ref": "#/components/schemas/VersionUser"
          },
          "id": {
            "type": "string",
            "description": "The id of the version."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Model definition of a version of a blog post."
      },
      "VersionUser": {
        "required": [
            "email",
            "fullName",
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the User."
          },
          "email": {
            "type": "string",
            "description": "The email address of the user."
          },
          "fullName": {
            "type": "string",
            "description": "The first and last name of the User."
          }
        },
        "description": "Model definition for a version user. Contains addition information about the user who created a version."
      },
      "BatchInputBlogAuthor": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "description": "Blog authors to input.",
            "items": {
              "$ref": "#/components/schemas/BlogAuthor"
            }
          }
        },
        "description": "Wrapper for providing an array of blog authors as inputs."
      },
      "BatchResponseBlogAuthor": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/BlogAuthor"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog authors."
      },
      "BatchResponseBlogAuthorWithErrors": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/BlogAuthor"
            }
          },
          "numErrors": {
            "type": "integer",
            "description": "Number of errors.",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "description": "Errors in batch operation.",
            "items": {
              "$ref": "#/components/schemas/StandardError"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog authors with errors."
      },
      "BlogAuthor": {
        "required": [
            "avatar",
            "bio",
            "created",
            "deletedAt",
            "displayName",
            "email",
            "facebook",
            "fullName",
            "id",
            "language",
            "linkedin",
            "name",
            "slug",
            "translatedFromId",
            "twitter",
            "updated",
            "website"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the Blog Author."
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "Email address of the Blog Author."
          },
          "slug": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "description": "The explicitly defined ISO 639 language code of the blog author.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-cm",
                "ff-gn",
                "ff-mr",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          },
          "translatedFromId": {
            "type": "integer",
            "description": "ID of the primary blog author this object was translated from.",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "description": "The full name of the Blog Author to be displayed."
          },
          "bio": {
            "type": "string",
            "description": "A short biography of the blog author."
          },
          "website": {
            "type": "string",
            "description": "URL to the website of the Blog Author."
          },
          "twitter": {
            "type": "string",
            "description": "URL or username of the Twitter account associated with the Blog Author. This will be normalized into the Twitter url for said user."
          },
          "facebook": {
            "type": "string",
            "description": "URL to the Blog Author's Facebook page."
          },
          "linkedin": {
            "type": "string",
            "description": "URL to the blog author's LinkedIn page."
          },
          "avatar": {
            "type": "string",
            "description": "URL to the blog author's avatar, if supplying a custom one."
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "The timestamp (ISO8601 format) when this Blog Author was deleted.",
            "format": "date-time"
          }
        },
        "description": "Model definition for a Blog Author."
      },
      "BlogAuthorCloneRequestVNext": {
        "required": [
            "blogAuthor",
            "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the object to be cloned."
          },
          "language": {
            "type": "string",
            "description": "Language of newly cloned object."
          },
          "primaryLanguage": {
            "type": "string",
            "description": "Primary language in multi-language group."
          },
          "blogAuthor": {
            "$ref": "#/components/schemas/BlogAuthor"
          }
        },
        "description": "Request body object for cloning blog authors."
      },
      "CollectionResponseWithTotalBlogAuthorForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of blog authors.",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "description": "Collection of blog authors.",
            "items": {
              "$ref": "#/components/schemas/BlogAuthor"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging1"
          }
        },
        "description": "Response object for collections of blog authors with pagination information."
      },
      "ForwardPaging1": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage2"
          }
        },
        "description": "Model definition for forward paging."
      },
      "NextPage2": {
        "required": [
            "after"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "description": "Model definition for a next page."
      },
      "CollectionResponseWithTotalUrlMappingForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlMapping"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging2"
          }
        }
      },
      "ForwardPaging2": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage"
          }
        }
      },
      "UrlMapping": {
        "required": [
            "destination",
            "id",
            "isMatchFullUrl",
            "isMatchQueryString",
            "isOnlyAfterNotFound",
            "isPattern",
            "isProtocolAgnostic",
            "isTrailingSlashOptional",
            "precedence",
            "redirectStyle",
            "routePrefix"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this URL redirect."
          },
          "routePrefix": {
            "type": "string",
            "description": "The target incoming URL, path, or pattern to match for redirection."
          },
          "destination": {
            "type": "string",
            "description": "The destination URL, where the target URL should be redirected if it matches the `routePrefix`."
          },
          "redirectStyle": {
            "type": "integer",
            "description": "The type of redirect to create. Options include: 301 (permanent), 302 (temporary), or 305 (proxy). Find more details [here](https://knowledge.hubspot.com/cos-general/how-to-redirect-a-hubspot-page).",
            "format": "int32"
          },
          "isOnlyAfterNotFound": {
            "type": "boolean",
            "description": "Whether the URL redirect mapping should apply only if a live page on the URL isn't found. If False, the URL redirect mapping will take precedence over any existing page."
          },
          "isMatchFullUrl": {
            "type": "boolean",
            "description": "Whether the `routePrefix` should match on the entire URL, including the domain."
          },
          "isMatchQueryString": {
            "type": "boolean",
            "description": "Whether the `routePrefix` should match on the entire URL path, including the query string."
          },
          "isPattern": {
            "type": "boolean",
            "description": "Whether the `routePrefix` should match based on pattern."
          },
          "isTrailingSlashOptional": {
            "type": "boolean",
            "description": "Whether a trailing slash will be ignored."
          },
          "isProtocolAgnostic": {
            "type": "boolean",
            "description": "Whether the `routePrefix` should match both HTTP and HTTPS protocols."
          },
          "precedence": {
            "type": "integer",
            "description": "Used to prioritize URL redirection. If a given URL matches more than one redirect, the one with the **lower** precedence will be used.",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UrlMappingCreateRequestBody": {
        "required": [
            "destination",
            "redirectStyle",
            "routePrefix"
        ],
        "type": "object",
        "properties": {
          "precedence": {
            "type": "integer",
            "format": "int32"
          },
          "isOnlyAfterNotFound": {
            "type": "boolean"
          },
          "isMatchFullUrl": {
            "type": "boolean"
          },
          "isMatchQueryString": {
            "type": "boolean"
          },
          "isPattern": {
            "type": "boolean"
          },
          "isTrailingSlashOptional": {
            "type": "boolean"
          },
          "isProtocolAgnostic": {
            "type": "boolean"
          },
          "routePrefix": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "redirectStyle": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PerformanceView": {
        "required": [
            "100X",
            "20X",
            "30X",
            "403",
            "404",
            "40X",
            "500",
            "504",
            "50X",
            "50th",
            "95th",
            "99th",
            "avgOriginResponseTime",
            "cacheHitRate",
            "cacheHits",
            "endDatetime",
            "endTimestamp",
            "responseTimeMs",
            "startDatetime",
            "startTimestamp",
            "totalRequestTime",
            "totalRequests"
        ],
        "type": "object",
        "properties": {
          "403": {
            "type": "integer",
            "description": "The number of responses that had an http status code of 403.",
            "format": "int32"
          },
          "404": {
            "type": "integer",
            "description": "The number of responses that had an http status code of 404.",
            "format": "int32"
          },
          "500": {
            "type": "integer",
            "description": "The number of responses that had an http status code of 500.",
            "format": "int32"
          },
          "504": {
            "type": "integer",
            "description": "The number of responses that had an http status code of 504.",
            "format": "int32"
          },
          "startTimestamp": {
            "type": "integer",
            "description": "The timestamp in milliseconds of the start of this interval.",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "description": "The timestamp in milliseconds of the end of this interval.",
            "format": "int64"
          },
          "startDatetime": {
            "type": "string"
          },
          "endDatetime": {
            "type": "string"
          },
          "totalRequests": {
            "type": "integer",
            "description": "The total number of requests received in this period.",
            "format": "int32"
          },
          "cacheHits": {
            "type": "integer",
            "description": "The total number of requests that were served cached responses.",
            "format": "int32"
          },
          "cacheHitRate": {
            "type": "number",
            "description": "The percentage of requests that were served cached responses."
          },
          "totalRequestTime": {
            "type": "integer",
            "format": "int32"
          },
          "avgOriginResponseTime": {
            "type": "integer",
            "description": "The average response time in milliseconds from the origin to the edge.",
            "format": "int32"
          },
          "responseTimeMs": {
            "type": "integer",
            "description": "The average response time in milliseconds.",
            "format": "int32"
          },
          "100X": {
            "type": "integer",
            "description": "The number of responses that had an http status code between 1000-1999.",
            "format": "int32"
          },
          "20X": {
            "type": "integer",
            "description": "The number of responses that had an http status code between 200-299.",
            "format": "int32"
          },
          "30X": {
            "type": "integer",
            "description": "The number of responses that had an http status code between 300-399.",
            "format": "int32"
          },
          "40X": {
            "type": "integer",
            "description": "The number of responses that had an http status code between 400-499.",
            "format": "int32"
          },
          "50X": {
            "type": "integer",
            "description": "The number of responses that had an http status code between 500-599.",
            "format": "int32"
          },
          "50th": {
            "type": "integer",
            "description": "The 50th percentile response time.",
            "format": "int32"
          },
          "95th": {
            "type": "integer",
            "description": "The 95th percentile response time.",
            "format": "int32"
          },
          "99th": {
            "type": "integer",
            "description": "The 99th percentile response time.",
            "format": "int32"
          }
        },
        "description": "An individual time series performance data point."
      },
      "PublicPerformanceResponse": {
        "required": [
            "data",
            "endInterval",
            "interval",
            "startInterval"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceView"
            }
          },
          "domain": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "startInterval": {
            "type": "integer",
            "format": "int64"
          },
          "endInterval": {
            "type": "integer",
            "format": "int64"
          },
          "interval": {
            "type": "string",
            "enum": [
                "ONE_MINUTE",
                "FIVE_MINUTES",
                "TEN_MINUTES",
                "FIFTEEN_MINUTES",
                "THIRTY_MINUTES",
                "ONE_HOUR",
                "FOUR_HOURS",
                "TWELVE_HOURS",
                "ONE_DAY",
                "ONE_WEEK"
            ]
          },
          "period": {
            "type": "string",
            "enum": [
                "ONE_MINUTE",
                "FIVE_MINUTES",
                "TEN_MINUTES",
                "FIFTEEN_MINUTES",
                "THIRTY_MINUTES",
                "ONE_HOUR",
                "FOUR_HOURS",
                "TWELVE_HOURS",
                "ONE_DAY",
                "ONE_WEEK"
            ]
          }
        }
      },
      "BatchInputHubDbTableRowV3Request": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubDbTableRowV3Request"
            }
          }
        }
      },
      "BatchInputJsonNode1": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "BatchInputString1": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BatchResponseHubDbTableRowV3": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubDbTableRowV3"
            }
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BatchResponseHubDbTableRowV3WithErrors": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubDbTableRowV3"
            }
          },
          "numErrors": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StandardError1"
            }
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "CollectionResponseWithTotalHubDbTableRowV3ForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubDbTableRowV3"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging3"
          }
        }
      },
      "CollectionResponseWithTotalHubDbTableV3ForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubDbTableV3"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging3"
          }
        }
      },
      "Column": {
        "required": [
            "label",
            "name",
            "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the column"
          },
          "label": {
            "type": "string",
            "description": "Label of the column"
          },
          "id": {
            "type": "string",
            "description": "Column Id"
          },
          "width": {
            "type": "integer",
            "description": "Column width for HubDB UI",
            "format": "int32"
          },
          "foreignTableId": {
            "type": "integer",
            "description": "Foreign table id referenced",
            "format": "int64"
          },
          "foreignColumnId": {
            "type": "integer",
            "description": "Foreign Column id",
            "format": "int32"
          },
          "foreignIds": {
            "type": "array",
            "description": "Foreign Ids",
            "items": {
              "$ref": "#/components/schemas/ForeignId"
            }
          },
          "foreignIdsById": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ForeignId"
            },
            "description": "Foreign ids"
          },
          "foreignIdsByName": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ForeignId"
            },
            "description": "Foreign ids by name"
          },
          "type": {
            "type": "string",
            "description": "Type of the column",
            "enum": [
                "NULL",
                "TEXT",
                "NUMBER",
                "URL",
                "IMAGE",
                "SELECT",
                "MULTISELECT",
                "BOOLEAN",
                "LOCATION",
                "DATE",
                "DATETIME",
                "CURRENCY",
                "RICHTEXT",
                "FOREIGN_ID",
                "VIDEO",
                "CTA"
            ]
          },
          "optionCount": {
            "type": "integer",
            "description": "Number of options available",
            "format": "int32"
          },
          "archived": {
            "type": "boolean",
            "description": "Specifies whether the column is archived"
          },
          "options": {
            "type": "array",
            "description": "Options to choose for select and multi-select columns",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          }
        },
        "example": {
          "name": "text_column",
          "label": "Text Column",
          "archived": false,
          "type": "TEXT",
          "id": 1
        }
      },
      "ColumnRequest": {
        "required": [
            "id",
            "label",
            "name",
            "options",
            "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Column Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the column"
          },
          "label": {
            "type": "string",
            "description": "Label of the column"
          },
          "type": {
            "type": "string",
            "description": "Type of the column",
            "enum": [
                "NULL",
                "TEXT",
                "NUMBER",
                "URL",
                "IMAGE",
                "SELECT",
                "MULTISELECT",
                "BOOLEAN",
                "LOCATION",
                "DATE",
                "DATETIME",
                "CURRENCY",
                "RICHTEXT",
                "FOREIGN_ID",
                "VIDEO",
                "CTA"
            ]
          },
          "options": {
            "type": "array",
            "description": "Options to choose for select and multi-select columns",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          },
          "foreignTableId": {
            "type": "integer",
            "description": "The id of another table to which the column refers/points to.",
            "format": "int64"
          },
          "foreignColumnId": {
            "type": "integer",
            "description": "The id of the column from another table to which the column refers/points to.",
            "format": "int32"
          }
        },
        "example": {
          "name": "text_column",
          "label": "Text Column",
          "archived": false,
          "type": "TEXT",
          "id": 1
        }
      },
      "ErrorCategory1": {
        "type": "object"
      },
      "ForeignId": {
        "required": [
            "id",
            "name",
            "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ForwardPaging3": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage"
          }
        }
      },
      "HubDbTableCloneRequest": {
        "required": [
            "copyRows"
        ],
        "type": "object",
        "properties": {
          "newName": {
            "type": "string",
            "description": "The new name for the cloned table"
          },
          "newLabel": {
            "type": "string",
            "description": "The new label for the cloned table"
          },
          "copyRows": {
            "type": "boolean",
            "description": "Specifies whether to copy the rows during clone"
          }
        },
        "example": {
          "newName": "test_table_new",
          "newLabel": "Test Table New",
          "copyRows": "true"
        }
      },
      "HubDbTableRowV3": {
        "required": [
            "values"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the table row"
          },
          "path": {
            "type": "string",
            "description": "Specifies the value for `hs_path` column, which will be used as slug in the dynamic pages"
          },
          "name": {
            "type": "string",
            "description": "Specifies the value for `hs_name` column, which will be used as title in the dynamic pages"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamp at which the row is created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Timestamp at which the row is updated last time",
            "format": "date-time"
          },
          "childTableId": {
            "type": "string",
            "description": "Specifies the value for the column child table id"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "List of key value pairs with the column name and column value"
          }
        },
        "example": {
          "id": "4099275931",
          "createdAt": "2020-03-30T20:39:52.328Z",
          "updatedAt": "2020-03-30T20:39:52.328Z",
          "values": {
            "text_column": "sample text value",
            "number_column": 76,
            "multiselect": [
              {
                "id": "1",
                "name": "Option 1",
                "type": "option",
                "order": 0
              },
              {
                "id": "2",
                "name": "Option 2",
                "type": "option",
                "order": 1
              }
            ]
          },
          "path": "test_path",
          "name": "test_title",
          "childTableId": "1902373"
        }
      },
      "HubDbTableRowV3Request": {
        "required": [
            "values"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Specifies the value for `hs_path` column, which will be used as slug in the dynamic pages"
          },
          "name": {
            "type": "string",
            "description": "Specifies the value for `hs_name` column, which will be used as title in the dynamic pages"
          },
          "childTableId": {
            "type": "integer",
            "description": "Specifies the value for the column child table id",
            "format": "int32"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Variant"
            },
            "description": "List of key value pairs with the column name and column value"
          }
        },
        "example": {
          "values": {
            "text_column": "sample text value",
            "number_column": 76,
            "multiselect": [
              {
                "id": "1",
                "name": "Option 1",
                "type": "option",
                "order": 0
              },
              {
                "id": "2",
                "name": "Option 2",
                "type": "option",
                "order": 1
              }
            ]
          },
          "path": "test_path",
          "name": "test_title",
          "childTableId": "1902373"
        }
      },
      "HubDbTableV3": {
        "required": [
            "label",
            "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the table"
          },
          "name": {
            "type": "string",
            "description": "Name of the table"
          },
          "label": {
            "type": "string",
            "description": "Label of the table"
          },
          "columns": {
            "type": "array",
            "description": "List of columns in the table",
            "items": {
              "$ref": "#/components/schemas/Column"
            }
          },
          "published": {
            "type": "boolean"
          },
          "columnCount": {
            "type": "integer",
            "description": "Number of columns including deleted",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "description": "Number of rows in the table",
            "format": "int32"
          },
          "createdBy": {
            "$ref": "#/components/schemas/SimpleUser"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/SimpleUser"
          },
          "publishedAt": {
            "type": "string",
            "description": "Timestamp at which the table is published recently",
            "format": "date-time"
          },
          "dynamicMetaTags": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Specifies the key value pairs of the metadata fields with the associated column ids"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamp at which the table is created",
            "format": "date-time"
          },
          "archived": {
            "type": "boolean",
            "description": "Specifies whether table is archived or not"
          },
          "allowPublicApiAccess": {
            "type": "boolean",
            "description": "Specifies whether the table can be read by public without authorization"
          },
          "useForPages": {
            "type": "boolean",
            "description": "Specifies whether the table can be used for creation of dynamic pages"
          },
          "enableChildTablePages": {
            "type": "boolean",
            "description": "Specifies creation of multi-level dynamic pages using child tables"
          },
          "allowChildTables": {
            "type": "boolean",
            "description": "Specifies whether child tables can be created"
          },
          "updatedAt": {
            "type": "string",
            "description": "Timestamp at which the table is updated recently",
            "format": "date-time"
          }
        },
        "description": "Model for HubDB table",
        "example": {
          "id": "1630034",
          "label": "Test Table",
          "name": "test_table",
          "createdAt": "2019-03-15T21:20:51.556Z",
          "publishedAt": "2020-04-02T16:00:45.009Z",
          "updatedAt": "2020-04-02T16:00:43.880Z",
          "columns": [
            {
              "name": "text_column",
              "label": "Text Column",
              "id": "1",
              "archived": false,
              "foreignIdsById": {},
              "foreignIdsByName": {},
              "type": "TEXT"
            }
          ],
          "archived": false,
          "rowCount": 0,
          "useForPages": true,
          "allowChildTables": true,
          "enableChildTablePages": false,
          "dynamicMetaTags": {},
          "allowPublicApiAccess": false,
          "columnCount": 3
        }
      },
      "HubDbTableV3Request": {
        "required": [
            "label",
            "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the table"
          },
          "label": {
            "type": "string",
            "description": "Label of the table"
          },
          "useForPages": {
            "type": "boolean",
            "description": "Specifies whether the table can be used for creation of dynamic pages"
          },
          "allowPublicApiAccess": {
            "type": "boolean",
            "description": "Specifies whether the table can be read by public without authorization"
          },
          "allowChildTables": {
            "type": "boolean",
            "description": "Specifies whether child tables can be created"
          },
          "enableChildTablePages": {
            "type": "boolean",
            "description": "Specifies creation of multi-level dynamic pages using child tables"
          },
          "columns": {
            "type": "array",
            "description": "List of columns in the table",
            "items": {
              "$ref": "#/components/schemas/ColumnRequest"
            }
          },
          "dynamicMetaTags": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Specifies the key value pairs of the metadata fields with the associated column ids"
          }
        },
        "example": {
          "label": "Test Table",
          "name": "test_table",
          "columns": [
            {
              "name": "text_column",
              "label": "Text Column",
              "id": "1",
              "type": "TEXT"
            }
          ],
          "useForPages": true,
          "allowChildTables": true,
          "enableChildTablePages": false,
          "dynamicMetaTags": {},
          "allowPublicApiAccess": false
        }
      },
      "ImportResult": {
        "required": [
            "duplicateRows",
            "errors",
            "rowLimitExceeded",
            "rowsImported"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "List of errors during import",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "rowsImported": {
            "type": "integer",
            "description": "Specifies number of rows imported",
            "format": "int32"
          },
          "duplicateRows": {
            "type": "integer",
            "description": "Specifies number of duplicate rows",
            "format": "int32"
          },
          "rowLimitExceeded": {
            "type": "boolean",
            "description": "Specifies whether row limit exceeded during import"
          }
        },
        "description": "The result of import operation"
      },
      "Option": {
        "required": [
            "id",
            "name",
            "order",
            "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SimpleUser": {
        "required": [
            "email",
            "firstName",
            "id",
            "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "StandardError1": {
        "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ErrorCategory1"
          },
          "subCategory": {
            "type": "object",
            "properties": {}
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Variant": {
        "type": "object"
      },
      "BatchInputTag": {
        "required": [
            "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "description": "Blog tags to input.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "description": "Wrapper for providing an array of blog tags as inputs."
      },
      "BatchResponseTag": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog tags."
      },
      "BatchResponseTagWithErrors": {
        "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of batch operation.",
            "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
            ]
          },
          "results": {
            "type": "array",
            "description": "Results of batch operation.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "numErrors": {
            "type": "integer",
            "description": "Number of errors.",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "description": "Errors in batch operation.",
            "items": {
              "$ref": "#/components/schemas/StandardError"
            }
          },
          "requestedAt": {
            "type": "string",
            "description": "Time of batch operation request.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "Time of batch operation start.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Time of batch operation completion.",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links associated with batch operation."
          }
        },
        "description": "Response object for batch operations on blog tags with errors."
      },
      "CollectionResponseWithTotalTagForwardPaging": {
        "required": [
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of blog tags.",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "description": "Collection of blog tags.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging4"
          }
        },
        "description": "Response object for collections of blog tags with pagination information."
      },
      "ForwardPaging4": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage3"
          }
        },
        "description": "Model definition for forward paging."
      },
      "NextPage3": {
        "required": [
            "after"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "description": "Model definition for a next page."
      },
      "Tag": {
        "required": [
            "created",
            "deletedAt",
            "id",
            "language",
            "name",
            "translatedFromId",
            "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the Blog Tag."
          },
          "name": {
            "type": "string",
            "description": "The name of the tag."
          },
          "language": {
            "type": "string",
            "description": "The explicitly defined ISO 639 language code of the tag.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-cm",
                "ff-gn",
                "ff-mr",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          },
          "translatedFromId": {
            "type": "integer",
            "description": "ID of the primary tag this object was translated from.",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "The timestamp (ISO8601 format) when this Blog Tag was deleted.",
            "format": "date-time"
          }
        },
        "description": "Model definition for a Tag."
      },
      "TagCloneRequestVNext": {
        "required": [
            "id",
            "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the object to be cloned."
          },
          "language": {
            "type": "string",
            "description": "Target language of new variant."
          },
          "primaryLanguage": {
            "type": "string",
            "description": "Language of primary blog tag to clone."
          },
          "name": {
            "type": "string",
            "description": "Name of newly cloned blog tag."
          }
        },
        "description": "Request body object for cloning blog tags."
      },
      "CollectionResponsePublicAuditLog": {
        "required": [
            "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicAuditLog"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "description": "The collection of audit logs."
      },
      "PublicAuditLog": {
        "required": [
            "event",
            "fullName",
            "objectId",
            "objectName",
            "objectType",
            "timestamp",
            "userId"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "The ID of the object."
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who caused the event."
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp at which the event occurred.",
            "format": "date-time"
          },
          "objectName": {
            "type": "string",
            "description": "The internal name of the object in HubSpot."
          },
          "fullName": {
            "type": "string",
            "description": "The name of the user who caused the event."
          },
          "event": {
            "type": "string",
            "description": "The type of event that took place (CREATED, UPDATED, PUBLISHED, DELETED, UNPUBLISHED).",
            "enum": [
                "CREATED",
                "UPDATED",
                "PUBLISHED",
                "DELETED",
                "UNPUBLISHED"
            ]
          },
          "objectType": {
            "type": "string",
            "description": "The type of the object (BLOG, LANDING_PAGE, DOMAIN, HUBDB_TABLE etc.)",
            "enum": [
                "BLOG",
                "BLOG_POST",
                "LANDING_PAGE",
                "WEBSITE_PAGE",
                "TEMPLATE",
                "MODULE",
                "GLOBAL_MODULE",
                "SERVERLESS_FUNCTION",
                "DOMAIN",
                "URL_MAPPING",
                "EMAIL",
                "CONTENT_SETTINGS",
                "HUBDB_TABLE",
                "KNOWLEDGE_BASE_ARTICLE",
                "KNOWLEDGE_BASE",
                "THEME",
                "CSS",
                "JS"
            ]
          }
        },
        "example": {
          "objectName": "My Landing Page",
          "fullName": "John Doe",
          "event": "UPDATED",
          "userId": "1011561",
          "objectId": "4065364319",
          "timestamp": "1583792674672",
          "objectType": "LANDING_PAGE"
        }
      },
      "ContentSearchResult": {
        "required": [
            "domain",
            "id",
            "score",
            "type",
            "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the content.",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "description": "The matching score of the document."
          },
          "type": {
            "type": "string",
            "description": "The type of document. Can be `SITE_PAGE`, `LANDING_PAGE`, `BLOG_POST`, `LISTING_PAGE`, or `KNOWLEDGE_ARTICLE`.",
            "enum": [
                "LANDING_PAGE",
                "BLOG_POST",
                "SITE_PAGE",
                "KNOWLEDGE_ARTICLE",
                "LISTING_PAGE"
            ]
          },
          "domain": {
            "type": "string",
            "description": "The domain the document is hosted on."
          },
          "url": {
            "type": "string",
            "description": "The url of the document."
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "URL of the featured image."
          },
          "language": {
            "type": "string",
            "description": "The document's language.",
            "enum": [
                "af",
                "af-na",
                "af-za",
                "agq",
                "agq-cm",
                "ak",
                "ak-gh",
                "am",
                "am-et",
                "ar",
                "ar-001",
                "ar-ae",
                "ar-bh",
                "ar-dj",
                "ar-dz",
                "ar-eg",
                "ar-eh",
                "ar-er",
                "ar-il",
                "ar-iq",
                "ar-jo",
                "ar-km",
                "ar-kw",
                "ar-lb",
                "ar-ly",
                "ar-ma",
                "ar-mr",
                "ar-om",
                "ar-ps",
                "ar-qa",
                "ar-sa",
                "ar-sd",
                "ar-so",
                "ar-ss",
                "ar-sy",
                "ar-td",
                "ar-tn",
                "ar-ye",
                "as",
                "as-in",
                "asa",
                "asa-tz",
                "ast",
                "ast-es",
                "az",
                "az-az",
                "bas",
                "bas-cm",
                "be",
                "be-by",
                "bem",
                "bem-zm",
                "bez",
                "bez-tz",
                "bg",
                "bg-bg",
                "bm",
                "bm-ml",
                "bn",
                "bn-bd",
                "bn-in",
                "bo",
                "bo-cn",
                "bo-in",
                "br",
                "br-fr",
                "brx",
                "brx-in",
                "bs",
                "bs-ba",
                "ca",
                "ca-ad",
                "ca-es",
                "ca-fr",
                "ca-it",
                "ccp",
                "ccp-bd",
                "ccp-in",
                "ce",
                "ce-ru",
                "ceb",
                "ceb-ph",
                "cgg",
                "cgg-ug",
                "chr",
                "chr-us",
                "ckb",
                "ckb-iq",
                "ckb-ir",
                "cs",
                "cs-cz",
                "cu",
                "cu-ru",
                "cy",
                "cy-gb",
                "da",
                "da-dk",
                "da-gl",
                "dav",
                "dav-ke",
                "de",
                "de-at",
                "de-be",
                "de-ch",
                "de-de",
                "de-gr",
                "de-it",
                "de-li",
                "de-lu",
                "dje",
                "dje-ne",
                "doi",
                "doi-in",
                "dsb",
                "dsb-de",
                "dua",
                "dua-cm",
                "dyo",
                "dyo-sn",
                "dz",
                "dz-bt",
                "ebu",
                "ebu-ke",
                "ee",
                "ee-gh",
                "ee-tg",
                "el",
                "el-cy",
                "el-gr",
                "en",
                "en-001",
                "en-150",
                "en-ae",
                "en-ag",
                "en-ai",
                "en-as",
                "en-at",
                "en-au",
                "en-bb",
                "en-be",
                "en-bi",
                "en-bm",
                "en-bs",
                "en-bw",
                "en-bz",
                "en-ca",
                "en-cc",
                "en-ch",
                "en-ck",
                "en-cm",
                "en-cx",
                "en-cy",
                "en-de",
                "en-dg",
                "en-dk",
                "en-dm",
                "en-er",
                "en-fi",
                "en-fj",
                "en-fk",
                "en-fm",
                "en-gb",
                "en-gd",
                "en-gg",
                "en-gh",
                "en-gi",
                "en-gm",
                "en-gu",
                "en-gy",
                "en-hk",
                "en-ie",
                "en-il",
                "en-im",
                "en-in",
                "en-io",
                "en-je",
                "en-jm",
                "en-ke",
                "en-ki",
                "en-kn",
                "en-ky",
                "en-lc",
                "en-lr",
                "en-ls",
                "en-lu",
                "en-mg",
                "en-mh",
                "en-mo",
                "en-mp",
                "en-ms",
                "en-mt",
                "en-mu",
                "en-mw",
                "en-my",
                "en-na",
                "en-nf",
                "en-ng",
                "en-nl",
                "en-nr",
                "en-nu",
                "en-nz",
                "en-pg",
                "en-ph",
                "en-pk",
                "en-pn",
                "en-pr",
                "en-pw",
                "en-rw",
                "en-sb",
                "en-sc",
                "en-sd",
                "en-se",
                "en-sg",
                "en-sh",
                "en-si",
                "en-sl",
                "en-ss",
                "en-sx",
                "en-sz",
                "en-tc",
                "en-tk",
                "en-to",
                "en-tt",
                "en-tv",
                "en-tz",
                "en-ug",
                "en-um",
                "en-us",
                "en-vc",
                "en-vg",
                "en-vi",
                "en-vu",
                "en-ws",
                "en-za",
                "en-zm",
                "en-zw",
                "eo",
                "eo-001",
                "es",
                "es-419",
                "es-ar",
                "es-bo",
                "es-br",
                "es-bz",
                "es-cl",
                "es-co",
                "es-cr",
                "es-cu",
                "es-do",
                "es-ea",
                "es-ec",
                "es-es",
                "es-gq",
                "es-gt",
                "es-hn",
                "es-ic",
                "es-mx",
                "es-ni",
                "es-pa",
                "es-pe",
                "es-ph",
                "es-pr",
                "es-py",
                "es-sv",
                "es-us",
                "es-uy",
                "es-ve",
                "et",
                "et-ee",
                "eu",
                "eu-es",
                "ewo",
                "ewo-cm",
                "fa",
                "fa-af",
                "fa-ir",
                "ff",
                "ff-bf",
                "ff-cm",
                "ff-gh",
                "ff-gm",
                "ff-gn",
                "ff-gw",
                "ff-lr",
                "ff-mr",
                "ff-ne",
                "ff-ng",
                "ff-sl",
                "ff-sn",
                "fi",
                "fi-fi",
                "fil",
                "fil-ph",
                "fo",
                "fo-dk",
                "fo-fo",
                "fr",
                "fr-be",
                "fr-bf",
                "fr-bi",
                "fr-bj",
                "fr-bl",
                "fr-ca",
                "fr-cd",
                "fr-cf",
                "fr-cg",
                "fr-ch",
                "fr-ci",
                "fr-cm",
                "fr-dj",
                "fr-dz",
                "fr-fr",
                "fr-ga",
                "fr-gf",
                "fr-gn",
                "fr-gp",
                "fr-gq",
                "fr-ht",
                "fr-km",
                "fr-lu",
                "fr-ma",
                "fr-mc",
                "fr-mf",
                "fr-mg",
                "fr-ml",
                "fr-mq",
                "fr-mr",
                "fr-mu",
                "fr-nc",
                "fr-ne",
                "fr-pf",
                "fr-pm",
                "fr-re",
                "fr-rw",
                "fr-sc",
                "fr-sn",
                "fr-sy",
                "fr-td",
                "fr-tg",
                "fr-tn",
                "fr-vu",
                "fr-wf",
                "fr-yt",
                "fur",
                "fur-it",
                "fy",
                "fy-nl",
                "ga",
                "ga-gb",
                "ga-ie",
                "gd",
                "gd-gb",
                "gl",
                "gl-es",
                "gsw",
                "gsw-ch",
                "gsw-fr",
                "gsw-li",
                "gu",
                "gu-in",
                "guz",
                "guz-ke",
                "gv",
                "gv-im",
                "ha",
                "ha-gh",
                "ha-ne",
                "ha-ng",
                "haw",
                "haw-us",
                "he",
                "hi",
                "hi-in",
                "hr",
                "hr-ba",
                "hr-hr",
                "hsb",
                "hsb-de",
                "hu",
                "hu-hu",
                "hy",
                "hy-am",
                "ia",
                "ia-001",
                "id",
                "ig",
                "ig-ng",
                "ii",
                "ii-cn",
                "id-id",
                "is",
                "is-is",
                "it",
                "it-ch",
                "it-it",
                "it-sm",
                "it-va",
                "he-il",
                "ja",
                "ja-jp",
                "jgo",
                "jgo-cm",
                "yi",
                "yi-001",
                "jmc",
                "jmc-tz",
                "jv",
                "jv-id",
                "ka",
                "ka-ge",
                "kab",
                "kab-dz",
                "kam",
                "kam-ke",
                "kde",
                "kde-tz",
                "kea",
                "kea-cv",
                "khq",
                "khq-ml",
                "ki",
                "ki-ke",
                "kk",
                "kk-kz",
                "kkj",
                "kkj-cm",
                "kl",
                "kl-gl",
                "kln",
                "kln-ke",
                "km",
                "km-kh",
                "kn",
                "kn-in",
                "ko",
                "ko-kp",
                "ko-kr",
                "kok",
                "kok-in",
                "ks",
                "ks-in",
                "ksb",
                "ksb-tz",
                "ksf",
                "ksf-cm",
                "ksh",
                "ksh-de",
                "kw",
                "kw-gb",
                "ku",
                "ku-tr",
                "ky",
                "ky-kg",
                "lag",
                "lag-tz",
                "lb",
                "lb-lu",
                "lg",
                "lg-ug",
                "lkt",
                "lkt-us",
                "ln",
                "ln-ao",
                "ln-cd",
                "ln-cf",
                "ln-cg",
                "lo",
                "lo-la",
                "lrc",
                "lrc-iq",
                "lrc-ir",
                "lt",
                "lt-lt",
                "lu",
                "lu-cd",
                "luo",
                "luo-ke",
                "luy",
                "luy-ke",
                "lv",
                "lv-lv",
                "mai",
                "mai-in",
                "mas",
                "mas-ke",
                "mas-tz",
                "mer",
                "mer-ke",
                "mfe",
                "mfe-mu",
                "mg",
                "mg-mg",
                "mgh",
                "mgh-mz",
                "mgo",
                "mgo-cm",
                "mi",
                "mi-nz",
                "mk",
                "mk-mk",
                "ml",
                "ml-in",
                "mn",
                "mn-mn",
                "mni",
                "mni-in",
                "mr",
                "mr-in",
                "ms",
                "ms-bn",
                "ms-id",
                "ms-my",
                "ms-sg",
                "mt",
                "mt-mt",
                "mua",
                "mua-cm",
                "my",
                "my-mm",
                "mzn",
                "mzn-ir",
                "naq",
                "naq-na",
                "nb",
                "nb-no",
                "nb-sj",
                "nd",
                "nd-zw",
                "nds",
                "nds-de",
                "nds-nl",
                "ne",
                "ne-in",
                "ne-np",
                "nl",
                "nl-aw",
                "nl-be",
                "nl-ch",
                "nl-bq",
                "nl-cw",
                "nl-lu",
                "nl-nl",
                "nl-sr",
                "nl-sx",
                "nmg",
                "nmg-cm",
                "nn",
                "nn-no",
                "nnh",
                "nnh-cm",
                "no",
                "no-no",
                "nus",
                "nus-ss",
                "nyn",
                "nyn-ug",
                "om",
                "om-et",
                "om-ke",
                "or",
                "or-in",
                "os",
                "os-ge",
                "os-ru",
                "pa",
                "pa-in",
                "pa-pk",
                "pcm",
                "pcm-ng",
                "pl",
                "pl-pl",
                "prg",
                "prg-001",
                "ps",
                "ps-af",
                "ps-pk",
                "pt",
                "pt-ao",
                "pt-br",
                "pt-ch",
                "pt-cv",
                "pt-gq",
                "pt-gw",
                "pt-lu",
                "pt-mo",
                "pt-mz",
                "pt-pt",
                "pt-st",
                "pt-tl",
                "qu",
                "qu-bo",
                "qu-ec",
                "qu-pe",
                "rm",
                "rm-ch",
                "rn",
                "rn-bi",
                "ro",
                "ro-md",
                "ro-ro",
                "rof",
                "rof-tz",
                "ru",
                "ru-by",
                "ru-kg",
                "ru-kz",
                "ru-md",
                "ru-ru",
                "ru-ua",
                "rw",
                "rw-rw",
                "rwk",
                "rwk-tz",
                "sa",
                "sa-in",
                "sah",
                "sah-ru",
                "saq",
                "saq-ke",
                "sat",
                "sat-in",
                "sbp",
                "sbp-tz",
                "sd",
                "sd-in",
                "sd-pk",
                "se",
                "se-fi",
                "se-no",
                "se-se",
                "seh",
                "seh-mz",
                "ses",
                "ses-ml",
                "sg",
                "sg-cf",
                "shi",
                "shi-ma",
                "si",
                "si-lk",
                "sk",
                "sk-sk",
                "sl",
                "sl-si",
                "smn",
                "smn-fi",
                "sn",
                "sn-zw",
                "so",
                "so-dj",
                "so-et",
                "so-ke",
                "so-so",
                "sq",
                "sq-al",
                "sq-mk",
                "sq-xk",
                "sr",
                "sr-ba",
                "sr-cs",
                "sr-me",
                "sr-rs",
                "sr-xk",
                "su",
                "su-id",
                "sv",
                "sv-ax",
                "sv-fi",
                "sv-se",
                "sw",
                "sw-cd",
                "sw-ke",
                "sw-tz",
                "sw-ug",
                "sy",
                "ta",
                "ta-in",
                "ta-lk",
                "ta-my",
                "ta-sg",
                "te",
                "te-in",
                "teo",
                "teo-ke",
                "teo-ug",
                "tg",
                "tg-tj",
                "th",
                "th-th",
                "ti",
                "ti-er",
                "ti-et",
                "tk",
                "tk-tm",
                "tl",
                "to",
                "to-to",
                "tr",
                "tr-cy",
                "tr-tr",
                "tt",
                "tt-ru",
                "twq",
                "twq-ne",
                "tzm",
                "tzm-ma",
                "ug",
                "ug-cn",
                "uk",
                "uk-ua",
                "ur",
                "ur-in",
                "ur-pk",
                "uz",
                "uz-af",
                "uz-uz",
                "vai",
                "vai-lr",
                "vi",
                "vi-vn",
                "vo",
                "vo-001",
                "vun",
                "vun-tz",
                "wae",
                "wae-ch",
                "wo",
                "wo-sn",
                "xh",
                "xh-za",
                "xog",
                "xog-ug",
                "yav",
                "yav-cm",
                "yo",
                "yo-bj",
                "yo-ng",
                "yue",
                "yue-cn",
                "yue-hk",
                "zgh",
                "zgh-ma",
                "zh",
                "zh-cn",
                "zh-hk",
                "zh-mo",
                "zh-sg",
                "zh-tw",
                "zh-hans",
                "zh-hant",
                "zu",
                "zu-za"
            ]
          },
          "title": {
            "type": "string",
            "description": "The title of the returned document."
          },
          "description": {
            "type": "string",
            "description": "The result's description. The content will be determined by the value of `length` in the request."
          },
          "category": {
            "type": "string",
            "description": "For knowledge articles, the category of the article."
          },
          "subcategory": {
            "type": "string",
            "description": "For knowledge articles, the subcategory of the article."
          },
          "authorFullName": {
            "type": "string",
            "description": "Name of the author."
          },
          "tags": {
            "type": "array",
            "description": "If a blog post, the tags associated with it.",
            "items": {
              "type": "string"
            }
          },
          "tableId": {
            "type": "integer",
            "description": "If a dynamic page, the ID of the HubDB table.",
            "format": "int64"
          },
          "rowId": {
            "type": "integer",
            "description": "If a dynamic page, the row ID in the HubDB table.",
            "format": "int64"
          },
          "publishedDate": {
            "type": "integer",
            "description": "The date the content was published.",
            "format": "int64"
          },
          "combinedId": {
            "type": "string",
            "description": "The ID of the document in HubSpot."
          }
        },
        "description": "An individual search result."
      },
      "IndexedData": {
        "required": [
            "fields",
            "id",
            "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the document in HubSpot."
          },
          "type": {
            "type": "string",
            "description": "The type of document. Can be `SITE_PAGE`, `LANDING_PAGE`, `BLOG_POST`, `LISTING_PAGE`, or `KNOWLEDGE_ARTICLE`.",
            "enum": [
                "LANDING_PAGE",
                "BLOG_POST",
                "SITE_PAGE",
                "KNOWLEDGE_ARTICLE",
                "LISTING_PAGE"
            ]
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IndexedField"
            },
            "description": "The indexed fields in HubSpot."
          }
        },
        "description": "The indexed data in HubSpot"
      },
      "IndexedField": {
        "required": [
            "metadataField",
            "name",
            "value",
            "values"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {}
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "metadataField": {
            "type": "boolean"
          }
        }
      },
      "PublicSearchResults": {
        "required": [
            "limit",
            "offset",
            "page",
            "results",
            "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentSearchResult"
            }
          },
          "searchTerm": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "responses": {
      "Error": {
        "description": "An error occurred.",
        "content": {
          "*/*": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2_legacy": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
            "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
            "scopes": {
              "content": "Read from and write to my Content"
            }
          }
        }
      }
    }
  },
  "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Python",
      "Ruby"
  ]
}