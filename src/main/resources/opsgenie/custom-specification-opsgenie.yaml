openapi: 3.0.0
info:
  title: Opsgenie REST API
  description: Opsgenie OpenAPI Specification
  version: 2.0.0
security:
  - GenieKey: []
paths:
  "/v2/alerts/requests/{requestId}":
    get:
      tags:
        - alert
      summary: Get Request Status of Alert
      description: Used to track the status and alert details (if any) of the request whose
        identifier is given
      operationId: getRequestStatus
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-get-request-status
      parameters:
        - name: requestId
          in: path
          description: Universally unique identifier of the questioned request
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request status information for given id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRequestStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/alerts:
    get:
      tags:
        - alert
      summary: List Alerts
      description: Returns list of alerts
      operationId: listAlerts
      x-collapse-params: ListAlertsRequest
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-alerts
      parameters:
        - name: query
          in: query
          description: Search query to apply while filtering the alerts
          required: false
          schema:
            type: string
        - name: searchIdentifier
          in: query
          description: Identifier of the saved search query to apply while filtering the
            alerts
          required: false
          schema:
            type: string
        - name: searchIdentifierType
          in: query
          description: Identifier type of the saved search query. Possible values are 'id',
            or 'name'
          required: false
          schema:
            type: string
            enum:
              - id
              - name
            default: id
        - name: offset
          in: query
          description: Start index of the result set (to apply pagination). Minimum value
            (and also default value) is 0
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of items to provide in the result. Must be a positive
            integer value. Default value is 20 and maximum value is 100
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
        - name: sort
          in: query
          description: Name of the field that result set will be sorted by
          required: false
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - tinyId
              - alias
              - message
              - status
              - acknowledged
              - isSeen
              - snoozed
              - snoozedUntil
              - count
              - lastOccurredAt
              - source
              - owner
              - integration.name
              - integration.type
              - report.ackTime
              - report.closeTime
              - report.acknowledgedBy
              - report.closedBy
            default: createdAt
        - name: order
          in: query
          description: Sorting order of the result set
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: List of alert informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Prev:
              description: Previous page url
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
            X-Paging-Last:
              description: Last page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - alert
      summary: Create Alert
      description: Creates a new alert
      operationId: createAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-create-alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlertPayload"
        description: Request payload of created alert
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}":
    get:
      tags:
        - alert
      summary: Get Alert
      description: Returns alert with given id, tiny id or alias
      operationId: getAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-get-alert
      x-collapse-params: GetAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      responses:
        "200":
          description: Alert information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAlertResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - alert
      summary: Delete Alert
      description: Deletes an alert using alert id, tiny id or alias
      operationId: deleteAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-delete-alert
      x-collapse-params: DeleteAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - $ref: "#/components/parameters/AlertUserParam"
        - $ref: "#/components/parameters/AlertSourceParam"
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/acknowledge":
    post:
      tags:
        - alert
      summary: Acknowledge Alert
      description: Acknowledges alert with given identifier
      operationId: acknowledgeAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-acknowledge-alert
      x-collapse-params: AcknowledgeAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcknowledgeAlertPayload"
        description: Request payload of acknowledging alert action
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/unacknowledge":
    post:
      tags:
        - alert
      summary: UnAcknowledge Alert
      description: UnAcknowledge alert with given identifier
      operationId: unAcknowledgeAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-unacknowledge-alert
      x-collapse-params: UnAcknowledgeAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnAcknowledgeAlertPayload"
        description: Request payload of unacknowledging alert action
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/close":
    post:
      tags:
        - alert
      summary: Close Alert
      description: Closes alert with given identifier
      operationId: closeAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-close-alert
      x-collapse-params: CloseAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseAlertPayload"
        description: Request payload of closing alert action
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/snooze":
    post:
      tags:
        - alert
      summary: Snooze Alert
      description: Snooze alert with given identifier
      operationId: snoozeAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-snooze-alert
      x-collapse-params: SnoozeAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnoozeAlertPayload"
        description: Request payload of snoozing alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/escalate":
    post:
      tags:
        - alert
      summary: Escalate Alert
      description: Escalate alert with given identifier
      operationId: escalateAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-escalate-alert-to-next
      x-collapse-params: EscalateAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EscalateAlertToNextPayload"
        description: Request payload of escalating alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/assign":
    post:
      tags:
        - alert
      summary: Assign Alert
      description: Assign alert with given identifier
      operationId: assignAlert
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-assign-alert
      x-collapse-params: AssignAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignAlertPayload"
        description: Request payload of assigning alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/responders":
    post:
      tags:
        - alert
      summary: Add Responder
      description: Add responder to alert with given identifier
      operationId: addResponder
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-add-responder-to-alert
      x-collapse-params: AddResponderToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddResponderToAlertPayload"
        description: Request payload of adding responder to alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/teams":
    post:
      tags:
        - alert
      summary: Add Team
      description: Add team to alert with given identifier
      operationId: addTeam
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-add-team-to-alert
      x-collapse-params: AddTeamToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTeamToAlertPayload"
        description: Request payload of adding team to alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/actions/{actionName}":
    post:
      tags:
        - alert
      summary: Custom Alert Action
      description: Custom actions for the alert
      operationId: executeCustomAlertAction
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-execute-custom-action
      x-collapse-params: ExecuteCustomAlertActionRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - name: actionName
          in: path
          description: Name of the action to execute
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteCustomAlertActionPayload"
        description: Request payload of executing custom alert action
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/recipients":
    get:
      tags:
        - alert
      summary: List Alert Recipients
      description: List alert recipients for the given alert identifier
      operationId: listRecipients
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-alert-recipients
      x-collapse-params: ListAlertRecipientsRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      responses:
        "200":
          description: Returns alert recipients for the given alert identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertRecipientsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/logs":
    get:
      tags:
        - alert
      summary: List Alert Logs
      description: List alert logs for the given alert identifier
      operationId: listLogs
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-alert-logs
      x-collapse-params: ListAlertLogsRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - $ref: "#/components/parameters/OffsetParam"
        - $ref: "#/components/parameters/PageDirectionParam"
        - $ref: "#/components/parameters/AlertLimitParam"
        - $ref: "#/components/parameters/OrderParam"
      responses:
        "200":
          description: Returns alert logs for the given alert identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertLogsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/attachments":
    get:
      tags:
        - alert
      summary: List Alert Attachments
      description: List alert attachment names and urls for related alert
      operationId: listAttachments
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-alert-attachments
      x-collapse-params: ListAlertAttachmentsRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType2"
      responses:
        "200":
          description: Returns name and url for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertAttachmentsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - alert
      summary: Add Alert Attachment
      description: Add Alert Attachment to related alert
      operationId: addAttachment
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-create-alert-attachment
      x-collapse-params: AddAttachmentToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType2"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: Attachment file to be uploaded
                  type: string
                  format: binary
                user:
                  description: Display name of the request owner
                  type: string
                indexFile:
                  description: Name of html file which will be shown when attachment
                    clicked on UI
                  type: string
              required:
                - file
      responses:
        "201":
          description: Returns attachment id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: Corrupted file
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/attachments/{attachmentId}":
    get:
      tags:
        - alert
      summary: Get Alert Attachment
      description: Get alert attachment name and url for the given identifier
      operationId: getAttachment
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-get-alert-attachment
      x-collapse-params: GetAlertAttachmentRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType2"
        - name: attachmentId
          in: path
          description: Identifier of alert attachment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Returns name and url for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAlertAttachmentResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - alert
      summary: Remove Alert Attachment
      description: Remove alert attachment for the given identifier
      operationId: removeAttachment
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-delete-alert-attachment
      x-collapse-params: RemoveAttachmentFromAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType2"
        - name: attachmentId
          in: path
          description: Identifier of alert attachment
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/AlertUserParam"
      responses:
        "200":
          description: Returns deleted messsage for this async operation.
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/tags":
    post:
      tags:
        - alert
      summary: Add Tags
      description: Add tags to the alert with given identifier
      operationId: addTags
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-add-tags-to-alert
      x-collapse-params: AddTagsToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagsToAlertPayload"
        description: Request payload of creating alert tags action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - alert
      summary: Remove Tags
      description: Remove tags of the alert with given identifier
      operationId: removeTags
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-remove-tags-from-alert
      x-collapse-params: RemoveTagsFromAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - $ref: "#/components/parameters/AlertUserParam"
        - $ref: "#/components/parameters/AlertNoteParam"
        - $ref: "#/components/parameters/AlertSourceParam"
        - name: tags
          in: query
          description: Tags field of the given alert as comma seperated values (e.g. 'tag1,
            tag2')
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/details":
    post:
      tags:
        - alert
      summary: Add Details
      description: Add details to the alert with given identifier
      operationId: addDetails
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-add-details-custom-properties-to-alert
      x-collapse-params: AddDetailsToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDetailsToAlertPayload"
        description: Request payload of adding alert details action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - alert
      summary: Remove Details
      description: Remove details of the alert with given identifier
      operationId: removeDetails
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-remove-details-custom-properties-from-alert
      x-collapse-params: RemoveDetailsFromAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - $ref: "#/components/parameters/AlertUserParam"
        - $ref: "#/components/parameters/AlertNoteParam"
        - $ref: "#/components/parameters/AlertSourceParam"
        - name: keys
          in: query
          description: Comma separated list of keys to remove from the custom properties of
            the alert (e.g. 'key1,key2')
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/notes":
    get:
      tags:
        - alert
      summary: List Alert Notes
      description: List alert notes for the given alert identifier
      operationId: listNotes
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-alert-notes
      x-collapse-params: ListAlertNotesRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
        - $ref: "#/components/parameters/OffsetParam"
        - $ref: "#/components/parameters/PageDirectionParam"
        - $ref: "#/components/parameters/AlertLimitParam"
        - $ref: "#/components/parameters/OrderParam"
      responses:
        "200":
          description: Returns alert notes for the given alert identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertNotesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - alert
      summary: Add Note
      description: Adds note to alert with given identifier
      operationId: addNote
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-add-note-to-alert
      x-collapse-params: AddNoteToAlertRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddNoteToAlertPayload"
        description: Request payload of adding note to alert action
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/alerts/saved-searches:
    get:
      tags:
        - alert
      summary: Lists Saved Searches
      description: List all saved searches
      operationId: listSavedSearches
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-list-saved-searches
      responses:
        "200":
          description: Returns saved search list
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSavedSearchesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - alert
      summary: Create Saved Search
      description: Create saved search with given fields
      operationId: createSavedSearches
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-create-a-saved-search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSavedSearchPayload"
        description: Request payload of creating saved search
        required: true
      responses:
        "201":
          description: Returns saved search meta information
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSavedSearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/saved-searches/{identifier}":
    get:
      tags:
        - alert
      summary: Get Saved Search
      description: Get saved search for the given search identifier
      operationId: getSavedSearch
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/alert-api#section-get-saved-search
      x-collapse-params: GetSavedSearchRequest
      parameters:
        - $ref: "#/components/parameters/SearchIdentifier"
        - $ref: "#/components/parameters/SearchIdentifierType"
      responses:
        "200":
          description: Returns saved search for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSavedSearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - alert
      summary: Delete Saved Search
      description: Deletes saved search using given search identifier
      operationId: deleteSavedSearch
      x-collapse-params: DeleteSavedSearchRequest
      parameters:
        - $ref: "#/components/parameters/SearchIdentifier"
        - $ref: "#/components/parameters/SearchIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - alert
      summary: Update Saved Search
      description: Update saved search for the given search identifier
      operationId: updateSavedSearch
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-api-continued#section-update-saved-search
      x-collapse-params: UpdateSavedSearchRequest
      parameters:
        - $ref: "#/components/parameters/SearchIdentifier"
        - $ref: "#/components/parameters/SearchIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSavedSearchPayload"
        description: Request payload of updating saved search
        required: true
      responses:
        "200":
          description: Returns saved search for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSavedSearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/alerts/count:
    get:
      tags:
        - alert
      summary: Count Alerts
      description: Count alerts in Opsgenie
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-api#section-count-alerts
      operationId: countAlerts
      x-collapse-params: GetCountAlertsRequest
      parameters:
        - name: query
          in: query
          description: Search query to apply while filtering the alerts
          required: false
          schema:
            type: string
        - name: searchIdentifier
          in: query
          description: Identifier of the saved search query to apply while filtering the
            alerts
          required: false
          schema:
            type: string
        - name: searchIdentifierType
          in: query
          description: Identifier type of the saved search query. Possible values are id
            and name. Default value is id. If searchIdentifier is not provided,
            this value is ignored.
          schema:
            type: string
            enum:
              - id
              - name
            default: id
      responses:
        "200":
          description: Returns saved search for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCountAlertsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/message":
    put:
      tags:
        - alert
      summary: Update Alert Message
      description: Update the message of the alert with given identifier
      operationId: updateAlertMessage
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-api-continued#section-update-alert-message
      x-collapse-params: UpdateAlertMessageRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlertMessagePayload"
        description: Request payload of update alert message
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/description":
    put:
      tags:
        - alert
      summary: Update Alert Description
      description: Update the description of the alert with given identifier
      operationId: updateAlertDescription
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-api-continued#section-update-alert-description
      x-collapse-params: UpdateAlertDescriptionRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlertDescriptionPayload"
        description: Request payload of update alert description
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/alerts/{identifier}/priority":
    put:
      tags:
        - alert
      summary: Update Alert Priority
      description: Update the priority of the alert with given identifier
      operationId: updateAlertPriority
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-api-continued#section-update-alert-priority
      x-collapse-params: UpdateAlertPriorityRequest
      parameters:
        - $ref: "#/components/parameters/AlertIdentifier"
        - $ref: "#/components/parameters/AlertIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlertPriorityPayload"
        description: Request payload of update alert priority
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/integrations:
    get:
      tags:
        - integration
      summary: List Integrations
      description: Returns list of integrations with given parameters
      operationId: listIntegrations
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-list-integrations
      x-collapse-params: ListIntegrationRequest
      parameters:
        - $ref: "#/components/parameters/IntegrationType"
        - $ref: "#/components/parameters/IntegrationTeamId"
        - $ref: "#/components/parameters/IntegrationTeamName"
      responses:
        "200":
          description: List of integration informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIntegrationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - integration
      summary: Create Integration
      description: Creates a new integration
      operationId: createIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-create-api-based-integration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Integration"
        description: Request payload of created integration
        required: true
      responses:
        "201":
          description: Integration meta information for created integration
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/integrations/{id}":
    get:
      tags:
        - integration
      summary: Get Integration
      description: Returns integration with given id
      operationId: getIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-get-integration
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      responses:
        "200":
          description: Integration information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - integration
      summary: Update Integration
      description: Update integration with given id
      operationId: updateIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-update-integration
      x-collapse-params: UpdateIntegrationRequest
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Integration"
        description: Request payload of update integration action
        required: true
      responses:
        "200":
          description: Integration information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - integration
      summary: Delete Integration
      description: Delete integration with given id
      operationId: deleteIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-delete-integration
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/integrations/{id}/enable":
    post:
      tags:
        - integration
      summary: Enable Integration
      description: Enable integration with given ID
      operationId: enableIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-enable-integration
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      responses:
        "201":
          description: Integration information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/integrations/{id}/disable":
    post:
      tags:
        - integration
      summary: Disable Integration
      description: Disable integration with given ID
      operationId: disableIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-disable-integration
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      responses:
        "201":
          description: Integration information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableIntegrationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/integrations/authenticate:
    post:
      tags:
        - integration
      summary: Authenticate Integration
      description: Authenticates integration with given type
      operationId: authenticateIntegration
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-authenticate-integration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticateIntegrationPayload"
        description: Request payload to authenticate integration
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/integrations/{id}/actions":
    get:
      tags:
        - integration-action
      summary: List Integration Actions
      description: List integration actions of given integration id
      operationId: listIntegrationActions
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-get-integration-actions
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      responses:
        "200":
          description: List of integration actions
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIntegrationActionsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - integration-action
      summary: Update Integration Actions
      description: Updates integration actions of given integration id
      operationId: updateIntegrationActions
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-update-all-integration-actions
      x-collapse-params: UpdateIntegrationActionRequest
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionCategorized"
        description: Request payload to update integration actions
        required: true
      responses:
        "200":
          description: List of integration actions
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateIntegrationActionsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - integration-action
      summary: Create Integration Action
      description: Creates integration actions of given integration id
      operationId: createIntegrationAction
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/integration-api#section-create-a-new-integration-action
      x-collapse-params: CreateIntegrationActionRequest
      parameters:
        - $ref: "#/components/parameters/IntegrationId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseIntegrationAction"
        description: Request payload to create integration action
        required: true
      responses:
        "201":
          description: List of integration actions
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIntegrationActionsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/heartbeats/{name}/ping":
    get:
      tags:
        - heartbeat
      summary: Ping Heartbeat
      description: Ping Heartbeat for given heartbeat name
      operationId: ping
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-ping-heartbeat-request
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/heartbeats:
    get:
      tags:
        - heartbeat
      summary: List Heartbeats
      description: Returns list of Heartbeats
      operationId: listHeartBeats
      x-collapse-params: ListHeartBeatRequest
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/heartbeat-api#section-list-heartbeats
      responses:
        "200":
          description: List of heartbeat informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Prev:
              description: Previous page url
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
            X-Paging-Last:
              description: Last page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - heartbeat
      summary: Create Heartbeat
      description: Create a new heartbeat
      operationId: createHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-add-heartbeat-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHeartbeatPayload"
        description: Request payload of created heartbeat
        required: true
      responses:
        "201":
          description: Heartbeat information for created heartbeat name
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/heartbeats/{name}":
    get:
      tags:
        - heartbeat
      summary: Get Heartbeat
      description: Returns heartbeat with given name
      operationId: getHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-get-heartbeat-request
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      responses:
        "200":
          description: Heartbeat information for given heartbeat name
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - heartbeat
      summary: Update Heartbeat (Partial)
      description: Update Heartbeatwith given name
      operationId: updateHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-update-heartbeat-request-partial
      x-collapse-params: UpdateHeartbeatRequest
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHeartbeatPayload"
        description: Request payload of update heartbeat action
      responses:
        "200":
          description: Heartbeat meta information for given heartbeat name
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - heartbeat
      summary: Delete Heartbeat
      description: Delete heartbeat with given name
      operationId: deleteHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-delete-heartbeat-request
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/heartbeats/{name}/enable":
    post:
      tags:
        - heartbeat
      summary: Enable Heartbeat
      description: Enable heartbeat request with given name
      operationId: enableHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-enable-heartbeat-request
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      responses:
        "200":
          description: Heartbeat meta information for given heartbeat name
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/heartbeats/{name}/disable":
    post:
      tags:
        - heartbeat
      summary: Disable Heartbeat
      description: Disable heartbeat request with given name
      operationId: disableHeartbeat
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/heartbeat-api#section-disable-heartbeat-request
      parameters:
        - $ref: "#/components/parameters/HeartbeatName"
      responses:
        "200":
          description: Heartbeat meta information for given heartbeat name
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableHeartbeatResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v1/policies:
    get:
      tags:
        - deprecatedPolicy
      summary: List Alert Policies
      description: Returns list alert policies
      operationId: listAlertPolicies
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-list-policies
      responses:
        "200":
          description: List of policies
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeprecatedListAlertPoliciesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - deprecatedPolicy
      summary: Create Alert Policy
      description: Creates a new alert policy
      operationId: createAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-create-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecatedAlertPolicy"
        description: Payload of created alert policy
        required: true
      responses:
        "201":
          description: Policy meta information for created policy
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeprecatedCreateAlertPolicyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/policies/{policyId}":
    get:
      tags:
        - deprecatedPolicy
      summary: Get Alert Policy
      description: Used to get details of a single policy with id
      operationId: getAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-get-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      responses:
        "200":
          description: Alert policy with given id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeprecatedGetAlertPolicyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - deprecatedPolicy
      summary: Update Alert Policy
      description: Update alert policy with given id
      operationId: updateAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-update-policy
      x-collapse-params: UpdateAlertPolicyRequest
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecatedAlertPolicy"
        description: Payload of updated alert policy
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - deprecatedPolicy
      summary: Delete Alert Policy
      description: Delete alert policy with given id
      operationId: deleteAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-delete-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/policies/{policyId}/enable":
    post:
      tags:
        - deprecatedPolicy
      summary: Enable Alert Policy
      description: Enable the alert policy with given id
      operationId: enableAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-enable-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/policies/{policyId}/disable":
    post:
      tags:
        - deprecatedPolicy
      summary: Disable Alert Policy
      description: Disable the alert policy with given id
      operationId: disableAlertPolicy
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-disable-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/policies/{policyId}/change-order":
    post:
      tags:
        - deprecatedPolicy
      summary: Change Alert Policy Order
      description: Change execution order of the alert policy with given id
      operationId: changeAlertPolicyOrder
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/policy-api#section-change-policy-order
      x-collapse-params: ChangeAlertPolicyOrderRequest
      parameters:
        - $ref: "#/components/parameters/PolicyId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecatedChangeAlertPolicyOrderPayload"
        description: Change order payload
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v1/maintenance:
    post:
      tags:
        - maintenance
      summary: Create Maintenance
      description: Creates a new maintenance
      operationId: createMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-create-maintenance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMaintenancePayload"
        description: Request payload of the maintenance object
        required: true
      responses:
        "201":
          description: Returns maintenance meta data
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMaintenanceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - maintenance
      summary: List Maintenance
      description: List maintenance by type
      operationId: listMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-list-maintenance
      parameters:
        - $ref: "#/components/parameters/MaintenanceListType"
      responses:
        "200":
          description: List of maintenance data searched by list type
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMaintenanceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/maintenance/{id}":
    get:
      tags:
        - maintenance
      summary: Get Maintenance
      description: Returns maintenance with given id
      operationId: getMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-get-maintenance
      parameters:
        - $ref: "#/components/parameters/MaintenanceIdentifier"
      responses:
        "200":
          description: Maintenance information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - maintenance
      summary: Update Maintenance
      description: Update maintenance with given id
      operationId: updateMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-update-maintenance
      x-collapse-params: UpdateMaintenanceRequest
      parameters:
        - $ref: "#/components/parameters/MaintenanceIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMaintenancePayload"
        description: Request payload of the maintenance object
        required: true
      responses:
        "200":
          description: Maintenance information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMaintenanceResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - maintenance
      summary: Delete Maintenance
      description: Delete maintenance with given identifier
      operationId: deleteMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-delete-maintenance
      parameters:
        - $ref: "#/components/parameters/MaintenanceIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/maintenance/{id}/cancel":
    post:
      tags:
        - maintenance
      summary: Cancel Maintenance
      description: Cancel maintenance with given id
      operationId: cancelMaintenance
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/maintenance-api#section-cancel-maintenance
      parameters:
        - $ref: "#/components/parameters/MaintenanceIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/account:
    get:
      tags:
        - account
      summary: Get Account Info
      description: Used to search and retrieve account information in Opsgenie
      operationId: getInfo
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/account-api#section-get-account-info
      responses:
        "200":
          description: Request status information for given id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountInfoResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/users:
    post:
      tags:
        - user
      summary: Create User
      description: Creates a user with the given payload
      operationId: createUser
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserPayload"
        description: Request payload of the user object
        required: true
      responses:
        "201":
          description: User meta information for created user
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - user
      summary: List users
      description: List users with given parameters
      operationId: listUsers
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-list-user
      x-collapse-params: ListUsersRequest
      parameters:
        - $ref: "#/components/parameters/UserLimitParam"
        - $ref: "#/components/parameters/UserOffsetParam"
        - $ref: "#/components/parameters/UserSortParam"
        - $ref: "#/components/parameters/UserOrderParam"
        - $ref: "#/components/parameters/UserQueryParam"
      responses:
        "200":
          description: List of users with given parameters
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Prev:
              description: Previous page url
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
            X-Paging-Last:
              description: Last page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}":
    get:
      tags:
        - user
      summary: Get User
      description: Get user for the given identifier
      operationId: getUser
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-get-user
      x-collapse-params: GetUserRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - name: expand
          in: query
          description: Comma separated list of strings to create a more detailed response.
            The only expandable field for user api is 'contact'
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: User information for the given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - user
      summary: Update User (Partial)
      description: Update user with the given identifier
      operationId: updateUser
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-update-user-partial
      x-collapse-params: UpdateUserRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPayload"
        description: Request payload of the user object
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - user
      summary: Delete User
      description: Delete user with the given identifier
      operationId: deleteUser
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-delete-user
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/teams":
    get:
      tags:
        - user
      summary: List User Teams
      description: List user teams for the given user identifier
      operationId: listUserTeams
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-list-user-teams
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of team information for the given user identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserTeamsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/forwarding-rules":
    get:
      tags:
        - user
      summary: List User Forwarding Rules
      description: List user forwarding rules for the given user identifier
      operationId: listUserForwardingRules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-list-user-forwarding-rules
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of forwarding rules for the given user identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserForwardingRulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/escalations":
    get:
      tags:
        - user
      summary: List User Escalations
      description: List escalations of the user for the given identifier
      operationId: listUserEscalations
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-list-user-escalations
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of escalations for the given user identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserEscalationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/schedules":
    get:
      tags:
        - user
      summary: List User Schedules
      description: List schedules of the user for the given identifier
      operationId: listUserSchedules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/user-api#section-list-user-schedules
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of schedules for the given user identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserSchedulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/contacts":
    post:
      tags:
        - contact
      summary: Create Contact
      description: Creates a new contact
      operationId: createContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-create-contact
      x-collapse-params: CreateContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactPayload"
        description: Request payload of creating contact action
      responses:
        "201":
          description: Contact information for created contact
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - contact
      summary: List Contacts
      description: Returns list of contacts
      operationId: listContacts
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-list-contacts
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of contact informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListContactsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/contacts/{contactId}":
    patch:
      tags:
        - contact
      summary: Update Contact (Partial)
      description: Update contact of the user
      operationId: updateContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-update-contact-partial
      x-collapse-params: UpdateContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/ContactId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContactPayload"
        description: Request payload of update contact action
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - contact
      summary: Get Contact
      description: Returns contact with given id
      operationId: getContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-get-contact
      x-collapse-params: GetContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/ContactId"
      responses:
        "200":
          description: Contact information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetContactResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - contact
      summary: Delete Contact
      description: Delete contact using contact id
      operationId: deleteContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-delete-contact
      x-collapse-params: DeleteContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/ContactId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/contacts/{contactId}/enable":
    post:
      tags:
        - contact
      summary: Enable Contact
      description: Enable the contact of the user
      operationId: enableContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-enable-contact
      x-collapse-params: EnableContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/ContactId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/contacts/{contactId}/disable":
    post:
      tags:
        - contact
      summary: Disable Contact
      description: Disable the contact of the user
      operationId: disableContact
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/contact-api#section-disable-contact
      x-collapse-params: DisableContactRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/ContactId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules":
    get:
      tags:
        - notification-rule
      summary: List Notification Rules
      description: Returns list of notification rules
      operationId: listNotificationRules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-list-notification-rule
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      responses:
        "200":
          description: List of notification rules
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotificationRulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - notification-rule
      summary: Create Notification Rule
      description: Creates a new notification rule
      operationId: createNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-create-notification-rule
      x-collapse-params: CreateNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationRulePayload"
        description: Request payload of create notification rule
        required: true
      responses:
        "201":
          description: Notification rule meta information for created notification rule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNotificationRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}":
    get:
      tags:
        - notification-rule
      summary: Get Notification Rule
      description: Returns notification rule with given id
      operationId: getNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-get-notification-rule
      x-collapse-params: GetNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      responses:
        "200":
          description: Notification rule information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNotificationRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - notification-rule
      summary: Delete Notification Rule
      description: Deletes a notification rule with given notification rule id
      operationId: deleteNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-delete-notification-rule
      x-collapse-params: DeleteNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - notification-rule
      summary: Update Notification Rule (Partial)
      description: Updates the notification rule with given notification rule id
      operationId: updateNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-update-notification-rule-partial
      x-collapse-params: UpdateNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationRulePayload"
        description: Request payload of update notification rule
        required: true
      responses:
        "200":
          description: Notification rule meta information for updated notification rule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotificationRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/enable":
    post:
      tags:
        - notification-rule
      summary: Enable Notification Rule
      description: Enables a notification rule with given notification rule id
      operationId: enableNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-enable-notification-rule
      x-collapse-params: EnableNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/disable":
    post:
      tags:
        - notification-rule
      summary: Disable Notification Rule
      description: Disables a notification rule with given notification rule id
      operationId: disableNotificationRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-api#section-disable-notification-rule
      x-collapse-params: DisableNotificationRuleRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/change-order":
    post:
      tags:
        - notification-rule
      summary: Change order of Notification Rule
      description: Changes order of a notification rule with given notification rule id
      operationId: changeNotificationRuleOrder
      x-collapse-params: ChangeNotificationRuleOrderRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeNotificationRuleOrderPayload"
        description: Request payload of change order of notification rule
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/steps":
    get:
      tags:
        - notification-rule-step
      summary: List Notification Rule Steps
      description: Returns list of notification rule steps
      operationId: listNotificationRuleSteps
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-list-notification-rule-step
      x-collapse-params: ListNotificationRuleStepsRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      responses:
        "200":
          description: List of notification rule steps
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotificationRuleStepsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - notification-rule-step
      summary: Create Notification Rule Step
      description: Creates a new notification rule step
      operationId: createNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-create-notification-rule-step
      x-collapse-params: CreateNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationRuleStepPayload"
        description: Request payload to create notification rule step
        required: true
      responses:
        "201":
          description: Notification rule step is created successfully
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/steps/{id}":
    get:
      tags:
        - notification-rule-step
      summary: Get Notification Rule Step
      description: Returns notification rule step with given user identifier and rule id
      operationId: getNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-get-notification-rule-step
      x-collapse-params: GetNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
        - $ref: "#/components/parameters/NotificationRuleStepId"
      responses:
        "200":
          description: Notification rule step object that is retrieved
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNotificationRuleStepResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - notification-rule-step
      summary: Delete Notification Rule Step
      description: Deletes a notification rule step using user identifier, rule id,
        notification rule step id
      operationId: deleteNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-delete-notification-rule-step
      x-collapse-params: DeleteNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
        - $ref: "#/components/parameters/NotificationRuleStepId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - notification-rule-step
      summary: Update Notification Rule Step (Partial)
      description: Update a notification rule step with given user identifier, rule id, and
        notification rule step id
      operationId: updateNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-update-notification-rule-step-partial
      x-collapse-params: UpdateNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
        - $ref: "#/components/parameters/NotificationRuleStepId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationRuleStepPayload"
        description: Request payload of update schedule action
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/steps/{id}/disable":
    post:
      tags:
        - notification-rule-step
      summary: Disable Notification Rule Step
      description: Disables a new notification rule step
      operationId: disableNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-disable-notification-rule-step
      x-collapse-params: DisableNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
        - $ref: "#/components/parameters/NotificationRuleStepId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/users/{identifier}/notification-rules/{ruleId}/steps/{id}/enable":
    post:
      tags:
        - notification-rule-step
      summary: Enable Notification Rule Step
      description: Enables a new notification rule step
      operationId: enableNotificationRuleStep
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/notification-rule-step-api#section-enable-notification-rule-step
      x-collapse-params: EnableNotificationRuleStepRequest
      parameters:
        - $ref: "#/components/parameters/UserIdentifier"
        - $ref: "#/components/parameters/NotificationRuleIdentifier"
        - $ref: "#/components/parameters/NotificationRuleStepId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/teams:
    post:
      tags:
        - team
      summary: Create Team
      description: Creates a new team
      operationId: createTeam
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-create-team
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamPayload"
        description: Request payload of created team
        required: true
      responses:
        "201":
          description: Contact information for created contact
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - team
      summary: List Teams
      description: Return list of teams
      operationId: listTeams
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-list-teams
      responses:
        "200":
          description: Team information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}":
    get:
      tags:
        - team
      summary: Get Team
      description: Returns team with given 'id' or 'name'
      operationId: getTeam
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-get-team
      x-collapse-params: GetTeamRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType"
      responses:
        "200":
          description: Team information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTeamResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - team
      summary: Delete Team
      description: Delete team with given id or name
      operationId: deleteTeam
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-delete-team
      x-collapse-params: DeleteTeamRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - team
      summary: Update Team (Partial)
      description: Update team with given id
      operationId: updateTeam
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-update-team-partial
      x-collapse-params: UpdateTeamRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamPayload"
        description: Request payload of update team action
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/logs":
    get:
      tags:
        - team
      summary: List Team Logs
      description: Return logs of a team given with identifier
      operationId: listTeamLogs
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-api#section-list-team-logs
      x-collapse-params: ListTeamLogsRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType"
        - $ref: "#/components/parameters/TeamLimitParam"
        - $ref: "#/components/parameters/OrderParam"
        - $ref: "#/components/parameters/TeamOffsetParam"
      responses:
        "200":
          description: List of team log informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamLogsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/members":
    post:
      tags:
        - team-member
      summary: Add Team Member
      description: Adds a member to team with given identifier
      operationId: addTeamMember
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-member-api#section-add-team-member
      x-collapse-params: AddTeamMemberRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTeamMemberPayload"
        description: Request payload of added team member
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/members/{memberIdentifier}":
    delete:
      tags:
        - team-member
      summary: Delete Team Member
      description: Deletes the member of team with given identifier
      operationId: deleteTeamMember
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-member-api#section-remove-team-member
      x-collapse-params: DeleteTeamMemberRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/MemberIdentifier"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/roles":
    get:
      tags:
        - team-role
      summary: List Team Roles
      description: Returns list of team roles
      operationId: listTeamRoles
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-role-api#section-list-team-roles
      x-collapse-params: ListTeamRolesRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
      responses:
        "200":
          description: List of team role informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamRoleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - team-role
      summary: Create Team Role
      description: Creates a new team role
      operationId: createTeamRole
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-role-api#section-create-team-role
      x-collapse-params: AddTeamRoleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRolePayload"
        description: Request payload of created team role
        required: true
      responses:
        "201":
          description: Team role meta information for created team role
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/roles/{teamRoleIdentifier}":
    get:
      tags:
        - team-role
      summary: Get Team Role
      description: Returns team role with given 'id' or 'name'
      operationId: getTeamRole
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-role-api#section-get-team-role
      x-collapse-params: GetTeamRoleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoleIdentifier"
        - $ref: "#/components/parameters/TeamRoleIdentifierType"
      responses:
        "200":
          description: Team Role object that is retrieved
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTeamRoleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - team-role
      summary: Delete Team Role
      description: Deletes a team role using team role 'id' or 'name'
      operationId: deleteTeamRole
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-role-api#section-delete-team-role
      x-collapse-params: DeleteTeamRoleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoleIdentifier"
        - $ref: "#/components/parameters/TeamRoleIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - team-role
      summary: Update Team Role (Partial)
      description: Updates the team role using team role 'id' or 'name'
      operationId: updateTeamRole
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-role-api#section-update-team-rolepartial
      x-collapse-params: UpdateTeamRoleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoleIdentifier"
        - $ref: "#/components/parameters/TeamRoleIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRolePayload"
        description: Request payload of update team role
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/routing-rules":
    post:
      tags:
        - team-routing-rule
      summary: Create Team Routing Rule
      description: Creates a new team routing rule
      operationId: createTeamRoutingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs//team-routing-rule-api#section-create-team-routing-rule
      x-collapse-params: CreateTeamRoutingRuleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRoutingRulePayload"
        description: Request payload of createTeamRoutingRule
        required: true
      responses:
        "201":
          description: Information for created team routing rule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - team-routing-rule
      summary: List Team Routing Rules
      description: Returns list of team routing rules
      operationId: listTeamRoutingRules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-routing-rule-api#section-list-team-routing-rules
      x-collapse-params: ListTeamRoutingRulesRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
      responses:
        "200":
          description: List of Team Routing Rule informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamRoutingRulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/routing-rules/{id}":
    get:
      tags:
        - team-routing-rule
      summary: Get Team Routing Rule
      description: Returns team routing rule with given id
      operationId: getTeamRoutingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-routing-rule-api#section-get-team-routing-rule
      x-collapse-params: GetTeamRoutingRuleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoutingRuleId"
      responses:
        "200":
          description: Team Routing Rule information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTeamRoutingRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - team-routing-rule
      summary: Update Team Routing Rule (Partial)
      description: Update routing rule of the team
      operationId: updateTeamRoutingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-routing-rule-api#section-update-team-routing-rule-partial
      x-collapse-params: UpdateTeamRoutingRuleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoutingRuleId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRoutingRulePayload"
        description: Request payload of update Team Routing Rule action
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - team-routing-rule
      summary: Delete Team Routing Rule
      description: Delete team routing rule with given id
      operationId: deleteTeamRoutingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-routing-rule-api#section-delete-team-routing-rule
      x-collapse-params: DeleteTeamRoutingRuleRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoutingRuleId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/teams/{identifier}/routing-rules/{id}/change-order":
    post:
      tags:
        - team-routing-rule
      summary: Change Team Routing Rule Order
      description: Change the order of team routing rule with given id
      operationId: changeTeamRoutingRuleOrder
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/team-routing-rule-api#section-change-team-routing-rule-order
      x-collapse-params: ChangeTeamRoutingRuleOrderRequest
      parameters:
        - $ref: "#/components/parameters/TeamIdentifier"
        - $ref: "#/components/parameters/TeamIdentifierType2"
        - $ref: "#/components/parameters/TeamRoutingRuleId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeTeamRoutingRuleOrderPayload"
        description: Request payload of change team routing rule order action
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/schedules:
    get:
      tags:
        - schedule
      summary: List Schedules
      description: Returns list of schedule
      operationId: listSchedules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-list-schedules
      parameters:
        - name: expand
          in: query
          description: Returns more detailed response with expanding it. Possible value is
            'rotation' which is also returned with expandable field of response
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: List of schedule informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSchedulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - schedule
      summary: Create Schedule
      description: Creates a new schedule
      operationId: createSchedule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-create-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSchedulePayload"
        description: Request payload of created schedule
        required: true
      responses:
        "201":
          description: Schedule meta information for created schedule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateScheduleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}":
    get:
      tags:
        - schedule
      summary: Get Schedule
      description: Returns schedule with given id or name
      operationId: getSchedule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-get-schedule
      x-collapse-params: GetScheduleRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType"
      responses:
        "200":
          description: Schedule information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - schedule
      summary: Update Schedule (Partial)
      description: Update schedule with given id or name
      operationId: updateSchedule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-update-schedule-partial
      x-collapse-params: UpdateScheduleRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSchedulePayload"
        description: Request payload of update schedule action
      responses:
        "200":
          description: Schedule information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateScheduleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - schedule
      summary: Delete Schedule
      description: Delete schedule with given identifier
      operationId: deleteSchedule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-delete-schedule
      x-collapse-params: DeleteScheduleRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/timeline":
    get:
      tags:
        - schedule
      summary: Get Schedule Timeline
      description: Returns schedule timeline with given id or name
      operationId: getScheduleTimeline
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-get-schedule-timeline
      x-collapse-params: GetScheduleTimelineRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType"
        - name: expand
          in: query
          description: Returns more detailed response with expanding it. Possible values
            are 'base', 'forwarding', and 'override' which is also returned with
            expandable field of response
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: interval
          in: query
          description: Length of time as integer in intervalUnits to retrieve the timeline.
            Default value is 1
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: intervalUnit
          in: query
          description: Unit of the time to retrieve the timeline. Available values are
            'days', 'weeks' and 'months'. Default value is 'weeks'
          required: false
          schema:
            type: string
            enum:
              - days
              - weeks
              - months
        - name: date
          in: query
          description: Time to return future date on-call participants. Default date is the
            moment of the time that request is received
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Schedule timeline information for given schedule identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduleTimelineResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}.ics":
    get:
      tags:
        - schedule
      summary: Export Schedule
      description: Returns an .ics file as byte array
      operationId: exportSchedule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-api#section-export-schedule
      x-collapse-params: ExportScheduleRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType"
      responses:
        "200":
          description: ICS file with exported schedule information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            text/calendar:
              schema:
                type: string
                format: byte
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/rotations":
    post:
      tags:
        - schedule-rotation
      summary: Create Schedule Rotation
      description: Creates a new schedule rotation
      operationId: createScheduleRotation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-rotation-api#section-create-schedule-rotation
      x-collapse-params: CreateScheduleRotationRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScheduleRotationPayload"
        description: Request payload of created schedule rotation
        required: true
      responses:
        "201":
          description: Schedule rotation meta information for created rotation
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - schedule-rotation
      summary: List Schedule Rotations
      description: Returns list of schedule rotations
      operationId: listScheduleRotations
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-rotation-api#section-list-schedule-rotations
      x-collapse-params: ListScheduleRotationsRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      responses:
        "200":
          description: List of schedule rotation informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScheduleRotationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/rotations/{id}":
    get:
      tags:
        - schedule-rotation
      summary: Get Schedule Rotation
      description: Returns schedule rotation with given id
      operationId: getScheduleRotation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-rotation-api#section-get-schedule-rotation
      x-collapse-params: GetScheduleRotationRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
        - $ref: "#/components/parameters/ScheduleRotationId"
      responses:
        "200":
          description: Schedule rotation information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduleRotationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - schedule-rotation
      summary: Update Schedule Rotation (Partial)
      description: Update schedule rotation with given id
      operationId: updateScheduleRotation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-rotation-api#section-update-schedule-rotation-partial
      x-collapse-params: UpdateScheduleRotationRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
        - $ref: "#/components/parameters/ScheduleRotationId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateScheduleRotationPayload"
        description: Request payload of update schedule rotation action
        required: true
      responses:
        "200":
          description: Schedule rotation information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - schedule-rotation
      summary: Delete Schedule Rotation
      description: Delete schedule rotation with given identifier
      operationId: deleteScheduleRotation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-rotation-api#section-delete-schedule-rotation
      x-collapse-params: DeleteScheduleRotationRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
        - $ref: "#/components/parameters/ScheduleRotationId"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/overrides":
    post:
      tags:
        - schedule-override
      summary: Create Schedule Override
      description: Creates a schedule override for the specified user and schedule
      operationId: createScheduleOverride
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-override-api#section-create-schedule-override
      x-collapse-params: CreateScheduleOverrideRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScheduleOverridePayload"
        description: Request payload of created schedule override
        required: true
      responses:
        "201":
          description: Schedule override information for created schedule override
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateScheduleOverrideResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - schedule-override
      summary: List Schedule Overrides
      description: Returns list of schedule overrides
      operationId: listScheduleOverride
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-override-api#section-list-schedule-overrides
      x-collapse-params: ListScheduleOverridesRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      responses:
        "200":
          description: List of schedule override informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScheduleOverrideResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/overrides/{alias}":
    get:
      tags:
        - schedule-override
      summary: Get Schedule Override
      description: Gets schedule override details with given alias
      operationId: getScheduleOverride
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-override-api#section-get-schedule-override
      x-collapse-params: GetScheduleOverrideRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleOverrideAlias"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      responses:
        "200":
          description: Schedule override information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduleOverrideResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - schedule-override
      summary: Update Schedule Override
      description: Update schedule override with given alias
      operationId: updateScheduleOverride
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-override-api#section-update-schedule-override
      x-collapse-params: UpdateScheduleOverrideRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleOverrideAlias"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateScheduleOverridePayload"
        description: Request payload of update schedule override
        required: true
      responses:
        "200":
          description: Schedule override information for updated schedule override
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateScheduleOverrideResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - schedule-override
      summary: Delete Schedule Override
      description: Delete schedule override with given alias
      operationId: deleteScheduleOverride
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/schedule-override-api#section-delete-schedule-override
      x-collapse-params: DeleteScheduleOverrideRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleOverrideAlias"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/schedules/on-calls:
    get:
      tags:
        - who-is-on-call
      summary: List On Calls
      description: Lists current on-call participants of all schedules
      operationId: listOnCalls
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/who-is-on-call-api#section-list-on-calls
      x-collapse-params: ListOnCallsRequest
      parameters:
        - $ref: "#/components/parameters/WhoIsOnCallFlat"
        - $ref: "#/components/parameters/WhoIsOnCallDate"
      responses:
        "200":
          description: List of on-call participants
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOnCallsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/on-calls":
    get:
      tags:
        - who-is-on-call
      summary: Get On Calls
      description: Gets current on-call participants of a specific schedule
      operationId: getOnCalls
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/who-is-on-call-api#section-get-on-calls
      x-collapse-params: GetOnCallRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
        - $ref: "#/components/parameters/WhoIsOnCallFlat"
        - $ref: "#/components/parameters/WhoIsOnCallDate"
      responses:
        "200":
          description: On-call participants for given schedule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOnCallResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/{identifier}/next-on-calls":
    get:
      tags:
        - who-is-on-call
      summary: Get Next On Calls
      description: Gets next on-call participants of a specific schedule
      operationId: getNextOnCalls
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/who-is-on-call-api#section-get-next-on-calls
      x-collapse-params: GetNextOnCallRequest
      parameters:
        - $ref: "#/components/parameters/ScheduleIdentifier"
        - $ref: "#/components/parameters/ScheduleIdentifierType2"
        - $ref: "#/components/parameters/WhoIsOnCallFlat"
        - $ref: "#/components/parameters/WhoIsOnCallDate"
      responses:
        "200":
          description: Next on-call participants for given schedule
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNextOnCallResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/schedules/on-calls/{identifier}.ics":
    get:
      tags:
        - who-is-on-call
      summary: Export On-Call User
      description: Exports personal on-call timeline of 3 months to a .ics file
      operationId: exportOnCallUser
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/who-is-on-call-api#section-export-on-call-user
      parameters:
        - name: identifier
          in: path
          description: Identifier of the user. Should be either 'id' or 'username' of the
            user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ICS file with personal on-call timeline for given user
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            text/calendar:
              schema:
                type: string
                format: byte
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/escalations:
    get:
      tags:
        - escalation
      summary: List Escalations
      description: Returns list of escalations
      operationId: listEscalations
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/escalation-api#section-list-escalations
      responses:
        "200":
          description: List of escalation informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEscalationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - escalation
      summary: Create Escalation
      description: Creates a new escalation
      operationId: createEscalation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/escalation-api#section-create-escalation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEscalationPayload"
        description: Request payload of created escalation
        required: true
      responses:
        "201":
          description: Escalation meta information for created escalation
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/escalations/{identifier}":
    get:
      tags:
        - escalation
      summary: Get Escalation
      description: Returns escalation with given 'id' or 'name'
      operationId: getEscalation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/escalation-api#section-get-escalation
      x-collapse-params: GetEscalationRequest
      parameters:
        - $ref: "#/components/parameters/EscalationIdentifier"
        - $ref: "#/components/parameters/EscalationIdentifierType"
      responses:
        "200":
          description: Escalation object that is retrieved
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEscalationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - escalation
      summary: Delete Escalation
      description: Deletes an escalation using escalation 'id' or 'name'
      operationId: deleteEscalation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/escalation-api#section-delete-escalation
      x-collapse-params: DeleteEscalationRequest
      parameters:
        - $ref: "#/components/parameters/EscalationIdentifier"
        - $ref: "#/components/parameters/EscalationIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    patch:
      tags:
        - escalation
      summary: Update Escalation (Partial)
      description: Updates the escalation using escalation 'id' or 'name'
      operationId: updateEscalation
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/escalation-api#section-update-escalation-partial
      x-collapse-params: UpdateEscalationRequest
      parameters:
        - $ref: "#/components/parameters/EscalationIdentifier"
        - $ref: "#/components/parameters/EscalationIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEscalationPayload"
        description: Request payload of update escalation
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/forwarding-rules:
    get:
      tags:
        - forwarding-rule
      summary: List Forwarding Rules
      description: Returns list of forwarding rules
      operationId: listForwardingRules
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/forwarding-rule-api#section-list-forwarding-rules
      responses:
        "200":
          description: List of forwarding rules
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListForwardingRulesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - forwarding-rule
      summary: Create Forwarding Rule
      description: Creates a new forwarding rule
      operationId: createForwardingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/forwarding-rule-api#section-create-forwarding-rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateForwardingRulePayload"
        description: Request payload to created forwarding rule
        required: true
      responses:
        "201":
          description: Forwarding rule meta information for created forwarding rule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateForwardingRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/forwarding-rules/{identifier}":
    get:
      tags:
        - forwarding-rule
      summary: Get Forwarding Rule
      description: Returns forwarding rule with given id or alias
      operationId: getForwardingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/forwarding-rule-api#section-get-forwarding-rule
      x-collapse-params: GetForwardingRuleRequest
      parameters:
        - $ref: "#/components/parameters/ForwardingRuleIdentifier"
        - $ref: "#/components/parameters/ForwardingRuleIdentifierType"
      responses:
        "200":
          description: Forwarding rule with given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetForwardingRuleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - forwarding-rule
      summary: Delete Forwarding Rule
      description: Deletes forwarding rule with given identifier
      operationId: deleteForwardingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/forwarding-rule-api#section-delete-forwarding-rule
      x-collapse-params: DeleteForwardingRuleRequest
      parameters:
        - $ref: "#/components/parameters/ForwardingRuleIdentifier"
        - $ref: "#/components/parameters/ForwardingRuleIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - forwarding-rule
      summary: Update Forwarding Rule
      description: Update forwarding rule with given rule id or alias
      operationId: updateForwardingRule
      externalDocs:
        description: For more information
        url: https://www.opsgenie.com/docs/forwarding-rule-api#section-update-forwarding-rule
      x-collapse-params: UpdateForwardingRuleRequest
      parameters:
        - $ref: "#/components/parameters/ForwardingRuleIdentifier"
        - $ref: "#/components/parameters/ForwardingRuleIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateForwardingRulePayload"
        description: Request payload of update forwarding rule action
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/roles:
    get:
      tags:
        - custom-user-role
      summary: List Custom User Roles
      description: Returns list of custom user roles
      operationId: listCustomUserRoles
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/users-and-user-roles#section-custom-roles
      responses:
        "200":
          description: List of custom user role informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomUserRolesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    post:
      tags:
        - custom-user-role
      summary: Create Custom User Role
      description: Creates a new custom user role
      operationId: createCustomUserRole
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/users-and-user-roles#section-custom-roles
      x-collapse-params: AddCustomUserRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomUserRolePayload"
        description: Request payload of created custom user role
        required: true
      responses:
        "201":
          description: Custom user role meta information for created custom user role
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/roles/{identifier}":
    get:
      tags:
        - custom-user-role
      summary: Get Custom User Role
      description: Returns custom user role with given 'id' or 'name'
      operationId: getCustomUserRole
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/users-and-user-roles#section-custom-roles
      x-collapse-params: GetCustomUserRoleRequest
      parameters:
        - $ref: "#/components/parameters/CustomUserRoleIdentifier"
        - $ref: "#/components/parameters/CustomUserRoleIdentifierType"
      responses:
        "200":
          description: Custom User Role object that is retrieved
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomUserRoleResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - custom-user-role
      summary: Delete Custom User Role
      description: Deletes a custom user role using role 'id' or 'name'
      operationId: deleteCustomUserRole
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/users-and-user-roles#section-custom-roles
      x-collapse-params: DeleteCustomUserRoleRequest
      parameters:
        - $ref: "#/components/parameters/CustomUserRoleIdentifier"
        - $ref: "#/components/parameters/CustomUserRoleIdentifierType"
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - custom-user-role
      summary: Update Custom User Role
      description: Updates the custom user role using role 'id' or 'name'
      operationId: updateCustomUserRole
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/users-and-user-roles#section-custom-roles
      x-collapse-params: UpdateCustomUserRoleRequest
      parameters:
        - $ref: "#/components/parameters/CustomUserRoleIdentifier"
        - $ref: "#/components/parameters/CustomUserRoleIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomUserRolePayload"
        description: Request payload of update custom user role
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/policies:
    post:
      tags:
        - policy
      summary: Create Policy
      description: Creates a new policy
      operationId: createPolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-create-policy
      parameters:
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
        description: Payload of created policy
        required: true
      responses:
        "201":
          description: Policy meta information for created policy
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePolicyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/policies/alert:
    get:
      tags:
        - policy
      summary: List Alert Policies
      description: Returns the list of alert policies
      operationId: listAlertPolicies
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-list-alert-policies
      parameters:
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          description: List of policies
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v2/policies/notification:
    get:
      tags:
        - policy
      summary: List Notification Policies
      description: Returns the list of notification policies
      operationId: listNotificationPolicies
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-list-notification-policies
      parameters:
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          description: List of policies
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/policies/{policyId}":
    delete:
      tags:
        - policy
      summary: Delete Policy
      description: Delete policy with given id
      operationId: deletePolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-delete-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    get:
      tags:
        - policy
      summary: Get Policy
      description: Used to get details of a single policy with id
      operationId: getPolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-get-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          description: Policy with given id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPolicyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    put:
      tags:
        - policy
      summary: Update Policy
      description: Update alert policy with given id
      operationId: updatePolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-update-policy
      x-collapse-params: UpdatePolicyRequest
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - $ref: "#/components/parameters/TeamId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
        description: Payload of updated policy
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/policies/{policyId}/enable":
    post:
      tags:
        - policy
      summary: Enable Policy
      description: Enable the policy with given id
      operationId: enablePolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-enable-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/policies/{policyId}/disable":
    post:
      tags:
        - policy
      summary: Disable Policy
      description: Disable the policy with given id
      operationId: disablePolicy
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-disable-policy
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - name: teamId
          in: query
          description: TeamId of policy created if it belongs to a team
          required: false
          schema:
            $ref: "#/components/parameters/TeamId"
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v2/policies/{policyId}/change-order":
    post:
      tags:
        - policy
      summary: Change Policy Order
      description: Change execution order of the policy with given id
      operationId: changePolicyOrder
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/alert-and-notification-policy-api#section-change-policy-order
      x-collapse-params: ChangePolicyOrderRequest
      parameters:
        - $ref: "#/components/parameters/PolicyId"
        - $ref: "#/components/parameters/TeamId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePolicyOrderPayload"
        description: Change order payload
        required: true
      responses:
        "200":
          $ref: "#/components/responses/Ok"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/incidents/requests/{requestId}":
    get:
      tags:
        - incident
      summary: Get Request Status of Incident
      description: Used to track the status and incident details (if any) of the request
        whose identifier is given
      operationId: getIncidentRequestStatus
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-get-request-status
      parameters:
        - name: requestId
          in: path
          description: Universally unique identifier of the questioned request
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request status information for given id
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIncidentRequestStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v1/incidents/create:
    post:
      tags:
        - incident
      summary: Create Incident
      description: Creates a new incident
      operationId: createIncident
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-create-incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIncidentPayload"
        description: Request payload of created incident
        required: true
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/incidents/{identifier}":
    get:
      tags:
        - incident
      summary: Get Incident
      description: Returns incident with given id, tiny id or alias
      operationId: getIncident
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-get-incident
      x-collapse-params: GetIncidentRequest
      parameters:
        - $ref: "#/components/parameters/IncidentIdentifier"
        - $ref: "#/components/parameters/IncidentIdentifierType"
      responses:
        "200":
          description: Incident information for given identifier
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIncidentResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
    delete:
      tags:
        - incident
      summary: Delete Incident
      description: Deletes an incident using incident id or the tiny id
      operationId: deleteIncident
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-delete-incident
      x-collapse-params: DeleteIncidentRequest
      parameters:
        - $ref: "#/components/parameters/IncidentIdentifier"
        - $ref: "#/components/parameters/IncidentIdentifierType"
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  /v1/incidents/:
    get:
      tags:
        - incident
      summary: List incidents
      description: Return list of incidents
      operationId: ListIncidents
      x-collapse-params: ListIncidentsRequest
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-list-incidents
      parameters:
        - name: query
          in: query
          description: Search query to apply while filtering the incidents.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: Start index of the result set (to apply pagination). Minimum value
            (and also default value) is 0.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of items to provide in the result. Must be a positive
            integer value. Default value is 20 and maximum value is 100
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
        - name: sort
          in: query
          description: Name of the field that result set will be sorted by
          required: false
          schema:
            type: string
            enum:
              - createdAt
              - tinyId
              - message
              - status
              - isSeen
              - owner
            default: createdAt
        - name: order
          in: query
          description: Sorting order of the result set
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: List of incident informations
          headers:
            X-Request-ID:
              description: Id of given request
              schema:
                type: string
            X-Response-Time:
              description: Process time of given request
              schema:
                type: string
            X-RateLimit-State:
              description: Status of rate limit
              schema:
                type: string
            X-RateLimit-Reason:
              description: Source of the rate limit
              schema:
                type: string
            X-RateLimit-Period-In-Sec:
              description: Time of throttle in seconds
              schema:
                type: string
            X-Paging-Prev:
              description: Previous page url
              schema:
                type: string
            X-Paging-Next:
              description: Next page url
              schema:
                type: string
            X-Paging-First:
              description: First page url
              schema:
                type: string
            X-Paging-Last:
              description: Last page url
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIncidentsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
  "/v1/incidents/{identifier}/close":
    post:
      tags:
        - incident
      summary: Close Incident
      description: Closes incident with given identifier
      operationId: closeIncident
      externalDocs:
        description: For more information
        url: https://docs.opsgenie.com/docs/incident-api#section-close-incident
      x-collapse-params: CloseIncidentRequest
      parameters:
        - $ref: "#/components/parameters/IncidentIdentifier"
        - $ref: "#/components/parameters/IncidentIdentifierType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseIncidentPayload"
        description: Request payload of closing incident action
      responses:
        "202":
          $ref: "#/components/responses/Accepted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequest"
        default:
          $ref: "#/components/responses/GeneralError"
servers:
  - url: https://api.opsgenie.com
components:
  parameters:
    OrderParam:
      name: order
      in: query
      description: Sorting order of the result set
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    AlertIdentifier:
      name: identifier
      in: path
      description: Identifier of alert which could be alert id, tiny id or alert alias
      required: true
      schema:
        type: string
    AlertIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id', 'alias' or 'tiny'
      required: false
      schema:
        type: string
        enum:
          - id
          - alias
          - tiny
        default: id
    AlertSourceParam:
      name: source
      in: query
      description: Display name of the request source
      required: false
      schema:
        type: string
    AlertUserParam:
      name: user
      in: query
      description: Display name of the request owner
      required: false
      schema:
        type: string
    AlertNoteParam:
      name: note
      in: query
      description: Additional alert note to add
      required: false
      schema:
        type: string
    OffsetParam:
      name: offset
      in: query
      description: Starting value of the offset property
      required: false
      schema:
        type: string
    PageDirectionParam:
      name: direction
      in: query
      description: Page direction to apply for the given offset with 'next' and 'prev'
      required: false
      schema:
        type: string
        enum:
          - next
          - prev
        default: next
    AlertLimitParam:
      name: limit
      in: query
      description: Maximum number of items to provide in the result. Must be a positive
        integer value. Default value is 20 and maximum value is 100
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
    SearchIdentifier:
      name: identifier
      in: path
      description: Identifier of the saved search which could be 'id' or 'name'
      required: true
      schema:
        type: string
    SearchIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id', or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    AlertIdentifierType2:
      name: alertIdentifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id', 'alias' or 'tiny'
      required: false
      schema:
        type: string
        enum:
          - id
          - alias
          - tiny
        default: id
    IntegrationId:
      name: id
      in: path
      description: Integration Id
      required: true
      schema:
        type: string
    IntegrationType:
      name: type
      in: query
      description: Type of the integration (For instance, "API" for API Integration). If
        type parameter is given, the result will be filtered by type
      required: false
      schema:
        type: string
    IntegrationTeamId:
      name: teamId
      in: query
      description: The ID of the team. If the team ID parameter is given, the result will
        be filtered by teamId
      required: false
      schema:
        type: string
    IntegrationTeamName:
      name: teamName
      in: query
      description: The name of the team. If the team name parameter is given, the result
        will be filtered by teamName
      required: false
      schema:
        type: string
    HeartbeatName:
      name: name
      in: path
      description: Name of the heartbeat
      required: true
      schema:
        type: string
    PolicyId:
      name: policyId
      in: path
      description: Id of the requested policy
      required: true
      schema:
        type: string
    TeamId:
      name: teamId
      in: query
      description: TeamId of policy created if it belongs to a team
      required: false
      schema:
        type: string
    MaintenanceIdentifier:
      name: id
      in: path
      description: Identifier of the maintenance to be searched
      required: true
      schema:
        type: string
    MaintenanceListType:
      name: type
      in: query
      description: Type of the maintenance list to be searched
      required: false
      schema:
        type: string
        enum:
          - all
          - past
          - non-expired
        default:
          - all
    UserIdentifier:
      name: identifier
      in: path
      description: Identifier of the user to be searched
      required: true
      schema:
        type: string
    UserLimitParam:
      name: limit
      in: query
      description: Number of users to retrieve
      required: false
      schema:
        type: integer
        format: int32
        default: 100
    UserOffsetParam:
      name: offset
      in: query
      description: Number of users to skip from start
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    UserSortParam:
      name: sortField
      in: query
      description: Field to use in sorting. Should be one of 'username', 'fullName' and
        'insertedAt'
      required: false
      schema:
        type: string
    UserOrderParam:
      name: order
      in: query
      description: Direction of sorting. Should be one of 'asc' or 'desc'
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    UserQueryParam:
      name: query
      in: query
      description: Field:value combinations with most of user fields to make more advanced
        searches. Possible fields are username, fullName, blocked, verified,
        role, locale, timeZone, userAddress and createdAt
      required: false
      schema:
        type: string
    ContactId:
      name: contactId
      in: path
      description: Id of the contact
      required: true
      schema:
        type: string
    NotificationRuleIdentifier:
      name: ruleId
      in: path
      description: Id of the notification rule that step will belong to.
      required: true
      schema:
        type: string
    NotificationRuleStepId:
      name: id
      in: path
      description: Id of the rule step will be changed.
      required: true
      schema:
        type: string
    TeamIdentifier:
      name: identifier
      in: path
      description: Identifier of the team
      required: true
      schema:
        type: string
    TeamIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier. Possible values are 'id' and 'name'. Default
        value is 'id'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    TeamIdentifierType2:
      name: teamIdentifierType
      in: query
      description: Type of the identifier. Possible values are 'id' and 'name'. Default
        value is 'id'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    TeamLimitParam:
      name: limit
      in: query
      description: Maximum number of items to provide in the result. Must be a positive
        integer value.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
    TeamOffsetParam:
      name: offset
      in: query
      description: Key which will be used in pagination
      required: false
      schema:
        type: string
    MemberIdentifier:
      name: memberIdentifier
      in: path
      description: User id or username of member for removal
      required: true
      schema:
        type: string
    TeamRoleIdentifier:
      name: teamRoleIdentifier
      in: path
      description: Identifier of team role which could be team role 'id' or 'name'
      required: true
      schema:
        type: string
    TeamRoleIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    TeamRoutingRuleId:
      name: id
      in: path
      description: Id of the team routing rule
      required: true
      schema:
        type: string
    ScheduleIdentifier:
      name: identifier
      in: path
      description: Identifier of schedule which could be id or name
      required: true
      schema:
        type: string
    ScheduleIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    ScheduleIdentifierType2:
      name: scheduleIdentifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    ScheduleRotationId:
      name: id
      in: path
      description: Identifier of schedule rotation
      required: true
      schema:
        type: string
    ScheduleOverrideAlias:
      name: alias
      in: path
      description: Alias of the schedule override
      required: true
      schema:
        type: string
    WhoIsOnCallFlat:
      name: flat
      in: query
      description: Retrieves user names of all on call participants if enabled
      required: false
      schema:
        type: boolean
    WhoIsOnCallDate:
      name: date
      in: query
      description: Starting date of the timeline
      required: false
      schema:
        type: string
        format: date-time
    EscalationIdentifier:
      name: identifier
      in: path
      description: Identifier of escalation which could be escalation 'id' or 'name'
      required: true
      schema:
        type: string
    EscalationIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    ForwardingRuleIdentifier:
      name: identifier
      in: path
      description: Identifier of the forwarding rule which could be forwarding rule 'id' or
        'alias'
      required: true
      schema:
        type: string
    ForwardingRuleIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'alias'
      required: false
      schema:
        type: string
        enum:
          - id
          - alias
        default: id
    CustomUserRoleIdentifier:
      name: identifier
      in: path
      description: Identifier of custom user role which could be user role 'id' or 'name'
      required: true
      schema:
        type: string
    CustomUserRoleIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'name'
      required: false
      schema:
        type: string
        enum:
          - id
          - name
        default: id
    DeprecatedChangeAlertPolicyOrderPayload:
      required:
        - targetIndex
      properties:
        targetIndex:
          type: integer
          format: int32
          description: Order of the target policy will be changed to this value. Larger
            values than policy count will put the target policy to last place
          minimum: 0
    DeprecatedListAlertPoliciesResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/DeprecatedAlertPolicyMeta"
    DeprecatedCreateAlertPolicyResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/DeprecatedAlertPolicyMeta"
    DeprecatedGetAlertPolicyResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/DeprecatedAlertPolicy"
    DeprecatedAlertPolicyMeta:
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - modify
            - auto-close
            - notification-delay
            - notification-deduplication
            - notification-suppress
            - notification-renotify
            - auto-restart-notifications
        order:
          type: integer
          format: int32
        enabled:
          type: boolean
    DeprecatedAlertPolicy:
      discriminator: type
      required:
        - type
      properties:
        id:
          type: string
        name:
          type: string
          description: Name of the policy
        policyDescription:
          type: string
          description: Description of the policy
        filter:
          $ref: "#/components/schemas/Filter"
        timeRestrictions:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        enabled:
          type: boolean
          description: Activity status of the alert policy
        type:
          type: string
          description: Type of the policy
          enum:
            - modify
            - auto-close
            - notification-delay
            - notification-deduplication
            - notification-suppress
            - notification-renotify
            - auto-restart-notifications
    DeprecatedModifyAlertPolicy:
      x-discriminator-value: modify
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            ignoreOriginalAlertActions:
              type: boolean
            ignoreOriginalDetails:
              description: If set to true, policy will ignore the original details of the
                alert. Default value is false
              type: boolean
            ignoreOriginalRecipients:
              description: If set to true, policy will ignore the original recipients of
                the alert. Default value is false
              type: boolean
            ignoreOriginalTags:
              description: If set to true, policy will ignore the original tags of the
                alert. Default value is false
              type: boolean
            ignoreOriginalTeams:
              description: If set to true, policy will ignore the original teams of the
                alert. Default value is false
              type: boolean
            continue:
              description: Will continue with other modify policies if set to true
              type: boolean
            alias:
              description: Alias of the alert. You can use {{alias}} to refer to the
                original alias. Default value is {{alias}}
              type: string
            description:
              description: Description of the alert. You can use {{description}} to refer
                to the original alert description. Default value is
                {{description}}
              type: string
            entity:
              description: Entity field of the alert. You can use {{entity}} to refer to
                the original entity. Default value is {{entity}}
              type: string
            message:
              description: Message of the alert
              type: string
            source:
              description: Source field of the alert. You can use {{source}} to refer to
                the original source. Default value is {{source}}
              type: string
            actions:
              description: Alert actions as a list of strings to add to the alerts original
                actions value. If ignoreOriginalAlertActions field is set to
                true, this will replace the original actions.
              type: array
              items:
                type: string
            recipients:
              description: Recipients to add to the alerts original recipients value as a
                list of escalations, schedules, teams, users or the reserved
                word none or all. If ignoreOriginalRecipients field is set to
                true, this will replace the original recipients.
              type: array
              items:
                $ref: "#/components/schemas/Recipient"
            tags:
              description: Tags to add to the alerts original tags value as a list of
                strings. If ignoreOriginalRecipients field is set to true, this
                will replace the original recipients.
              type: array
              items:
                type: string
            details:
              description: Custom properties to add to the alerts original details value as
                a list of strings. If ignoreOriginalDetails field is set to
                true, this will replace the original details.
              type: object
              additionalProperties:
                type: string
            priority:
              type: string
              description: Priority level of the alert
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
    DeprecatedAutoCloseAlertPolicy:
      x-discriminator-value: auto-close
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            duration:
              $ref: "#/components/schemas/Duration"
    DeprecatedNotificationDelayAlertPolicy:
      x-discriminator-value: notification-delay
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            delayOption:
              description: Delay type
              type: string
              enum:
                - for-duration
                - next-time
                - next-weekday
                - next-monday
                - next-tuesday
                - next-wednesday
                - next-thursday
                - next-friday
                - next-saturday
                - next-sunday
            duration:
              $ref: "#/components/schemas/Duration"
            untilHour:
              description: Should be a number between 0-23
              type: integer
              format: int32
              minimum: 0
              maximum: 23
            untilMinute:
              description: Should be a number between 0-59
              type: integer
              format: int32
              minimum: 0
              maximum: 59
    DeprecatedNotificationDeduplicationAlertPolicy:
      x-discriminator-value: notification-deduplication
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            deduplicationActionType:
              type: string
              description: Deduplication type
              enum:
                - value-based
                - frequency-based
            count:
              description: Number of alerts before deduplication
              type: integer
              format: int32
              minimum: 2
              maximum: 100
            duration:
              $ref: "#/components/schemas/Duration"
    DeprecatedAutoRestartNotificationsAlertPolicy:
      x-discriminator-value: auto-restart-notifications
      required:
        - maxRepeatCount
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            duration:
              $ref: "#/components/schemas/Duration"
            maxRepeatCount:
              description: Max restart count of the notification flow
              type: integer
              format: int32
    DeprecatedNotificationSuppressAlertPolicy:
      x-discriminator-value: notification-suppress
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
    DeprecatedNotificationRenotifyAlertPolicy:
      x-discriminator-value: notification-renotify
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
    IncidentIdentifier:
      name: identifier
      in: path
      description: Identifier of incident which could be incident id or tiny id
      required: true
      schema:
        type: string
    IncidentIdentifierType:
      name: identifierType
      in: query
      description: Type of the identifier that is provided as an in-line parameter.
        Possible values are 'id' or 'tiny. Default is id'
      required: false
      schema:
        type: string
        enum:
          - id
          - tiny
        default: id
  responses:
    Ok:
      description: Returns request id for this async operation.
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
        X-RateLimit-State:
          description: Status of rate limit
          schema:
            type: string
        X-RateLimit-Reason:
          description: Source of the rate limit
          schema:
            type: string
        X-RateLimit-Period-In-Sec:
          description: Time of throttle in seconds
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponse"
    Accepted:
      description: Returns request id for this async operation.
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
        X-RateLimit-State:
          description: Status of rate limit
          schema:
            type: string
        X-RateLimit-Reason:
          description: Source of the rate limit
          schema:
            type: string
        X-RateLimit-Period-In-Sec:
          description: Time of throttle in seconds
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponse"
    GeneralError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    BadRequest:
      description: Invalid JSON body
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: apiKey is invalid or integration is disabled
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    PaymentRequired:
      description: apiKey is valid but the account cannot do this action because of
        subscription plan
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: apiKey is valid but the apiKey cannot do this operation because of
        permissions
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Entity cannot be found for the given identifier
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnprocessableEntity:
      description: Semantic errors in request body
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    TooManyRequest:
      description: Throttling
      headers:
        X-Request-ID:
          description: Id of given request
          schema:
            type: string
        X-Response-Time:
          description: Process time of given request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  securitySchemes:
    GenieKey:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    BaseResponse:
      x-opsgenie-domain: common
      type: object
      required:
        - requestId
        - took
      properties:
        requestId:
          type: string
        took:
          type: number
          format: float
          default: 0
    BaseResponseWithExpandable:
      x-opsgenie-domain: common
      type: object
      required:
        - expandable
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            expandable:
              type: array
              items:
                type: string
    ErrorResponse:
      x-opsgenie-domain: common
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            message:
              type: string
            code:
              type: integer
              format: int32
            responseHeaders:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
    SuccessResponse:
      x-opsgenie-domain: common
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            result:
              type: string
            data:
              $ref: "#/components/schemas/SuccessData"
    SuccessData:
      x-opsgenie-domain: common
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PageDetails:
      x-opsgenie-domain: common
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        first:
          type: string
        last:
          type: string
    Recipient:
      x-opsgenie-domain: common
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - all
            - none
            - user
            - escalation
            - schedule
            - team
            - group
        id:
          type: string
    TeamRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: team
      description: Team recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
        - type: object
          properties:
            name:
              type: string
    GroupRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: group
      description: Group recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
        - type: object
          properties:
            name:
              type: string
    ScheduleRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: schedule
      description: Schedule recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
        - type: object
          properties:
            name:
              type: string
    EscalationRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: escalation
      description: Escalation recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
        - type: object
          properties:
            name:
              type: string
    UserRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: user
      description: User recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
        - type: object
          properties:
            username:
              type: string
    NoRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: none
      description: No recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
    AllRecipient:
      x-opsgenie-domain: common
      x-discriminator-value: all
      description: All recipient
      allOf:
        - $ref: "#/components/schemas/Recipient"
    TimeRestrictionInterval:
      x-opsgenie-domain: common
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - weekday-and-time-of-day
            - time-of-day
    WeekdayTimeRestrictionInterval:
      x-opsgenie-domain: common
      type: object
      x-discriminator-value: weekday-and-time-of-day
      description: Weekday time restriction interval
      allOf:
        - $ref: "#/components/schemas/TimeRestrictionInterval"
        - type: object
          properties:
            restrictions:
              type: array
              items:
                $ref: "#/components/schemas/WeekdayTimeRestriction"
              minItems: 1
              maxItems: 15
    TimeOfDayRestrictionInterval:
      x-opsgenie-domain: common
      type: object
      x-discriminator-value: time-of-day
      description: Time of day restriction interval
      allOf:
        - $ref: "#/components/schemas/TimeRestrictionInterval"
        - type: object
          properties:
            restriction:
              $ref: "#/components/schemas/TimeOfDayRestriction"
    WeekdayTimeRestriction:
      x-opsgenie-domain: common
      type: object
      properties:
        startDay:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        startHour:
          type: integer
          format: int32
        startMin:
          type: integer
          format: int32
        endDay:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        endHour:
          type: integer
          format: int32
        endMin:
          type: integer
          format: int32
    TimeOfDayRestriction:
      x-opsgenie-domain: common
      type: object
      properties:
        startHour:
          type: integer
          format: int32
        startMin:
          type: integer
          format: int32
        endHour:
          type: integer
          format: int32
        endMin:
          type: integer
          format: int32
    Duration:
      x-opsgenie-domain: common
      type: object
      required:
        - timeAmount
      properties:
        timeAmount:
          type: integer
          format: int64
        timeUnit:
          type: string
          enum:
            - days
            - hours
            - minutes
            - seconds
            - miliseconds
            - micros
            - nanos
          default: minutes
    Filter:
      x-opsgenie-domain: common
      type: object
      description: Defines the conditions that will be checked before applying rules and
        type of the operations that will be applied on conditions
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - match-all
            - match-any-condition
            - match-all-conditions
    MatchAll:
      x-opsgenie-domain: common
      x-discriminator-value: match-all
      description: Match all filter
      allOf:
        - $ref: "#/components/schemas/Filter"
        - type: object
    MatchAllConditions:
      x-opsgenie-domain: common
      x-discriminator-value: match-all-conditions
      description: Match all conditions filter
      required:
        - conditions
      allOf:
        - $ref: "#/components/schemas/Filter"
        - type: object
          properties:
            conditions:
              type: array
              items:
                $ref: "#/components/schemas/Condition"
              minItems: 1
    MatchAnyCondition:
      x-opsgenie-domain: common
      x-discriminator-value: match-any-condition
      description: Match any condition filter
      required:
        - conditions
      allOf:
        - $ref: "#/components/schemas/Filter"
        - type: object
          properties:
            conditions:
              type: array
              items:
                $ref: "#/components/schemas/Condition"
              minItems: 1
    Condition:
      x-opsgenie-domain: common
      type: object
      required:
        - field
        - operation
      properties:
        field:
          type: string
          description: Specifies which alert field will be used in condition. Possible
            values are message, alias, description, source, entity, tags,
            actions, extra-properties, recipients, responders or teams
          enum:
            - message
            - alias
            - description
            - source
            - entity
            - tags
            - actions
            - extra-properties
            - recipients
            - teams
            - priority
            - details
            - responders
        key:
          type: string
          description: If field is set as extra-properties, key could be used for key-value
            pair
        not:
          type: boolean
          description: Indicates behaviour of the given operation. Default value is false
        operation:
          type: string
          enum:
            - matches
            - contains
            - starts-with
            - ends-with
            - equals
            - contains-key
            - contains-value
            - greater-than
            - less-than
            - is-empty
            - equals-ignore-whitespace
          description: It is the operation that will be executed for the given field and
            key.
        expectedValue:
          type: string
          description: User defined value that will be compared with alert field according
            to the operation. Default value is empty string
        order:
          type: integer
          format: int64
          description: Order of the condition in conditions list
    Responder:
      x-opsgenie-domain: common
      type: object
      discriminator:
        propertyName: type
      required:
        - type
        - id
      properties:
        type:
          type: string
          enum:
            - user
            - team
            - escalation
            - schedule
        id:
          type: string
    UserResponder:
      x-opsgenie-domain: common
      x-discriminator-value: user
      description: User responder
      allOf:
        - $ref: "#/components/schemas/Responder"
        - type: object
          properties:
            id:
              type: string
    TeamResponder:
      x-opsgenie-domain: common
      x-discriminator-value: team
      description: Team responder
      allOf:
        - $ref: "#/components/schemas/Responder"
        - type: object
          properties:
            name:
              type: string
    AlertActionPayload:
      x-opsgenie-domain: alert
      type: object
      properties:
        user:
          type: string
          description: Display name of the request owner
        note:
          type: string
          description: Additional note that will be added while creating the alert
        source:
          type: string
          description: Source field of the alert. Default value is IP address of the
            incoming request
    CreateAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - message
          properties:
            message:
              type: string
              description: Message of the alert
            alias:
              type: string
              description: Client-defined identifier of the alert, that is also the key
                element of alert deduplication.
            description:
              type: string
              description: Description field of the alert that is generally used to provide
                a detailed information about the alert.
            responders:
              type: array
              description: Responders that the alert will be routed to send notifications
              items:
                $ref: "#/components/schemas/Recipient"
            visibleTo:
              type: array
              description: Teams and users that the alert will become visible to without
                sending any notification
              items:
                $ref: "#/components/schemas/Recipient"
            actions:
              type: array
              description: Custom actions that will be available for the alert
              items:
                type: string
            tags:
              type: array
              description: Tags of the alert
              items:
                type: string
            details:
              type: object
              description: Map of key-value pairs to use as custom properties of the alert
              additionalProperties:
                type: string
            entity:
              type: string
              description: Entity field of the alert that is generally used to specify
                which domain alert is related to
            priority:
              type: string
              description: Priority level of the alert
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
    AcknowledgeAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
    UnAcknowledgeAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
    CloseAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
    SnoozeAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - endTime
          properties:
            endTime:
              type: string
              format: date-time
              description: Date and time that snooze will lose effect
    EscalateAlertToNextPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - escalation
          properties:
            escalation:
              $ref: "#/components/schemas/EscalationRecipient"
    AssignAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - owner
          properties:
            owner:
              $ref: "#/components/schemas/UserRecipient"
    AddTeamToAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - team
          properties:
            team:
              $ref: "#/components/schemas/TeamRecipient"
    AddResponderToAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - responder
          properties:
            responder:
              $ref: "#/components/schemas/Recipient"
    ExecuteCustomAlertActionPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
    AddTagsToAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - tags
          properties:
            tags:
              type: array
              items:
                type: string
    AddDetailsToAlertPayload:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
        - required:
            - details
          properties:
            details:
              type: object
              additionalProperties:
                type: string
              description: Key-value pairs to add as custom property into alert.
    AddNoteToAlertPayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - note
      allOf:
        - $ref: "#/components/schemas/AlertActionPayload"
    CreateSavedSearchPayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - name
        - query
        - owner
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 15000
        query:
          type: string
          maxLength: 1000
        owner:
          $ref: "#/components/schemas/UserRecipient"
        teams:
          type: array
          maxItems: 20
          description: Teams that the alert will be routed to send notifications
          items:
            $ref: "#/components/schemas/TeamRecipient"
    UpdateSavedSearchPayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - name
        - query
        - owner
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 15000
        query:
          type: string
          maxLength: 1000
        owner:
          $ref: "#/components/schemas/UserRecipient"
        teams:
          type: array
          maxItems: 20
          description: Teams that the alert will be routed to send notifications
          items:
            $ref: "#/components/schemas/TeamRecipient"
    UpdateAlertPriorityPayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - priority
      properties:
        priority:
          type: string
          description: Priority level of the alert
          enum:
            - P1
            - P2
            - P3
            - P4
            - P5
    UpdateAlertMessagePayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Message of the alert
    UpdateAlertDescriptionPayload:
      x-opsgenie-domain: alert
      type: object
      required:
        - description
      properties:
        description:
          type: string
          description: Description of the alert
    GetRequestStatusResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/AlertRequestStatus"
    ListAlertsResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BaseAlert"
            paging:
              $ref: "#/components/schemas/PageDetails"
    GetAlertResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Alert"
    ListAlertRecipientsResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlertRecipient"
    ListAlertLogsResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlertLog"
            paging:
              $ref: "#/components/schemas/AlertPaging"
    ListAlertNotesResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlertNote"
            paging:
              $ref: "#/components/schemas/AlertPaging"
    ListSavedSearchesResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/SavedSearchMeta"
    CreateSavedSearchResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/SavedSearchMeta"
    GetSavedSearchResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/SavedSearch"
    ListAlertAttachmentsResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlertAttachmentMeta"
    GetAlertAttachmentResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/AlertAttachment"
    GetCountAlertsResponse:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: object
              properties:
                count:
                  type: integer
                  format: int32
    AlertRequestStatus:
      x-opsgenie-domain: alert
      type: object
      properties:
        action:
          type: string
        processedAt:
          type: string
          format: date-time
        integrationId:
          type: string
        isSuccess:
          type: boolean
        status:
          type: string
        alertId:
          type: string
        alias:
          type: string
    BaseAlert:
      x-opsgenie-domain: alert
      type: object
      required:
        - id
      properties:
        id:
          type: string
        tinyId:
          type: string
        alias:
          type: string
        message:
          type: string
        status:
          type: string
        acknowledged:
          type: boolean
        isSeen:
          type: boolean
        tags:
          type: array
          items:
            type: string
        snoozed:
          type: boolean
        snoozedUntil:
          type: string
          format: date-time
        count:
          type: integer
          format: int32
        lastOccurredAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        source:
          type: string
        owner:
          type: string
        priority:
          type: string
        responders:
          type: array
          items:
            $ref: "#/components/schemas/Responder"
        integration:
          $ref: "#/components/schemas/AlertIntegration"
        report:
          $ref: "#/components/schemas/AlertReport"
    AlertTeamMeta:
      x-opsgenie-domain: alert
      type: object
      required:
        - id
      properties:
        id:
          type: string
    AlertIntegration:
      x-opsgenie-domain: alert
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
    AlertReport:
      x-opsgenie-domain: alert
      type: object
      properties:
        ackTime:
          type: integer
          format: int64
        closeTime:
          type: integer
          format: int64
        acknowledgedBy:
          type: string
        closedBy:
          type: string
    Alert:
      x-opsgenie-domain: alert
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseAlert"
        - properties:
            actions:
              type: array
              items:
                type: string
            entity:
              type: string
            description:
              type: string
            details:
              type: object
              additionalProperties:
                type: string
    AlertRecipient:
      x-opsgenie-domain: alert
      type: object
      properties:
        user:
          $ref: "#/components/schemas/AlertUserMeta"
        state:
          type: string
        method:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AlertUserMeta:
      x-opsgenie-domain: alert
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    AlertLog:
      x-opsgenie-domain: alert
      type: object
      properties:
        log:
          type: string
        type:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        offset:
          type: string
    AlertPaging:
      x-opsgenie-domain: alert
      type: object
      properties:
        first:
          type: string
        next:
          type: string
    AlertNote:
      x-opsgenie-domain: alert
      type: object
      properties:
        note:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        offset:
          type: string
    SavedSearchMeta:
      x-opsgenie-domain: alert
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SavedSearchEntity:
      x-opsgenie-domain: alert
      type: object
      properties:
        id:
          type: string
    SavedSearch:
      x-opsgenie-domain: alert
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/SavedSearchEntity"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/SavedSearchEntity"
        description:
          type: string
        query:
          type: string
    AlertAttachmentMeta:
      x-opsgenie-domain: alert
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    AlertAttachment:
      x-opsgenie-domain: alert
      type: object
      properties:
        name:
          type: string
        url:
          type: string
    AuthenticateIntegrationPayload:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Airbrake
            - AlertLogic
            - AlertSite
            - AmazonCloudTrail
            - AmazonEc2AutoScaling
            - AmazonRds
            - AmazonRoute53HealthCheck
            - AmazonSes
            - AmazonSns
            - AmazonSnsOutgoing
            - AmazonSecurityHub
            - API
            - Apica
            - Apimetrics
            - AppDynamics
            - AppOptics
            - AppSignal
            - AppSignalV2
            - Atatus
            - AtlassianBambooEmail
            - AutotaskAEMEmail
            - AutoTaskEmail
            - Azure
            - AzureAutoScale
            - AzureOMS
            - AzureServiceHealth
            - AzureResourceHealth
            - BigPanda
            - Bitbucket
            - BlueMatador
            - BMCFootPrintsV11
            - BMCFootPrintsV12
            - BMCRemedy
            - BMCRemedyForce
            - BMCRemedyOnDemand
            - Boundary
            - Campfire
            - Catchpoint
            - CheckMK
            - Cherwell
            - CircleCi
            - Circonus
            - CloudMonix
            - CloudSploit
            - CloudWatch
            - CloudWatchEvents
            - Codeship
            - Compose
            - ConnectWise
            - ConnectWiseManage
            - ConnectWiseManageV2
            - ConnectWiseAutomate
            - Consul
            - CopperEgg
            - Crashlytics
            - Datadog
            - DataloopIO
            - Desk
            - Detectify
            - DNSCheck
            - DripStat
            - Ruxit
            - DynatraceV2
            - DynatraceAppMon
            - Email
            - Errorception
            - ESWatcher
            - EvidentIO
            - Flock
            - Flowdock
            - FlowdockV2
            - Freshdesk
            - Freshservice
            - GhostInspector
            - GitHub
            - GitLab
            - GoogleStackdriver
            - Grafana
            - GrafanaV2
            - Graylog
            - Heartbeat
            - HipChat
            - HipChatV2
            - HipChatAddOn
            - Honeybadger
            - HostedGraphite
            - HPServiceManager
            - Humio
            - Icinga
            - Icinga2
            - IncomingCall
            - Instana
            - Jenkins
            - Jira
            - JiraServiceDesk
            - Kapacitor
            - Kayako
            - Kore
            - LabTechEmail
            - Librato
            - LibreNMS
            - Lightstep
            - Logentries
            - Loggly
            - LogicMonitor
            - Logstash
            - LogzIO
            - Looker
            - Loom
            - Magentrix
            - Marid
            - OEC
            - Mattermost
            - MongoDBCloud
            - Monitis
            - MonitisEmail
            - Moxtra
            - MSTeams
            - MSTeamsV2
            - Nagios
            - NagiosV2
            - NagiosXI
            - NagiosXIV2
            - NeustarEmail
            - Netuitive
            - NewRelic
            - NewRelicV2
            - NewRelicSyntheticsEmail
            - NodePing
            - Observium
            - ObserviumV2
            - OEM
            - OEMEmail
            - OP5
            - OpsDash
            - OpsGenie
            - Opsview
            - PagerDutyCompatibility
            - Panopta
            - Papertrail
            - Pingdom
            - PingdomV2
            - PingdomWebhook
            - Pingometer
            - Planio
            - Prometheus
            - Prtg
            - Rackspace
            - Raygun
            - RedGateSqlMonitorEmail
            - Riemann
            - Rigor
            - RingCentralEmail
            - RingCentralGlip
            - Rollbar
            - Runscope
            - SalesForceServiceCloud
            - SaltStack
            - Scalyr
            - Sentry
            - SCOM
            - Scout
            - SematextSpm
            - Sensu
            - ServerDensity
            - ServerGuard24
            - ServiceNow
            - ServiceNowV2
            - ServiceNowV3
            - Signalfx
            - SignalFXV2
            - SignalSciences
            - Site24x7
            - Slack
            - SlackApp
            - Soasta
            - Solarwinds
            - SolarwindsMSPNCentral
            - SolarWindsWebHelpDesk
            - Splunk
            - SplunkITSI
            - Stackdriver
            - StackStorm
            - StatusCake
            - StatusHub
            - StatusIO
            - StatusPageIO
            - Statusy
            - StruxureWare
            - SumoLogic
            - SysdigCloud
            - ThousandEyes
            - ThreatStack
            - Thundra
            - Tideways
            - Trace
            - TrackIt
            - TravisCI
            - Twilio
            - UpdownIO
            - UptimeRobot
            - UptimeRobotEmail
            - UptimeWebhook
            - UptrendsEmail
            - VCenter
            - VCSA
            - VividCortex
            - Wavefront
            - WhatsUpGold
            - Webhook
            - Workato
            - XLRelease
            - Xmpp
            - Zabbix
            - Zapier
            - Zendesk
            - Zenoss
            - ZyrionEmail
            - ManageEngine
    ListIntegrationsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/IntegrationMeta"
    CreateIntegrationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/IntegrationMeta"
    GetIntegrationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Integration"
    UpdateIntegrationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/IntegrationMeta"
    EnableIntegrationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/IntegrationMeta"
    DisableIntegrationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/IntegrationMeta"
    IntegrationMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        type:
          type: string
        teamId:
          type: string
    AlertFilter:
      type: object
      properties:
        conditionMatchType:
          type: string
          enum:
            - match-all
            - match-any-condition
            - match-all-conditions
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/CallbackCondition"
    CallbackCondition:
      type: object
      required:
        - field
        - operation
        - expectedValue
      properties:
        field:
          type: string
          enum:
            - message
            - alias
            - description
            - source
            - entity
            - tags
            - actions
            - extra-properties
            - recipients
            - teams
            - priority
        not:
          type: boolean
        operation:
          type: string
          enum:
            - matches
            - contains
            - starts-with
            - ends-with
            - equals
            - contains-key
            - contains-value
            - greater-than
            - less-than
            - is-empty
            - equals-ignore-whitespace
        expectedValue:
          type: string
        order:
          type: integer
          format: int32
    ActionMapping:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - create
            - acknowledge
            - unacknowledge
            - snooze
            - escalate-to-next
            - add-note
            - add-responder
            - add-tags
            - remove-tags
            - close
            - delete
            - escalate
            - custom-action
            - assign-ownership
            - take-ownership
            - update-priority
            - update-description
            - update-message
        extraField:
          type: string
        extraFieldForMappedAction:
          type: string
        mappedAction:
          type: string
          enum:
            - publish
            - create-incident
            - create-problem
            - update-description
            - update-priority
            - resolve-issue
            - resolve-ticket
            - add-work-info
            - close-incident
            - create
            - close
            - resolve
            - add-journal
            - in-progress-incident
            - resolve-incident
            - acknowledge
            - unacknowledge
            - create-service-ticket
            - add-discussion-note-to-ticket
            - add-resolution-note-to-ticket
            - add-internal-note-to-ticket
            - close-service-ticket
            - in-progress-ticket
            - custom-status
            - add-note
            - confirm-incident
            - set-status-to-closed
            - set-status-to-pending
            - set-status-to-resolved
            - create-ticket
            - add-public-note
            - add-private-note
            - set-status-to-open
            - create-issue
            - add-comment-to-issue
            - in-progress-issue
            - close-issue
            - issue-done
            - add-tag
            - create-conversation
            - set-status-to-completed
            - ack-alert
            - unmute-alert
            - send-to-channel
            - create-case
            - set-case-status-to-active
            - set-case-status-to-close
            - set-case-status-to-close-as-duplicate
            - post-action-to-oec
            - create-alert
            - close-alert
            - acknowledge-alert
            - unacknowledge-alert
            - acknowledgeSensor
            - setStatusToClosed
            - set-case-status-to-working
            - add-note-to-incident
            - assign-to-group
            - assign-to-user
            - assign-to-owner
            - send-to-custom-endpoint
            - acknowledge-notification
            - createEvent
            - createTag
            - createComment
            - updateSeverity
            - updateStatusToClosed
            - updateStatusToInProgress
            - create-incident-and-update-component-statuses
            - resolve-incident-and-update-component-statuses-back-to-operational
            - update-component-statuses
            - sendData
            - postToUrl
            - add-internal-note
            - public-reply
            - set-status-to-solved
    OutgoingCallbackNew:
      type: object
      discriminator:
        propertyName: callback-type
      properties:
        alertFilter:
          $ref: "#/components/schemas/AlertFilter"
        forwardingEnabled:
          type: boolean
          nullable: true
        forwardingActionMappings:
          type: array
          items:
            $ref: "#/components/schemas/ActionMapping"
        callback-type:
          type: string
          enum:
            - amazon-sns-callback
            - base-webhook-callback
            - bidirectional-callback-new
            - bmc-remedy-on-demand-callback
            - oec-callback
    BidirectionalCallbackNew:
      type: object
      x-discriminator-value: bidirectional-callback-new
      discriminator:
        propertyName: bidirectional-callback-type
      allOf:
        - $ref: "#/components/schemas/OutgoingCallbackNew"
        - properties:
            updatesActionMappings:
              type: array
              items:
                $ref: "#/components/schemas/ActionMapping"
            updatesEnabled:
              type: boolean
              nullable: true
            bidirectional-callback-type:
              type: string
              enum:
                - bmc-foot-prints-v11-callback
                - bmc-foot-prints-v12-callback
                - bmc-remedy-callback
                - cherwell-callback
                - circonus-callback
                - connect-wise-manage-callback
                - connect-wise-manage-v2-callback
                - datadog-callback
                - dynatrace-app-mon-callback
                - freshdesk-callback
                - freshservice-callback
                - hp-service-manager-callback
                - jira-callback
                - jira-service-desk-callback
                - kayako-callback
                - libre-nms-callback
                - logic-monitor-callback
                - magentrix-callback
                - ms-teams-callback
                - ms-teams-v2-callback
                - op5-callback
                - ops-genie-callback
                - prtg-callback
                - rollbar-callback
                - sales-force-service-cloud-callback
                - service-now-v2-callback
                - service-now-v3-callback
                - solarwinds-msp-ncentral-callback
                - splunk-callback
                - splunk-itsi-callback
                - status-page-io-callback
                - sumo-logic-callback
                - zendesk-callback
    BaseWebhookCallback:
      type: object
      x-discriminator-value: base-webhook-callback
      discriminator:
        propertyName: base-webhook-callback-type
      allOf:
        - $ref: "#/components/schemas/OutgoingCallbackNew"
        - properties:
            url:
              type: string
            headers:
              type: object
              additionalProperties:
                type: string
            addAlertDetails:
              type: boolean
              nullable: true
            addAlertDescription:
              type: boolean
              nullable: true
            base-webhook-callback-type:
              type: string
              enum:
                - flock-callback
                - kore-callback
                - moxtra-callback
                - ring-central-glip-callback
                - statusy-callback
                - webhook-callback
    OutgoingCallback:
      type: object
      discriminator:
        propertyName: callback-type
      properties:
        alertFilter:
          $ref: "#/components/schemas/AlertFilter"
        alertActions:
          type: array
          items:
            type: string
        callback-type:
          type: string
          enum:
            - bidirectional-callback
            - campfire-callback
            - flowdock-callback
            - flowdock-v2-callback
            - planio-callback
    BidirectionalCallback:
      type: object
      x-discriminator-value: bidirectional-callback
      discriminator:
        propertyName: bidirectional-callback-type
      allOf:
        - $ref: "#/components/schemas/OutgoingCallback"
        - properties:
            sendAlertActions:
              type: boolean
            bidirectional-callback-type:
              type: string
              enum:
                - connect-wise-callback
                - desk-callback
                - es-watcher-callback
                - hip-chat-add-on-callback
                - hip-chat-callback-v2
                - icinga2-callback
                - icinga-callback
                - marid-callback
                - mattermost-callback
                - nagios-based-v1-callback
                - nagios-based-v2-callback
                - nagios-xiv1-callback
                - nagios-xiv2-callback
                - slack-app-callback
                - slack-callback
                - solarwinds-callback
                - solar-winds-web-help-desk-callback
                - stackdriver-callback
                - status-io-callback
                - track-it-callback
                - xmpp-callback
                - zabbix-callback
                - zenoss-callback
    AmazonSnsCallback:
      type: object
      x-discriminator-value: amazon-sns-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallbackNew"
        - properties:
            topicArn:
              type: string
            region:
              type: string
            newConfType:
              type: boolean
    OpsGenieCallback:
      type: object
      x-discriminator-value: ops-genie-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            destinationApiKey:
              type: string
    JiraCallback:
      type: object
      x-discriminator-value: jira-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            jiraUsername:
              type: string
            jiraPassword:
              type: string
            jiraUrl:
              type: string
            projectKey:
              type: string
            issueTypeName:
              type: string
    JiraServiceDeskCallback:
      type: object
      x-discriminator-value: jira-service-desk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            jiraUsername:
              type: string
            jiraPassword:
              type: string
            jiraUrl:
              type: string
            projectKey:
              type: string
            issueTypeName:
              type: string
    ServiceNowV2Callback:
      type: object
      x-discriminator-value: service-now-v2-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            scriptedRestAPIURL:
              type: string
            servicenowUserName:
              type: string
            servicenowPassword:
              type: string
    ServiceNowV3Callback:
      type: object
      x-discriminator-value: service-now-v3-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            instanceSubdomain:
              type: string
            userId:
              type: string
            password:
              type: string
    KayakoCallback:
      type: object
      x-discriminator-value: kayako-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            email:
              type: string
            password:
              type: string
            subdomain:
              type: string
    MSTeamsCallback:
      type: object
      x-discriminator-value: ms-teams-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            webhookUrl:
              type: string
    OP5Callback:
      type: object
      x-discriminator-value: op5-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            url:
              type: string
    StatusPageIOCallback:
      type: object
      x-discriminator-value: status-page-io-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            statusPagePageId:
              type: string
            statusPageApiKey:
              type: string
    ZendeskCallback:
      type: object
      x-discriminator-value: zendesk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            zendeskApiToken:
              type: string
            zendeskEmail:
              type: string
            zendeskSubdomain:
              type: string
    WebhookCallback:
      type: object
      x-discriminator-value: webhook-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    CampfireCallback:
      type: object
      x-discriminator-value: campfire-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallback"
        - properties:
            token:
              type: string
            subdomain:
              type: string
            notify:
              type: boolean
            rooms:
              type: array
              items:
                type: string
    FlowdockCallback:
      type: object
      x-discriminator-value: flowdock-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallback"
        - properties:
            flowdockApiToken:
              type: string
            flowdockTags:
              type: array
              items:
                type: string
            externalUsername:
              type: string
    FlowdockV2Callback:
      type: object
      x-discriminator-value: flowdock-v2-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallback"
        - properties:
            flowdockFlowToken:
              type: string
    PlanioCallback:
      type: object
      x-discriminator-value: planio-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallback"
        - properties:
            planioApiKey:
              type: string
            projectId:
              type: integer
              format: int32
            subdomain:
              type: string
    DatadogCallback:
      type: object
      x-discriminator-value: datadog-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            token:
              type: string
            sendToEU:
              type: boolean
    CirconusCallback:
      type: object
      x-discriminator-value: circonus-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            circonusURL:
              type: string
    ConnectWiseCallback:
      type: object
      x-discriminator-value: connect-wise-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            awsLambdaUrl:
              type: string
    DeskCallback:
      type: object
      x-discriminator-value: desk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            consumerKey:
              type: string
            consumerKeySecret:
              type: string
            accessToken:
              type: string
            accessTokenSecret:
              type: string
            subdomain:
              type: string
    XPackAlertingCallback:
      type: object
      x-discriminator-value: es-watcher-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            eswatcherActionId:
              type: string
            eswatcherHostId:
              type: string
    FreshdeskCallback:
      type: object
      x-discriminator-value: freshdesk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            apiKey:
              type: string
            freshdeskSubdomain:
              type: string
    HipChatAddOnCallback:
      type: object
      x-discriminator-value: hip-chat-add-on-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            notify:
              type: boolean
            groupName:
              type: string
            hostUrl:
              type: string
            useCollapsedMessages:
              type: boolean
    MaridCallback:
      type: object
      x-discriminator-value: marid-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
    LogicMonitorCallback:
      type: object
      x-discriminator-value: logic-monitor-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            accountName:
              type: string
            username:
              type: string
            password:
              type: string
    MattermostCallback:
      type: object
      x-discriminator-value: mattermost-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            url:
              type: string
    SolarWindsWebHelpDeskCallback:
      type: object
      x-discriminator-value: solar-winds-web-help-desk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            solarWindsWebHelpDeskApiKey:
              type: string
            solarWindsWebHelpServerURL:
              type: string
    StackdriverCallback:
      type: object
      x-discriminator-value: stackdriver-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            stackdriverApiKey:
              type: string
    StatusIOCallback:
      type: object
      x-discriminator-value: status-io-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            statusIoApiId:
              type: string
            statusIoApiKey:
              type: string
            statusIoStatusPageId:
              type: string
    BMCFootPrintsV11Callback:
      type: object
      x-discriminator-value: bmc-foot-prints-v11-callback
      required:
        - url
        - username
        - password
        - incidentWorkspaceId
        - problemWorkspaceId
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
            username:
              type: string
            password:
              type: string
            incidentWorkspaceId:
              type: string
            problemWorkspaceId:
              type: string
    BMCFootPrintsV12Callback:
      type: object
      x-discriminator-value: bmc-foot-prints-v12-callback
      required:
        - url
        - username
        - password
        - workspaceName
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
            username:
              type: string
            password:
              type: string
            workspaceName:
              type: string
    BMCRemedyCallback:
      type: object
      x-discriminator-value: bmc-remedy-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            midtierServerUrl:
              type: string
            serverName:
              type: string
    BMCRemedyOnDemandCallback:
      type: object
      x-discriminator-value: bmc-remedy-on-demand-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallbackNew"
        - properties:
            url:
              type: string
            username:
              type: string
            password:
              type: string
            lastname:
              type: string
            firstname:
              type: string
    CherwellCallback:
      type: object
      x-discriminator-value: cherwell-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            clientId:
              type: string
            apiUrl:
              type: string
    ConnectWiseManageCallback:
      type: object
      x-discriminator-value: connect-wise-manage-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            publicKey:
              type: string
            privateKey:
              type: string
            loginCompany:
              type: string
            companyName:
              type: string
            cwmUrl:
              type: string
            companyId:
              type: string
    ConnectWiseManageV2Callback:
      type: object
      x-discriminator-value: connect-wise-manage-v2-callback
      required:
        - boardId
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            publicKey:
              type: string
            privateKey:
              type: string
            loginCompany:
              type: string
            companyName:
              type: string
            cwmUrl:
              type: string
            companyId:
              type: string
            boardName:
              type: string
            boardId:
              type: integer
              format: int32
    DynatraceAppMonCallback:
      type: object
      x-discriminator-value: dynatrace-app-mon-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            url:
              type: string
            profileName:
              type: string
    FlockCallback:
      type: object
      x-discriminator-value: flock-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    FreshserviceCallback:
      type: object
      x-discriminator-value: freshservice-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            subdomain:
              type: string
    HipChatCallbackV2:
      type: object
      x-discriminator-value: hip-chat-callback-v2
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            rooms:
              type: array
              items:
                type: string
            token:
              type: string
            notify:
              type: boolean
            hostUrl:
              type: string
    HPServiceManagerCallback:
      type: object
      x-discriminator-value: hp-service-manager-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            apiKet:
              type: string
            baseDomain:
              type: string
    Icinga2Callback:
      type: object
      x-discriminator-value: icinga2-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    IcingaCallback:
      type: object
      x-discriminator-value: icinga-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    KoreCallback:
      type: object
      x-discriminator-value: kore-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    LibreNMSCallback:
      type: object
      x-discriminator-value: libre-nms-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
            apiToken:
              type: string
    MagentrixCallback:
      type: object
      x-discriminator-value: magentrix-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            subdomain:
              type: string
            username:
              type: string
            password:
              type: string
    MoxtraCallback:
      type: object
      x-discriminator-value: moxtra-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    MSTeamsV2Callback:
      type: object
      x-discriminator-value: ms-teams-v2-callback
      required:
        - conversationId
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            webhookUrl:
              type: string
            conversationId:
              type: string
    NagiosBasedV1Callback:
      type: object
      x-discriminator-value: nagios-based-v1-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    NagiosBasedV2Callback:
      type: object
      x-discriminator-value: nagios-based-v2-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    NagiosXIV1Callback:
      type: object
      x-discriminator-value: nagios-xiv1-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    NagiosXIV2Callback:
      type: object
      x-discriminator-value: nagios-xiv2-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    OECCallback:
      type: object
      x-discriminator-value: oec-callback
      allOf:
        - $ref: "#/components/schemas/OutgoingCallbackNew"
    PrtgCallback:
      type: object
      x-discriminator-value: prtg-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            passhash:
              type: string
            prtgUrl:
              type: string
    RingCentralGlipCallback:
      type: object
      x-discriminator-value: ring-central-glip-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    RollbarCallback:
      type: object
      x-discriminator-value: rollbar-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            writeAccessToken:
              type: string
    SalesForceServiceCloudCallback:
      type: object
      x-discriminator-value: sales-force-service-cloud-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            url:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
    SlackAppCallback:
      type: object
      x-discriminator-value: slack-app-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            channel:
              type: string
            teamName:
              type: string
            sendDescription:
              type: boolean
              nullable: true
            sendRoutedTeams:
              type: boolean
              nullable: true
            sendTags:
              type: boolean
              nullable: true
    SlackCallback:
      type: object
      x-discriminator-value: slack-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            url:
              type: string
    SolarwindsCallback:
      type: object
      x-discriminator-value: solarwinds-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    SolarwindsMSPNcentralCallback:
      type: object
      x-discriminator-value: solarwinds-msp-ncentral-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            username:
              type: string
            password:
              type: string
            url:
              type: string
    SplunkCallback:
      type: object
      x-discriminator-value: splunk-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
            token:
              type: string
    SplunkITSICallback:
      type: object
      x-discriminator-value: splunk-itsi-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
            password:
              type: string
            username:
              type: string
    StatusyCallback:
      type: object
      x-discriminator-value: statusy-callback
      allOf:
        - $ref: "#/components/schemas/BaseWebhookCallback"
    SumoLogicCallback:
      type: object
      x-discriminator-value: sumo-logic-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallbackNew"
        - properties:
            url:
              type: string
    TrackItCallback:
      type: object
      x-discriminator-value: track-it-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    XmppCallback:
      type: object
      x-discriminator-value: xmpp-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    ZabbixCallback:
      type: object
      x-discriminator-value: zabbix-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    ZenossCallback:
      type: object
      x-discriminator-value: zenoss-callback
      allOf:
        - $ref: "#/components/schemas/BidirectionalCallback"
        - properties:
            sendViaMarid:
              type: boolean
            sendViaOEC:
              type: boolean
    Integration:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
        - name
      properties:
        type:
          description: Type of the integration. (For instance, "API" for API Integration)
          type: string
          enum:
            - Airbrake
            - AlertLogic
            - AlertSite
            - AmazonCloudTrail
            - AmazonEc2AutoScaling
            - AmazonRds
            - AmazonRoute53HealthCheck
            - AmazonSecurityHub
            - AmazonSes
            - AmazonSns
            - AmazonSnsOutgoing
            - API
            - Apica
            - Apimetrics
            - AppDynamics
            - AppOptics
            - AppSignal
            - AppSignalV2
            - Atatus
            - AtlassianBambooEmail
            - AutotaskAEMEmail
            - AutoTaskEmail
            - Azure
            - AzureAutoScale
            - AzureOMS
            - AzureResourceHealth
            - AzureServiceHealth
            - BigPanda
            - Bitbucket
            - BlueMatador
            - BMCFootPrintsV11
            - BMCFootPrintsV12
            - BMCRemedy
            - BMCRemedyForce
            - BMCRemedyOnDemand
            - Boundary
            - Campfire
            - Catchpoint
            - CheckMK
            - Cherwell
            - CircleCi
            - Circonus
            - CloudMonix
            - CloudSploit
            - CloudWatch
            - CloudWatchEvents
            - Codeship
            - Compose
            - ConnectWise
            - ConnectWiseAutomate
            - ConnectWiseManage
            - ConnectWiseManageV2
            - Consul
            - CopperEgg
            - Crashlytics
            - Datadog
            - DataloopIO
            - Desk
            - Detectify
            - DNSCheck
            - DripStat
            - DynatraceAppMon
            - DynatraceV2
            - Email
            - Errorception
            - ESWatcher
            - EvidentIO
            - Flock
            - Flowdock
            - FlowdockV2
            - Freshdesk
            - Freshservice
            - GhostInspector
            - GitHub
            - GitLab
            - GoogleStackdriver
            - Grafana
            - GrafanaV2
            - Graylog
            - Heartbeat
            - HipChat
            - HipChatAddOn
            - HipChatV2
            - Honeybadger
            - HostedGraphite
            - HPServiceManager
            - Humio
            - Icinga
            - Icinga2
            - IncomingCall
            - Instana
            - Jenkins
            - Jira
            - JiraServiceDesk
            - Kapacitor
            - Kayako
            - Kore
            - LabTechEmail
            - Librato
            - LibreNMS
            - Lightstep
            - Logentries
            - Loggly
            - LogicMonitor
            - Logstash
            - LogzIO
            - Looker
            - Loom
            - Magentrix
            - ManageEngine
            - Marid
            - Mattermost
            - MongoDBCloud
            - Monitis
            - MonitisEmail
            - Moxtra
            - MSTeams
            - MSTeamsV2
            - Nagios
            - NagiosV2
            - NagiosXI
            - NagiosXIV2
            - Netuitive
            - NeustarEmail
            - NewRelic
            - NewRelicV2
            - NodePing
            - Observium
            - ObserviumV2
            - OEC
            - OEM
            - OEMEmail
            - OP5
            - OpsDash
            - OpsGenie
            - Opsview
            - PagerDutyCompatibility
            - Panopta
            - Papertrail
            - Pingdom
            - PingdomV2
            - PingdomWebhook
            - Pingometer
            - Planio
            - Prometheus
            - Prtg
            - Rackspace
            - Raygun
            - RedGateSqlMonitorEmail
            - Riemann
            - Rigor
            - RingCentralEmail
            - RingCentralGlip
            - Rollbar
            - Runscope
            - Ruxit
            - SalesForceServiceCloud
            - SaltStack
            - Scalyr
            - SCOM
            - Scout
            - SematextSpm
            - Sensu
            - Sentry
            - ServerDensity
            - ServerGuard24
            - ServiceNow
            - ServiceNowV2
            - ServiceNowV3
            - Signalfx
            - SignalFXV2
            - SignalSciences
            - Site24x7
            - Slack
            - SlackApp
            - Soasta
            - Solarwinds
            - SolarwindsMSPNCentral
            - SolarWindsWebHelpDesk
            - Splunk
            - SplunkITSI
            - Stackdriver
            - StackStorm
            - StatusCake
            - StatusHub
            - StatusIO
            - StatusPageIO
            - Statusy
            - StruxureWare
            - SumoLogic
            - SysdigCloud
            - ThousandEyes
            - ThreatStack
            - Thundra
            - Tideways
            - Trace
            - TrackIt
            - TravisCI
            - Twilio
            - UpdownIO
            - UptimeRobot
            - UptimeRobotEmail
            - UptimeWebhook
            - UptrendsEmail
            - VCenter
            - VCSA
            - VividCortex
            - Wavefront
            - Webhook
            - WhatsUpGold
            - Workato
            - XLRelease
            - Xmpp
            - Zabbix
            - Zapier
            - Zendesk
            - Zenoss
            - ZyrionEmail
        id:
          type: string
        name:
          description: Name of the integration. Name must be unique for each integration
          type: string
        enabled:
          description: This parameter is for specifying whether the integration will be
            enabled or not
          type: boolean
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        isGlobal:
          type: boolean
          nullable: true
        _readOnly:
          type: array
          items:
            type: string
    BaseIncomingFeature:
      type: object
      discriminator:
        propertyName: feature-type
      properties:
        suppressNotifications:
          description: If enabled, notifications that come from alerts will be suppressed.
            Defaults to false
          type: boolean
        ignoreTeamsFromPayload:
          description: If enabled, the integration will ignore teams sent in request
            payloads. Defaults to false
          type: boolean
          nullable: true
        ignoreRecipientsFromPayload:
          description: If enabled, the integration will ignore recipients sent in request
            payloads. Defaults to false
          type: boolean
          nullable: true
        recipients:
          description: Optional user, schedule, teams or escalation names to calculate
            which users will receive the notifications of the alert. Recipients
            which are exceeding the limit are ignored
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
        isAdvanced:
          type: boolean
        ignoreRespondersFromPayload:
          type: boolean
          nullable: true
        ignoreTagsFromPayload:
          type: boolean
          nullable: true
        ignoreExtraPropertiesFromPayload:
          type: boolean
          nullable: true
        responders:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
        priority:
          type: string
        customPriority:
          type: string
        tags:
          type: array
          items:
            type: string
        extraProperties:
          type: object
          additionalProperties:
            type: string
        assignedTeam:
          $ref: "#/components/schemas/TeamMeta"
        feature-type:
          type: string
          enum:
            - email-based
            - token-based
    EmailBasedIncomingFeature:
      type: object
      x-discriminator-value: email-based
      required:
        - emailUsername
      allOf:
        - $ref: "#/components/schemas/BaseIncomingFeature"
        - properties:
            emailAddress:
              type: string
            emailUsername:
              description: The username part of the email address. It must be unique for
                each integration
              type: string
    TokenBasedIncomingFeature:
      type: object
      x-discriminator-value: token-based
      allOf:
        - $ref: "#/components/schemas/BaseIncomingFeature"
        - properties:
            allowConfigurationAccess:
              description: This parameter is for allowing or restricting the configuration
                access. If configuration access is restricted, the integration
                will be limited to Alert API requests and sending heartbeats.
                Defaults to false
              type: boolean
            allowReadAccess:
              type: boolean
            allowWriteAccess:
              description: This parameter is for configuring the read-only access of
                integration. If the integration is limited to read-only access,
                the integration will not be authorized to perform any create,
                update or delete action within any domain. Defaults to true
              type: boolean
            allowDeleteAccess:
              type: boolean
              nullable: true
    AirbrakeIntegration:
      type: object
      x-discriminator-value: Airbrake
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AlertLogicIntegration:
      type: object
      x-discriminator-value: AlertLogic
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AlertSiteIntegration:
      type: object
      x-discriminator-value: AlertSite
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonCloudTrailIntegration:
      type: object
      x-discriminator-value: AmazonCloudTrail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonEc2AutoScalingIntegration:
      type: object
      x-discriminator-value: AmazonEc2AutoScaling
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonRdsIntegration:
      type: object
      x-discriminator-value: AmazonRds
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonRoute53HealthCheckIntegration:
      type: object
      x-discriminator-value: AmazonRoute53HealthCheck
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonSecurityHubIntegration:
      type: object
      x-discriminator-value: AmazonSecurityHub
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonSesIntegration:
      type: object
      x-discriminator-value: AmazonSes
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonSnsIntegration:
      type: object
      x-discriminator-value: AmazonSns
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AmazonSnsOutgoingIntegration:
      type: object
      x-discriminator-value: AmazonSnsOutgoing
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/AmazonSnsCallback"
    ApicaIntegration:
      type: object
      x-discriminator-value: Apica
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ApiIntegration:
      type: object
      x-discriminator-value: API
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - properties:
            isDefaultIntegration:
              type: boolean
    ApimetricsIntegration:
      type: object
      x-discriminator-value: Apimetrics
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AppDynamicsIntegration:
      type: object
      x-discriminator-value: AppDynamics
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AppOpticsIntegration:
      type: object
      x-discriminator-value: AppOptics
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AppSignalIntegration:
      type: object
      x-discriminator-value: AppSignal
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AppSignalV2Integration:
      type: object
      x-discriminator-value: AppSignalV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AtatusIntegration:
      type: object
      x-discriminator-value: Atatus
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AtlassianBambooIntegration:
      type: object
      x-discriminator-value: AtlassianBambooEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    AutotaskAEMEmailIntegration:
      type: object
      x-discriminator-value: AutotaskAEMEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    AutoTaskEmailIntegration:
      type: object
      x-discriminator-value: AutoTaskEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    AzureAutoScaleIntegration:
      type: object
      x-discriminator-value: AzureAutoScale
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AzureIntegration:
      type: object
      x-discriminator-value: Azure
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AzureOMSIntegration:
      type: object
      x-discriminator-value: AzureOMS
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AzureResourceHealthIntegration:
      type: object
      x-discriminator-value: AzureResourceHealth
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    AzureServiceHealthIntegration:
      type: object
      x-discriminator-value: AzureServiceHealth
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    BigPandaIntegration:
      type: object
      x-discriminator-value: BigPanda
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    BitbucketIntegration:
      type: object
      x-discriminator-value: Bitbucket
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    BlueMatadorIntegration:
      type: object
      x-discriminator-value: BlueMatador
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    BMCFootPrintsV11Integration:
      type: object
      x-discriminator-value: BMCFootPrintsV11
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/BMCFootPrintsV11Callback"
    BMCFootPrintsV12Integration:
      type: object
      x-discriminator-value: BMCFootPrintsV12
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/BMCFootPrintsV12Callback"
    BMCRemedyForceIntegration:
      type: object
      x-discriminator-value: BMCRemedyForce
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    BMCRemedyIntegration:
      type: object
      x-discriminator-value: BMCRemedy
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/BMCRemedyCallback"
    BMCRemedyOnDemandIntegration:
      type: object
      x-discriminator-value: BMCRemedyOnDemand
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/BMCRemedyOnDemandCallback"
    BoundaryIntegration:
      type: object
      x-discriminator-value: Boundary
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CampfireIntegration:
      type: object
      x-discriminator-value: Campfire
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/CampfireCallback"
    CatchpointIntegration:
      type: object
      x-discriminator-value: Catchpoint
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CheckMKIntegration:
      type: object
      x-discriminator-value: CheckMK
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CherwellIntegration:
      type: object
      x-discriminator-value: Cherwell
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/CherwellCallback"
    CircleCiIntegration:
      type: object
      x-discriminator-value: CircleCi
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CirconusIntegration:
      type: object
      x-discriminator-value: Circonus
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/CirconusCallback"
    CloudMonixIntegration:
      type: object
      x-discriminator-value: CloudMonix
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CloudSploitIntegration:
      type: object
      x-discriminator-value: CloudSploit
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CloudWatchEventsIntegration:
      type: object
      x-discriminator-value: CloudWatchEvents
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CloudWatchIntegration:
      type: object
      x-discriminator-value: CloudWatch
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CodeshipIntegration:
      type: object
      x-discriminator-value: Codeship
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ComposeIntegration:
      type: object
      x-discriminator-value: Compose
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ConnectWiseAutomateIntegration:
      type: object
      x-discriminator-value: ConnectWiseAutomate
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ConnectWiseIntegration:
      type: object
      x-discriminator-value: ConnectWise
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ConnectWiseCallback"
    ConnectWiseManageIntegration:
      type: object
      x-discriminator-value: ConnectWiseManage
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ConnectWiseManageCallback"
    ConnectWiseManageV2Integration:
      type: object
      x-discriminator-value: ConnectWiseManageV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ConnectWiseManageV2Callback"
    ConsulIntegration:
      type: object
      x-discriminator-value: Consul
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CopperEggIntegration:
      type: object
      x-discriminator-value: CopperEgg
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    CrashlyticsIntegration:
      type: object
      x-discriminator-value: Crashlytics
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DatadogIntegration:
      type: object
      x-discriminator-value: Datadog
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/DatadogCallback"
    DataloopIOIntegration:
      type: object
      x-discriminator-value: DataloopIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DeskIntegration:
      type: object
      x-discriminator-value: Desk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/DeskCallback"
    DetectifyIntegration:
      type: object
      x-discriminator-value: Detectify
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DnsCheckIntegration:
      type: object
      x-discriminator-value: DNSCheck
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DripStatIntegration:
      type: object
      x-discriminator-value: DripStat
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DynatraceAppMonIntegration:
      type: object
      x-discriminator-value: DynatraceAppMon
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/DynatraceAppMonCallback"
    DynatraceIntegration:
      type: object
      x-discriminator-value: Ruxit
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    DynatraceV2Integration:
      type: object
      x-discriminator-value: DynatraceV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    EmailIntegration:
      type: object
      x-discriminator-value: Email
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    ErrorceptionIntegration:
      type: object
      x-discriminator-value: Errorception
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    EvidentIOIntegration:
      type: object
      x-discriminator-value: EvidentIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    FlockIntegration:
      type: object
      x-discriminator-value: Flock
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/FlockCallback"
    FlowdockIntegration:
      type: object
      x-discriminator-value: Flowdock
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/FlowdockCallback"
    FlowdockV2Integration:
      type: object
      x-discriminator-value: FlowdockV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/FlowdockV2Callback"
    FreshdeskIntegration:
      type: object
      x-discriminator-value: Freshdesk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/FreshdeskCallback"
    FreshserviceIntegration:
      type: object
      x-discriminator-value: Freshservice
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/FreshserviceCallback"
    GhostInspectorIntegration:
      type: object
      x-discriminator-value: GhostInspector
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GitHubIntegration:
      type: object
      x-discriminator-value: GitHub
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GitLabIntegration:
      type: object
      x-discriminator-value: GitLab
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GoogleStackDriverIntegration:
      type: object
      x-discriminator-value: GoogleStackdriver
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GrafanaIntegration:
      type: object
      x-discriminator-value: Grafana
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GrafanaV2Integration:
      type: object
      x-discriminator-value: GrafanaV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    GraylogIntegration:
      type: object
      x-discriminator-value: Graylog
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    HeartbeatIntegration:
      type: object
      x-discriminator-value: Heartbeat
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    HipChatAddOnIntegration:
      type: object
      x-discriminator-value: HipChatAddOn
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/HipChatAddOnCallback"
        - properties:
            requireMatchingUser:
              type: boolean
            glanceLabel:
              type: string
    HipChatIntegration:
      type: object
      x-discriminator-value: HipChat
      allOf:
        - $ref: "#/components/schemas/Integration"
    HipChatIntegrationV2:
      type: object
      x-discriminator-value: HipChatV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/HipChatCallbackV2"
    HoneybadgerIntegration:
      type: object
      x-discriminator-value: Honeybadger
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    HostedGraphiteIntegration:
      type: object
      x-discriminator-value: HostedGraphite
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    HPServiceManagerIntegration:
      type: object
      x-discriminator-value: HPServiceManager
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/HPServiceManagerCallback"
    HumioIntegration:
      type: object
      x-discriminator-value: Humio
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    Icinga2Integration:
      type: object
      x-discriminator-value: Icinga2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/Icinga2Callback"
    IcingaIntegration:
      type: object
      x-discriminator-value: Icinga
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/IcingaCallback"
    IncomingCallIntegration:
      type: object
      x-discriminator-value: IncomingCall
      allOf:
        - $ref: "#/components/schemas/Integration"
    InstanaIntegration:
      type: object
      x-discriminator-value: Instana
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    JenkinsIntegration:
      type: object
      x-discriminator-value: Jenkins
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    JiraIntegration:
      type: object
      x-discriminator-value: Jira
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/JiraCallback"
    JiraServiceDeskIntegration:
      type: object
      x-discriminator-value: JiraServiceDesk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/JiraServiceDeskCallback"
    KapacitorIntegration:
      type: object
      x-discriminator-value: Kapacitor
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    KayakoIntegration:
      type: object
      x-discriminator-value: Kayako
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/KayakoCallback"
    KoreIntegration:
      type: object
      x-discriminator-value: Kore
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/KoreCallback"
    LabTechEmailIntegration:
      type: object
      x-discriminator-value: LabTechEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    LibratoIntegration:
      type: object
      x-discriminator-value: Librato
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LibreNMSIntegration:
      type: object
      x-discriminator-value: LibreNMS
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/LibreNMSCallback"
    LightstepIntegration:
      type: object
      x-discriminator-value: Lightstep
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LogentriesIntegration:
      type: object
      x-discriminator-value: Logentries
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LogglyIntegration:
      type: object
      x-discriminator-value: Loggly
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LogicMonitorIntegration:
      type: object
      x-discriminator-value: LogicMonitor
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/LogicMonitorCallback"
    LogstashIntegration:
      type: object
      x-discriminator-value: Logstash
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LogzIOIntegration:
      type: object
      x-discriminator-value: LogzIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LookerIntegration:
      type: object
      x-discriminator-value: Looker
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    LoomIntegration:
      type: object
      x-discriminator-value: Loom
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    MagentrixIntegration:
      type: object
      x-discriminator-value: Magentrix
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/MagentrixCallback"
    ManageEngineIntegrationDTO:
      type: object
      x-discriminator-value: ManageEngine
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    MaridIntegration:
      type: object
      x-discriminator-value: Marid
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/MaridCallback"
    MattermostIntegration:
      type: object
      x-discriminator-value: Mattermost
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/MattermostCallback"
    MongoDBCloudIntegration:
      type: object
      x-discriminator-value: MongoDBCloud
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    MonitisEmailIntegration:
      type: object
      x-discriminator-value: MonitisEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    MonitisIntegration:
      type: object
      x-discriminator-value: Monitis
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    MoxtraIntegration:
      type: object
      x-discriminator-value: Moxtra
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/MoxtraCallback"
    MSTeamsIntegration:
      type: object
      x-discriminator-value: MSTeams
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/MSTeamsCallback"
        - properties:
            requireMatchingUser:
              type: boolean
            executeCommands:
              type: boolean
            tenantId:
              type: string
    MSTeamsV2Integration:
      type: object
      x-discriminator-value: MSTeamsV2
      required:
        - msteamsV2TeamId
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/MSTeamsV2Callback"
        - properties:
            requireMatchingUser:
              type: boolean
            executeCommands:
              type: boolean
            tenantId:
              type: string
            msteamsV2TeamId:
              type: string
    NagiosIntegrationV1:
      type: object
      x-discriminator-value: Nagios
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/NagiosBasedV1Callback"
    NagiosIntegrationV2:
      type: object
      x-discriminator-value: NagiosV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/NagiosBasedV2Callback"
    NagiosXIIntegrationV1:
      type: object
      x-discriminator-value: NagiosXI
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/NagiosXIV1Callback"
    NagiosXIIntegrationV2:
      type: object
      x-discriminator-value: NagiosXIV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/NagiosXIV2Callback"
    NetuitiveIntegration:
      type: object
      x-discriminator-value: Netuitive
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    NeustarIntegration:
      type: object
      x-discriminator-value: NeustarEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    NewRelicIntegration:
      type: object
      x-discriminator-value: NewRelic
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    NewRelicV2Integration:
      type: object
      x-discriminator-value: NewRelicV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    NodePingIntegration:
      type: object
      x-discriminator-value: NodePing
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ObserviumIntegration:
      type: object
      x-discriminator-value: Observium
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ObserviumV2Integration:
      type: object
      x-discriminator-value: ObserviumV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    OECIntegration:
      type: object
      x-discriminator-value: OEC
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/OECCallback"
    OEMEmailIntegration:
      type: object
      x-discriminator-value: OEMEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    OEMIntegration:
      type: object
      x-discriminator-value: OEM
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    OP5Integration:
      type: object
      x-discriminator-value: OP5
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/OP5Callback"
    OpsDashIntegration:
      type: object
      x-discriminator-value: OpsDash
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    OpsGenieIntegration:
      type: object
      x-discriminator-value: OpsGenie
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/OpsGenieCallback"
    OpsviewIntegration:
      type: object
      x-discriminator-value: Opsview
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PagerDutyCompatibilityIntegration:
      type: object
      x-discriminator-value: PagerDutyCompatibility
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PanoptaIntegration:
      type: object
      x-discriminator-value: Panopta
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PapertrailIntegration:
      type: object
      x-discriminator-value: Papertrail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PingdomIntegration:
      type: object
      x-discriminator-value: Pingdom
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    PingdomV2Integration:
      type: object
      x-discriminator-value: PingdomV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PingdomWebhookIntegration:
      type: object
      x-discriminator-value: PingdomWebhook
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PingometerIntegration:
      type: object
      x-discriminator-value: Pingometer
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PlanioIntegration:
      type: object
      x-discriminator-value: Planio
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/PlanioCallback"
    PrometheusIntegration:
      type: object
      x-discriminator-value: Prometheus
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    PrtgIntegration:
      type: object
      x-discriminator-value: Prtg
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/PrtgCallback"
    RackspaceIntegration:
      type: object
      x-discriminator-value: Rackspace
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    RaygunIntegration:
      type: object
      x-discriminator-value: Raygun
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    RedGateSqlMonitorEmailIntegration:
      type: object
      x-discriminator-value: RedGateSqlMonitorEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    RiemannIntegration:
      type: object
      x-discriminator-value: Riemann
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    RigorIntegration:
      type: object
      x-discriminator-value: Rigor
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    RingCentralEmailIntegration:
      type: object
      x-discriminator-value: RingCentralEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    RingCentralGlipIntegration:
      type: object
      x-discriminator-value: RingCentralGlip
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/RingCentralGlipCallback"
    RollbarIntegration:
      type: object
      x-discriminator-value: Rollbar
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/RollbarCallback"
    RunscopeIntegration:
      type: object
      x-discriminator-value: Runscope
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SalesForceServiceCloudIntegration:
      type: object
      x-discriminator-value: SalesForceServiceCloud
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SalesForceServiceCloudCallback"
    SaltStackIntegration:
      type: object
      x-discriminator-value: SaltStack
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ScalyrIntegration:
      type: object
      x-discriminator-value: Scalyr
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ScomIntegration:
      type: object
      x-discriminator-value: SCOM
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ScoutIntegration:
      type: object
      x-discriminator-value: Scout
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SematextSpmIntegration:
      type: object
      x-discriminator-value: SematextSpm
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SensuIntegration:
      type: object
      x-discriminator-value: Sensu
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SentryIntegration:
      type: object
      x-discriminator-value: Sentry
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ServerDensityIntegration:
      type: object
      x-discriminator-value: ServerDensity
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ServerGuard24Integration:
      type: object
      x-discriminator-value: ServerGuard24
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ServiceNowIntegration:
      type: object
      x-discriminator-value: ServiceNow
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ServiceNowV2Integration:
      type: object
      x-discriminator-value: ServiceNowV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ServiceNowV2Callback"
    ServiceNowV3Integration:
      type: object
      x-discriminator-value: ServiceNowV3
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ServiceNowV3Callback"
    SignalfxIntegration:
      type: object
      x-discriminator-value: Signalfx
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SignalFXV2Integration:
      type: object
      x-discriminator-value: SignalFXV2
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SignalSciencesIntegration:
      type: object
      x-discriminator-value: SignalSciences
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    Site24x7Integration:
      type: object
      x-discriminator-value: Site24x7
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SlackAppIntegration:
      type: object
      x-discriminator-value: SlackApp
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SlackAppCallback"
        - properties:
            requireMatchingUser:
              type: boolean
            executeCommands:
              type: boolean
            useSlackButtons:
              type: boolean
    SlackIntegration:
      type: object
      x-discriminator-value: Slack
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SlackCallback"
    SoastaIntegration:
      type: object
      x-discriminator-value: Soasta
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SolarwindsIntegration:
      type: object
      x-discriminator-value: Solarwinds
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SolarwindsCallback"
    SolarwindsMSPNCentralIntegration:
      type: object
      x-discriminator-value: SolarwindsMSPNCentral
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SolarwindsMSPNcentralCallback"
    SolarWindsWebHelpDeskIntegration:
      type: object
      x-discriminator-value: SolarWindsWebHelpDesk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SolarWindsWebHelpDeskCallback"
    SplunkIntegration:
      type: object
      x-discriminator-value: Splunk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SplunkCallback"
    SplunkITSIIntegration:
      type: object
      x-discriminator-value: SplunkITSI
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SplunkITSICallback"
    StackdriverIntegration:
      type: object
      x-discriminator-value: Stackdriver
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/StackdriverCallback"
    StackStormIntegration:
      type: object
      x-discriminator-value: StackStorm
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    StatusCakeIntegration:
      type: object
      x-discriminator-value: StatusCake
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    StatusHubIntegration:
      type: object
      x-discriminator-value: StatusHub
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    StatusIOIntegration:
      type: object
      x-discriminator-value: StatusIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/StatusIOCallback"
    StatusPageIOIntegration:
      type: object
      x-discriminator-value: StatusPageIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/StatusPageIOCallback"
    StatusyIntegration:
      type: object
      x-discriminator-value: Statusy
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/StatusyCallback"
    StruxureWareIntegration:
      type: object
      x-discriminator-value: StruxureWare
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    SumoLogicIntegration:
      type: object
      x-discriminator-value: SumoLogic
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/SumoLogicCallback"
    SysdigCloudIntegration:
      type: object
      x-discriminator-value: SysdigCloud
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ThousandEyesIntegration:
      type: object
      x-discriminator-value: ThousandEyes
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ThreatStackIntegration:
      type: object
      x-discriminator-value: ThreatStack
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ThundraIntegration:
      type: object
      x-discriminator-value: Thundra
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    TidewaysIntegration:
      type: object
      x-discriminator-value: Tideways
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    TraceIntegration:
      type: object
      x-discriminator-value: Trace
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    TrackItIntegration:
      type: object
      x-discriminator-value: TrackIt
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/TrackItCallback"
    TravisCIIntegration:
      type: object
      x-discriminator-value: TravisCI
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    TwilioIntegration:
      type: object
      x-discriminator-value: Twilio
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    UpdownIOIntegration:
      type: object
      x-discriminator-value: UpdownIO
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    UptimeRobotEmailIntegration:
      type: object
      x-discriminator-value: UptimeRobotEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    UptimeRobotIntegration:
      type: object
      x-discriminator-value: UptimeRobot
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    UptimeWebhookIntegration:
      type: object
      x-discriminator-value: UptimeWebhook
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    UptrendsEmailIntegration:
      type: object
      x-discriminator-value: UptrendsEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    VCenterIntegration:
      type: object
      x-discriminator-value: VCenter
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    VCSAIntegration:
      type: object
      x-discriminator-value: VCSA
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    VividCortexIntegration:
      type: object
      x-discriminator-value: VividCortex
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    WavefrontIntegration:
      type: object
      x-discriminator-value: Wavefront
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    WebhookIntegration:
      type: object
      x-discriminator-value: Webhook
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/WebhookCallback"
    WhatsUpGoldIntegration:
      type: object
      x-discriminator-value: WhatsUpGold
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    WorkatoIntegration:
      type: object
      x-discriminator-value: Workato
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    XLReleaseIntegration:
      type: object
      x-discriminator-value: XLRelease
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    XmppIntegration:
      type: object
      x-discriminator-value: Xmpp
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/XmppCallback"
    XPackAlertingIntegration:
      type: object
      x-discriminator-value: ESWatcher
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/XPackAlertingCallback"
    ZabbixIntegration:
      type: object
      x-discriminator-value: Zabbix
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ZabbixCallback"
    ZapierIntegration:
      type: object
      x-discriminator-value: Zapier
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
    ZendeskIntegration:
      type: object
      x-discriminator-value: Zendesk
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ZendeskCallback"
    ZenossIntegration:
      type: object
      x-discriminator-value: Zenoss
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/TokenBasedIncomingFeature"
        - $ref: "#/components/schemas/ZenossCallback"
    ZyrionIntegration:
      type: object
      x-discriminator-value: ZyrionEmail
      allOf:
        - $ref: "#/components/schemas/Integration"
        - $ref: "#/components/schemas/EmailBasedIncomingFeature"
    ListIntegrationActionsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ActionCategorized"
    UpdateIntegrationActionsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ActionCategorized"
    CreateIntegrationActionsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ActionCategorized"
    ActionCategorized:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/IntegrationMeta"
        ignore:
          type: array
          items:
            $ref: "#/components/schemas/IgnoreIntegrationAction"
        create:
          type: array
          items:
            $ref: "#/components/schemas/CreateIntegrationAction"
        close:
          type: array
          items:
            $ref: "#/components/schemas/CloseIntegrationAction"
        acknowledge:
          type: array
          items:
            $ref: "#/components/schemas/AckIntegrationAction"
        addNote:
          type: array
          items:
            $ref: "#/components/schemas/AddNoteIntegrationAction"
    IntegrationActionFilter:
      type: object
      properties:
        conditionMatchType:
          type: string
          enum:
            - match-all
            - match-any-condition
            - match-all-conditions
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationCondition"
    IntegrationCondition:
      type: object
      properties:
        field:
          type: string
        not:
          type: boolean
        operation:
          type: string
          enum:
            - matches
            - contains
            - starts-with
            - ends-with
            - equals
            - contains-key
            - contains-value
            - greater-than
            - less-than
            - is-empty
            - equals-ignore-whitespace
        expectedValue:
          type: string
    BaseIntegrationAction:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
        - name
        - filter
      properties:
        name:
          type: string
        order:
          type: integer
          format: int32
          minimum: 0
        filter:
          $ref: "#/components/schemas/IntegrationActionFilter"
        type:
          type: string
          enum:
            - acknowledge
            - addNote
            - close
            - create
            - ignore
    CommonIntegrationAction:
      type: object
      required:
        - user
        - note
        - alias
      allOf:
        - $ref: "#/components/schemas/BaseIntegrationAction"
        - properties:
            user:
              type: string
            note:
              type: string
            alias:
              type: string
    IgnoreIntegrationAction:
      type: object
      x-discriminator-value: ignore
      allOf:
        - $ref: "#/components/schemas/BaseIntegrationAction"
    CreateIntegrationAction:
      type: object
      x-discriminator-value: create
      allOf:
        - $ref: "#/components/schemas/CommonIntegrationAction"
        - properties:
            source:
              type: string
            message:
              type: string
            description:
              type: string
            entity:
              type: string
            priority:
              type: string
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
            customPriority:
              type: string
            appendAttachments:
              type: boolean
            alertActions:
              type: array
              items:
                type: string
            ignoreAlertActionsFromPayload:
              type: boolean
            recipients:
              type: array
              items:
                $ref: "#/components/schemas/Recipient"
            responders:
              type: array
              items:
                $ref: "#/components/schemas/Recipient"
            ignoreRecipientsFromPayload:
              type: boolean
            ignoreTeamsFromPayload:
              type: boolean
            tags:
              type: array
              items:
                type: string
            ignoreTagsFromPayload:
              type: boolean
            extraProperties:
              type: object
              additionalProperties:
                type: string
            ignoreExtraPropertiesFromPayload:
              type: boolean
            ignoreRespondersFromPayload:
              type: boolean
              nullable: true
    CloseIntegrationAction:
      type: object
      x-discriminator-value: close
      allOf:
        - $ref: "#/components/schemas/CommonIntegrationAction"
    AckIntegrationAction:
      type: object
      x-discriminator-value: acknowledge
      allOf:
        - $ref: "#/components/schemas/CommonIntegrationAction"
    AddNoteIntegrationAction:
      type: object
      x-discriminator-value: addNote
      allOf:
        - $ref: "#/components/schemas/CommonIntegrationAction"
    CreateHeartbeatPayload:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - required:
            - name
            - interval
            - intervalUnit
            - enabled
          properties:
            name:
              type: string
              description: Name of the heartbeat
              maxLength: 200
            description:
              type: string
              description: An optional description of the heartbeat
              maxLength: 10000
            interval:
              type: integer
              format: int32
              description: Specifies how often a heartbeat message should be expected
              minimum: 1
            intervalUnit:
              type: string
              description: Interval specified as 'minutes', 'hours' or 'days'
              enum:
                - minutes
                - hours
                - days
            enabled:
              type: boolean
              description: Enable/disable heartbeat monitoring
            ownerTeam:
              type: object
              description: Owner team of the heartbeat, consisting id and/or name of the
                owner team
              properties:
                name:
                  type: string
                id:
                  type: string
            alertMessage:
              type: string
              description: Specifies the alert message for heartbeat expiration alert. If
                this is not provided, default alert message is 'HeartbeatName is
                expired'
              maxLength: 130
            alertTags:
              type: array
              description: Specifies the alert tags for heartbeat expiration alert
              items:
                type: string
                maxLength: 50
              maxItems: 20
            alertPriority:
              type: string
              description: Specifies the alert priority for heartbeat expiration alert. If
                this is not provided, default priority is P3
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
    UpdateHeartbeatPayload:
      x-opsgenie-domain: heartbeat
      type: object
      properties:
        description:
          type: string
          description: An optional description of the heartbeat
          maxLength: 10000
        interval:
          type: integer
          format: int32
          description: Specifies how often a heartbeat message should be expected
          minimum: 1
        intervalUnit:
          type: string
          description: Interval specified as 'minutes', 'hours' or 'days'
          enum:
            - minutes
            - hours
            - days
        enabled:
          type: boolean
          description: Enable/disable heartbeat monitoring
    CreateHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Heartbeat"
    GetHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Heartbeat"
    UpdateHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/HeartbeatMeta"
    EnableHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/HeartbeatMeta"
    DisableHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/HeartbeatMeta"
    ListHeartbeatResponse:
      x-opsgenie-domain: heartbeat
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: object
              properties:
                heartbeats:
                  type: array
                  items:
                    $ref: "#/components/schemas/Heartbeat"
    Heartbeat:
      x-opsgenie-domain: heartbeat
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        interval:
          type: integer
          format: int32
        enabled:
          type: boolean
        intervalUnit:
          type: string
          enum:
            - minutes
            - hours
            - days
        expired:
          type: boolean
        lastPingTime:
          type: string
          format: date-time
    HeartbeatMeta:
      x-opsgenie-domain: heartbeat
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        expired:
          type: boolean
    DeprecatedChangeAlertPolicyOrderPayload:
      type: object
      required:
        - targetIndex
      properties:
        targetIndex:
          type: integer
          format: int32
          description: Order of the target policy will be changed to this value. Larger
            values than policy count will put the target policy to last place
          minimum: 0
    DeprecatedListAlertPoliciesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/DeprecatedAlertPolicyMeta"
    DeprecatedCreateAlertPolicyResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/DeprecatedAlertPolicyMeta"
    DeprecatedGetAlertPolicyResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/DeprecatedAlertPolicy"
    DeprecatedAlertPolicyMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - modify
            - auto-close
            - notification-delay
            - notification-deduplication
            - notification-suppress
            - notification-renotify
            - auto-restart-notifications
        order:
          type: integer
          format: int32
        enabled:
          type: boolean
    DeprecatedAlertPolicy:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        id:
          type: string
        name:
          type: string
          description: Name of the policy
        policyDescription:
          type: string
          description: Description of the policy
        filter:
          $ref: "#/components/schemas/Filter"
        timeRestrictions:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        enabled:
          type: boolean
          description: Activity status of the alert policy
        type:
          type: string
          description: Type of the policy
          enum:
            - modify
            - auto-close
            - notification-delay
            - notification-deduplication
            - notification-suppress
            - notification-renotify
            - auto-restart-notifications
    DeprecatedModifyAlertPolicy:
      type: object
      x-discriminator-value: modify
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            ignoreOriginalAlertActions:
              type: boolean
            ignoreOriginalDetails:
              description: If set to true, policy will ignore the original details of the
                alert. Default value is false
              type: boolean
            ignoreOriginalRecipients:
              description: If set to true, policy will ignore the original recipients of
                the alert. Default value is false
              type: boolean
            ignoreOriginalTags:
              description: If set to true, policy will ignore the original tags of the
                alert. Default value is false
              type: boolean
            ignoreOriginalTeams:
              description: If set to true, policy will ignore the original teams of the
                alert. Default value is false
              type: boolean
            continue:
              description: Will continue with other modify policies if set to true
              type: boolean
            alias:
              description: Alias of the alert. You can use {{alias}} to refer to the
                original alias. Default value is {{alias}}
              type: string
            description:
              description: Description of the alert. You can use {{description}} to refer
                to the original alert description. Default value is
                {{description}}
              type: string
            entity:
              description: Entity field of the alert. You can use {{entity}} to refer to
                the original entity. Default value is {{entity}}
              type: string
            message:
              description: Message of the alert
              type: string
            source:
              description: Source field of the alert. You can use {{source}} to refer to
                the original source. Default value is {{source}}
              type: string
            actions:
              description: Alert actions as a list of strings to add to the alerts original
                actions value. If ignoreOriginalAlertActions field is set to
                true, this will replace the original actions.
              type: array
              items:
                type: string
            recipients:
              description: Recipients to add to the alerts original recipients value as a
                list of escalations, schedules, teams, users or the reserved
                word none or all. If ignoreOriginalRecipients field is set to
                true, this will replace the original recipients.
              type: array
              items:
                $ref: "#/components/schemas/Recipient"
            tags:
              description: Tags to add to the alerts original tags value as a list of
                strings. If ignoreOriginalRecipients field is set to true, this
                will replace the original recipients.
              type: array
              items:
                type: string
            details:
              description: Custom properties to add to the alerts original details value as
                a list of strings. If ignoreOriginalDetails field is set to
                true, this will replace the original details.
              type: object
              additionalProperties:
                type: string
            priority:
              type: string
              description: Priority level of the alert
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
    DeprecatedAutoCloseAlertPolicy:
      type: object
      x-discriminator-value: auto-close
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            duration:
              $ref: "#/components/schemas/Duration"
    DeprecatedNotificationDelayAlertPolicy:
      type: object
      x-discriminator-value: notification-delay
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            delayOption:
              description: Delay type
              type: string
              enum:
                - for-duration
                - next-time
                - next-weekday
                - next-monday
                - next-tuesday
                - next-wednesday
                - next-thursday
                - next-friday
                - next-saturday
                - next-sunday
            duration:
              $ref: "#/components/schemas/Duration"
            untilHour:
              description: Should be a number between 0-23
              type: integer
              format: int32
              minimum: 0
              maximum: 23
            untilMinute:
              description: Should be a number between 0-59
              type: integer
              format: int32
              minimum: 0
              maximum: 59
    DeprecatedNotificationDeduplicationAlertPolicy:
      type: object
      x-discriminator-value: notification-deduplication
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            deduplicationActionType:
              type: string
              description: Deduplication type
              enum:
                - value-based
                - frequency-based
            count:
              description: Number of alerts before deduplication
              type: integer
              format: int32
              minimum: 2
              maximum: 100
            duration:
              $ref: "#/components/schemas/Duration"
    DeprecatedAutoRestartNotificationsAlertPolicy:
      type: object
      x-discriminator-value: auto-restart-notifications
      required:
        - maxRepeatCount
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
        - properties:
            duration:
              $ref: "#/components/schemas/Duration"
            maxRepeatCount:
              description: Max restart count of the notification flow
              type: integer
              format: int32
    DeprecatedNotificationSuppressAlertPolicy:
      type: object
      x-discriminator-value: notification-suppress
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
    DeprecatedNotificationRenotifyAlertPolicy:
      type: object
      x-discriminator-value: notification-renotify
      allOf:
        - $ref: "#/components/schemas/DeprecatedAlertPolicy"
    CreateMaintenancePayload:
      type: object
      required:
        - time
        - rules
      properties:
        description:
          type: string
          description: Description for the maintenance
        time:
          $ref: "#/components/schemas/MaintenanceTime"
        rules:
          type: array
          minItems: 1
          description: Rules of maintenance, which takes a list of rule objects and defines
            the maintenance rules over integrations and policies.
          items:
            $ref: "#/components/schemas/MaintenanceRule"
    UpdateMaintenancePayload:
      type: object
      required:
        - time
        - rules
      properties:
        description:
          type: string
          description: Description for the maintenance
        time:
          $ref: "#/components/schemas/MaintenanceTime"
        rules:
          type: array
          minItems: 1
          description: Rules of maintenance, which takes a list of rule objects and defines
            the maintenance rules over integrations and policies.
          items:
            $ref: "#/components/schemas/MaintenanceRule"
    CreateMaintenanceResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/MaintenanceMeta"
    ListMaintenanceResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/MaintenanceMeta"
    GetMaintenanceResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Maintenance"
    UpdateMaintenanceResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/MaintenanceMeta"
    MaintenanceTime:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: Type of the maintenance time
          enum:
            - for-5-minutes
            - for-30-minutes
            - for-1-hour
            - indefinitely
            - schedule
        startDate:
          type: string
          format: date-time
          description: Start time of the time configuration of maintenance
        endDate:
          type: string
          format: date-time
          description: End time of the time configuration of maintenance
    MaintenanceMeta:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the maintenance meta data
        status:
          type: string
          description: Status of the maintenance meta data
          enum:
            - cancelled
            - past
            - active
            - planned
        time:
          $ref: "#/components/schemas/MaintenanceTime"
        description:
          type: string
          description: Description for maintenance meta data
    Maintenance:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the maintenance meta data
        status:
          type: string
          description: Status of the maintenance data
          enum:
            - cancelled
            - past
            - active
            - planned
        rules:
          type: array
          description: Rules of maintenance, which takes a list of rule objects and defines
            the maintenance rules over integrations and policies.
          items:
            $ref: "#/components/schemas/MaintenanceRule"
        time:
          $ref: "#/components/schemas/MaintenanceTime"
        description:
          type: string
          description: Description for maintenance data
    MaintenanceRule:
      type: object
      required:
        - entity
      properties:
        state:
          type: string
          description: Defines the state of the rule
          enum:
            - enabled
            - disabled
        entity:
          $ref: "#/components/schemas/MaintenanceEntity"
    MaintenanceEntity:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: Identifier of the maintenance entity
        type:
          type: string
          enum:
            - policy
            - integration
    GetAccountInfoResponse:
      x-opsgenie-domain: account
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/AccountInfo"
    AccountInfo:
      x-opsgenie-domain: account
      type: object
      properties:
        name:
          type: string
        userCount:
          type: integer
          format: int32
        plan:
          $ref: "#/components/schemas/AccountPlan"
    AccountPlan:
      x-opsgenie-domain: account
      type: object
      properties:
        maxUserCount:
          type: integer
          format: int32
        name:
          type: string
        isYearly:
          type: boolean
    CreateUserPayload:
      type: object
      required:
        - username
        - fullName
        - role
      properties:
        username:
          type: string
          description: E-mail address of the user
          maxLength: 100
          format: email
        fullName:
          type: string
          description: Name of the user
          maxLength: 512
        role:
          $ref: "#/components/schemas/UserRole"
        skypeUsername:
          type: string
          description: Skype username of the user
        timeZone:
          type: string
          description: Timezone of the user. If not set, timezone of the customer will be
            used instead.
        locale:
          type: string
          description: Location information of the user. If not set, locale of the customer
            will be used instead.
        userAddress:
          $ref: "#/components/schemas/UserAddress"
        tags:
          type: array
          description: List of labels attached to the user. You can label users to
            differentiate them from the rest. For example, you can add ITManager
            tag to differentiate people with this role from others.
          items:
            type: string
        details:
          description: Set of user defined properties.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        invitationDisabled:
          description: Invitation email will not be sent if set to true. Default value is
            false
          type: boolean
    UpdateUserPayload:
      type: object
      properties:
        username:
          type: string
          description: E-mail address of the user
          maxLength: 100
          format: email
        fullName:
          type: string
          description: Name of the user
          maxLength: 512
        role:
          $ref: "#/components/schemas/UserRole"
        skypeUsername:
          type: string
          description: Skype username of the user
        timeZone:
          type: string
          description: Timezone of the user. If not set, timezone of the customer will be
            used instead.
        locale:
          type: string
          description: Location information of the user. If not set, locale of the customer
            will be used instead.
        userAddress:
          $ref: "#/components/schemas/UserAddress"
        tags:
          type: array
          description: List of labels attached to the user. You can label users to
            differentiate them from the rest. For example, you can add ITManager
            tag to differentiate people with this role from others.
          items:
            type: string
        details:
          description: Set of user defined properties.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        invitationDisabled:
          description: Invitation email will not be sent if set to true. Default value is
            false
          type: boolean
    ListUsersResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/User"
            totalCount:
              type: integer
              format: int64
            paging:
              $ref: "#/components/schemas/PageDetails"
    GetUserResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponseWithExpandable"
        - properties:
            data:
              $ref: "#/components/schemas/User"
    ListUserTeamsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/TeamMeta"
    ListUserForwardingRulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ForwardingRule"
    ListUserEscalationsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Escalation"
    ListUserSchedulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ScheduleMeta"
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        fullName:
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
        skypeUsername:
          type: string
          description: Skype username of the user
        timeZone:
          type: string
          description: Timezone of the user. If not set, timezone of the customer will be
            used instead.
        locale:
          type: string
          description: Location information of the user. If not set, locale of the customer
            will be used instead.
        userAddress:
          $ref: "#/components/schemas/UserAddress"
        tags:
          type: array
          description: List of labels attached to the user. You can label users to
            differentiate them from the rest. For example, you can add ITManager
            tag to differentiate people with this role from others.
          items:
            type: string
        details:
          description: Set of user defined properties.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        blocked:
          type: boolean
        verified:
          type: boolean
        createdAt:
          type: string
          format: date-time
        mutedUntil:
          type: string
          format: date-time
        userContacts:
          type: array
          items:
            $ref: "#/components/schemas/UserContact"
    UserRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    UserAddress:
      type: object
      properties:
        country:
          type: string
        state:
          type: string
        city:
          type: string
        line:
          type: string
        zipCode:
          type: string
    UserContact:
      type: object
      properties:
        to:
          type: string
        id:
          type: string
        contactMethod:
          type: string
          enum:
            - email
            - sms
            - voice
            - mobile
        disabledReason:
          type: string
        enabled:
          type: boolean
    UserMeta:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    CreateContactPayload:
      type: object
      required:
        - method
        - to
      properties:
        method:
          type: string
          description: Contact method of user
          enum:
            - email
            - sms
            - voice
            - mobile
        to:
          type: string
          description: Address of contact method
    UpdateContactPayload:
      type: object
      required:
        - to
      properties:
        to:
          type: string
          description: Address of contact method
    ListContactsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ContactWithApplyOrder"
    GetContactResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Contact"
    ContactWithApplyOrder:
      type: object
      properties:
        id:
          type: string
        method:
          type: string
        to:
          type: string
        status:
          $ref: "#/components/schemas/ContactStatus"
        applyOrder:
          type: integer
          format: int32
    ContactStatus:
      type: object
      properties:
        enabled:
          type: boolean
        disabledReason:
          type: string
    Contact:
      type: object
      properties:
        id:
          type: string
        method:
          type: string
        to:
          type: string
        status:
          $ref: "#/components/schemas/ContactStatus"
    ContactMeta:
      type: object
      required:
        - method
        - to
      properties:
        method:
          type: string
          enum:
            - email
            - sms
            - voice
            - mobile
        to:
          type: string
    CreateNotificationRulePayload:
      type: object
      required:
        - name
        - actionType
        - enabled
      properties:
        name:
          type: string
          description: Name of the notification rule
        actionType:
          $ref: "#/components/schemas/NotificationActionType"
        criteria:
          $ref: "#/components/schemas/Filter"
        notificationTime:
          type: array
          description: List of Time Periods that notification for schedule start/end will
            be sent
          items:
            $ref: "#/components/schemas/NotifyTime"
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        schedules:
          type: array
          description: List of schedules that notification rule will be applied when on
            call of that schedule starts/ends. This field is valid for Schedule
            Start/End rules
          items:
            $ref: "#/components/schemas/ScheduleRecipient"
        order:
          type: integer
          description: The order of the notification rule within the notification rules
            with the same action type
          format: int32
          minimum: 0
        steps:
          description: List of steps that will be added to notification rule
          type: array
          items:
            $ref: "#/components/schemas/CreateNotificationRuleStepPayload"
        repeat:
          $ref: "#/components/schemas/NotificationRepeat"
        enabled:
          type: boolean
          description: Defines if notification rule will be enabled or not when it is
            created
    UpdateNotificationRulePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the notification rule
        criteria:
          $ref: "#/components/schemas/Filter"
        notificationTime:
          type: array
          description: List of Time Periods that notification for schedule start/end will
            be sent
          items:
            $ref: "#/components/schemas/NotifyTime"
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        schedules:
          type: array
          description: List of schedules that notification rule will be applied when on
            call of that schedule starts/ends. This field is valid for Schedule
            Start/End rules
          items:
            $ref: "#/components/schemas/ScheduleRecipient"
        steps:
          description: List of steps that will be added to notification rule
          type: array
          items:
            $ref: "#/components/schemas/CreateNotificationRuleStepPayload"
        repeat:
          $ref: "#/components/schemas/NotificationRepeat"
        order:
          type: integer
          description: The order of the notification rule within the notification rules
            with the same action type
          format: int32
          minimum: 0
        enabled:
          type: boolean
          description: Defines if notification rule will be enabled or not when it is
            created
    ChangeNotificationRuleOrderPayload:
      type: object
      properties:
        order:
          type: integer
          format: int32
          minimum: 0
    ListNotificationRulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/NotificationRuleMeta"
    CreateNotificationRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/NotificationRuleMeta"
    GetNotificationRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/NotificationRule"
    UpdateNotificationRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/NotificationRuleMeta"
    NotificationRuleMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        actionType:
          $ref: "#/components/schemas/NotificationActionType"
        order:
          type: integer
          format: int32
        enabled:
          type: boolean
    NotificationActionType:
      type: string
      description: Type of the action that notification rule will have
      enum:
        - create-alert
        - acknowledged-alert
        - closed-alert
        - renotified-alert
        - assigned-alert
        - add-note
        - schedule-start
        - schedule-end
        - incoming-call-routing
    NotifyTime:
      type: string
      enum:
        - just-before
        - 15-minutes-ago
        - 1-hour-ago
        - 1-day-ago
    NotificationRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        actionType:
          $ref: "#/components/schemas/NotificationActionType"
        criteria:
          $ref: "#/components/schemas/Filter"
        notificationTime:
          type: array
          items:
            $ref: "#/components/schemas/NotifyTime"
        order:
          type: integer
          format: int32
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        steps:
          type: array
          items:
            $ref: "#/components/schemas/NotificationRuleStep"
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleRecipient"
        repeat:
          $ref: "#/components/schemas/NotificationRepeat"
        enabled:
          type: boolean
    NotificationRepeat:
      type: object
      description: The amount of time in minutes that notification steps will be repeatedly
        apply
      properties:
        loopAfter:
          type: integer
          format: int32
          minimum: 0
        enabled:
          type: boolean
    CreateNotificationRuleStepPayload:
      type: object
      required:
        - contact
        - enabled
      properties:
        contact:
          $ref: "#/components/schemas/ContactMeta"
        sendAfter:
          $ref: "#/components/schemas/Duration"
        enabled:
          type: boolean
          description: Specifies whether given step will be enabled or not when it is
            created.
    UpdateNotificationRuleStepPayload:
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/ContactMeta"
        sendAfter:
          $ref: "#/components/schemas/Duration"
        enabled:
          type: boolean
          description: Specifies whether given step will be enabled or not when it is
            updated.
    ListNotificationRuleStepsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/NotificationRuleStep"
    GetNotificationRuleStepResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/NotificationRuleStep"
    NotificationRuleStep:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/NotificationRuleStepParent"
        id:
          type: string
        sendAfter:
          $ref: "#/components/schemas/Duration"
        contact:
          $ref: "#/components/schemas/ContactMeta"
        enabled:
          type: boolean
    NotificationRuleStepParent:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    CreateTeamPayload:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the team
        description:
          type: string
          description: The description of team
        members:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
          description: The users which will be added to team, and optionally their roles.
    UpdateTeamPayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the team
        description:
          type: string
          description: The description of team
        members:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
    GetTeamResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Team"
    ListTeamsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponseWithExpandable"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Team"
    ListTeamLogsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/TeamLog"
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
    TeamLog:
      type: object
      properties:
        offset:
          type: string
        logs:
          type: array
          items:
            $ref: "#/components/schemas/TeamLogDetails"
    TeamLogDetails:
      type: object
      properties:
        owner:
          type: string
        createdDate:
          type: string
          format: date-time
        log:
          type: string
    TeamMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    AddTeamMemberPayload:
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/UserMeta"
        role:
          type: string
          description: Member role of the user, consisting 'user', 'admin' or a custom team
            role. Default value is 'user'
          default: user
    TeamMember:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserMeta"
        role:
          type: string
          description: Member role of the user, consisting 'user', 'admin' or a custom team
            role. Default value is 'user'
          default: user
    CreateTeamRolePayload:
      type: object
      required:
        - name
        - rights
      properties:
        name:
          type: string
          description: Name of the team role
        rights:
          type: array
          description: List of team role rights.
          items:
            $ref: "#/components/schemas/TeamRight"
    UpdateTeamRolePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the team role
        rights:
          type: array
          description: List of team role rights.
          items:
            $ref: "#/components/schemas/TeamRight"
    GetTeamRoleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/TeamRole"
    ListTeamRoleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/TeamRole"
    TeamRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        rights:
          type: array
          items:
            $ref: "#/components/schemas/TeamRight"
    TeamRight:
      type: object
      required:
        - right
      properties:
        right:
          type: string
        granted:
          type: boolean
    CreateTeamRoutingRulePayload:
      type: object
      required:
        - notify
      properties:
        name:
          type: string
          description: Name of the team routing rule
        order:
          type: integer
          format: int32
          description: Order of team routing rule within the rules. order value is actually
            the index of the team routing rule.
        criteria:
          $ref: "#/components/schemas/Filter"
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        notify:
          $ref: "#/components/schemas/Recipient"
        timezone:
          type: string
          description: Timezone of team routing rule. If timezone field is not given,
            account timezone is used as default.
    UpdateTeamRoutingRulePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the team routing rule
        criteria:
          $ref: "#/components/schemas/Filter"
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        notify:
          $ref: "#/components/schemas/Recipient"
        timezone:
          type: string
          description: Timezone of team routing rule. If timezone field is not given,
            account timezone is used as default.
    ChangeTeamRoutingRuleOrderPayload:
      type: object
      properties:
        order:
          type: integer
          format: int32
          description: Order of team routing rule within the rules. order value is actually
            the index of the team routing rule.
    GetTeamRoutingRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/TeamRoutingRule"
    ListTeamRoutingRulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/TeamRoutingRule"
    TeamRoutingRule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isDefault:
          type: boolean
        order:
          type: integer
          format: int32
        criteria:
          $ref: "#/components/schemas/Filter"
        timezone:
          type: string
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        notify:
          $ref: "#/components/schemas/Recipient"
    CreateSchedulePayload:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the schedule
        description:
          type: string
          description: The description of schedule
        timezone:
          type: string
          description: Timezone of schedule
        enabled:
          type: boolean
          nullable: true
          description: Enable/disable state of schedule
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/CreateScheduleRotationPayload"
          minItems: 1
    UpdateSchedulePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the schedule
        description:
          type: string
          description: The description of schedule
        timezone:
          type: string
          description: Timezone of schedule
        enabled:
          type: boolean
          nullable: true
          description: Enable/disable state of schedule
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/CreateScheduleRotationPayload"
    GetScheduleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Schedule"
    ListSchedulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponseWithExpandable"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Schedule"
    CreateScheduleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleMeta"
    GetScheduleTimelineResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponseWithExpandable"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleTimeline"
    UpdateScheduleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleMeta"
    Schedule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        timezone:
          type: string
        enabled:
          type: boolean
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleRotation"
    ScheduleMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        enabled:
          type: boolean
    ScheduleTimeline:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/ScheduleMeta"
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        finalTimeline:
          $ref: "#/components/schemas/Timeline"
        baseTimeline:
          $ref: "#/components/schemas/Timeline"
        overrideTimeline:
          $ref: "#/components/schemas/Timeline"
        forwardingTimeline:
          $ref: "#/components/schemas/Timeline"
    Timeline:
      type: object
      properties:
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/TimelineRotation"
    TimelineRotation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        order:
          type: number
          format: float
          nullable: true
        periods:
          type: array
          items:
            $ref: "#/components/schemas/TimelinePeriod"
    TimelinePeriod:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        type:
          type: string
        fromUser:
          description: Only used by 'forwarding' period types
          type: string
        recipient:
          $ref: "#/components/schemas/TimelineRecipient"
        flattenedRecipients:
          description: Only used by 'historical' period types
          type: array
          items:
            $ref: "#/components/schemas/TimelineRecipient"
    TimelineRecipient:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        forwardedFrom:
          description: Only used by 'historical' period types
          type: string
    CreateScheduleRotationPayload:
      type: object
      required:
        - startDate
        - type
        - participants
      properties:
        name:
          type: string
          description: Name of rotation
        startDate:
          type: string
          format: date-time
          description: Defines a date time as an override start. Minutes may take 0 or 30
            as value. Otherwise they will be converted to nearest 0 or 30
            automatically
        endDate:
          type: string
          format: date-time
          description: Defines a date time as an override end. Minutes may take 0 or 30 as
            value. Otherwise they will be converted to nearest 0 or 30
            automatically
        type:
          type: string
          enum:
            - daily
            - weekly
            - hourly
          description: Type of rotation. May be one of 'daily', 'weekly' and 'hourly'
        length:
          type: integer
          format: int32
          description: Length of the rotation with default value 1
        participants:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
          description: List of escalations, teams, users or the reserved word none which
            will be used in schedule. Each of them can be used multiple times
            and will be rotated in the order they given.
          minItems: 1
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
    UpdateScheduleRotationPayload:
      type: object
      properties:
        name:
          type: string
          description: Name of rotation
        startDate:
          type: string
          format: date-time
          description: Defines a date time as an override start. Minutes may take 0 or 30
            as value. Otherwise they will be converted to nearest 0 or 30
            automatically
        endDate:
          type: string
          format: date-time
          description: Defines a date time as an override end. Minutes may take 0 or 30 as
            value. Otherwise they will be converted to nearest 0 or 30
            automatically
        type:
          type: string
          enum:
            - daily
            - weekly
            - hourly
          description: Type of rotation. May be one of 'daily', 'weekly' and 'hourly'
        length:
          type: integer
          format: int32
          description: Length of the rotation with default value 1
        participants:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
          description: List of escalations, teams, users or the reserved word none which
            will be used in schedule. Each of them can be used multiple times
            and will be rotated in the order they given.
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
    GetScheduleRotationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleRotationWithParent"
    ListScheduleRotationsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ScheduleRotation"
    ScheduleRotationWithParent:
      type: object
      allOf:
        - $ref: "#/components/schemas/ScheduleRotation"
        - properties:
            _parent:
              $ref: "#/components/schemas/ScheduleMeta"
    ScheduleRotation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - daily
            - weekly
            - hourly
        length:
          type: integer
          format: int32
        participants:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
        timeRestriction:
          $ref: "#/components/schemas/TimeRestrictionInterval"
    CreateScheduleOverridePayload:
      type: object
      required:
        - user
        - startDate
        - endDate
      properties:
        alias:
          type: string
          description: A user defined identifier for the override
        user:
          $ref: "#/components/schemas/Recipient"
        startDate:
          type: string
          format: date-time
          description: Time for override starting
        endDate:
          type: string
          format: date-time
          description: Time for override ending
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleOverrideRotation"
          description: Identifier (id or name) of rotations that override will apply. When
            it's set, only specified schedule rotations will be overridden
    UpdateScheduleOverridePayload:
      type: object
      required:
        - user
        - startDate
        - endDate
      properties:
        user:
          $ref: "#/components/schemas/Recipient"
        startDate:
          type: string
          format: date-time
          description: Time for override starting
        endDate:
          type: string
          format: date-time
          description: Time for override ending
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleOverrideRotation"
          description: Identifier (id or name) of rotations that override will apply. When
            it's set, only specified schedule rotations will be overridden
    CreateScheduleOverrideResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleOverrideMeta"
    GetScheduleOverrideResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleOverride"
    UpdateScheduleOverrideResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ScheduleOverrideMeta"
    ListScheduleOverrideResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ScheduleOverride"
    ScheduleOverride:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/ScheduleMeta"
        alias:
          type: string
        user:
          $ref: "#/components/schemas/Recipient"
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        rotations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleOverrideRotation"
    ScheduleOverrideRotation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ScheduleOverrideMeta:
      type: object
      properties:
        alias:
          type: string
    ListOnCallsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/OnCall"
    GetOnCallResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/OnCall"
    GetNextOnCallResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/NextOnCall"
    OnCall:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/ScheduleMeta"
        onCallParticipants:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
        onCallRecipients:
          type: array
          items:
            type: string
    NextOnCall:
      type: object
      properties:
        _parent:
          $ref: "#/components/schemas/ScheduleMeta"
        nextOnCallRecipients:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
        exactNextOnCallRecipients:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
        nextOnCallParticipants:
          type: array
          items:
            type: string
        exactNextOnCallParticipants:
          type: array
          items:
            type: string
    Participant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        onCallParticipants:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
        forwardedFrom:
          $ref: "#/components/schemas/Participant"
        escalationTime:
          description: Only used by 'escalation' participants
          type: integer
          format: int32
        notifyType:
          description: Only used by 'escalation' participants
          type: string
    CreateEscalationPayload:
      type: object
      required:
        - name
        - rules
      properties:
        name:
          type: string
          description: Name of the escalation
        description:
          type: string
          description: Description of the escalation
        rules:
          type: array
          description: List of escalation rules.
          items:
            $ref: "#/components/schemas/EscalationRule"
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        repeat:
          $ref: "#/components/schemas/EscalationRepeat"
    UpdateEscalationPayload:
      type: object
      properties:
        name:
          type: string
          description: Name of the escalation
        description:
          type: string
          description: Description of the escalation
        rules:
          type: array
          description: List of escalation rules.
          items:
            $ref: "#/components/schemas/EscalationRule"
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        repeat:
          $ref: "#/components/schemas/EscalationRepeat"
    GetEscalationResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Escalation"
    ListEscalationsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Escalation"
    Escalation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        ownerTeam:
          $ref: "#/components/schemas/TeamMeta"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/EscalationRule"
        repeat:
          $ref: "#/components/schemas/EscalationRepeat"
    EscalationRule:
      type: object
      required:
        - condition
        - notifyType
        - delay
        - recipient
      properties:
        condition:
          type: string
          enum:
            - if-not-acked
            - if-not-closed
          default: if-not-acked
        notifyType:
          type: string
          enum:
            - default
            - next
            - previous
            - users
            - admins
            - all
          default: default
        delay:
          $ref: "#/components/schemas/Duration"
        recipient:
          $ref: "#/components/schemas/Recipient"
    EscalationRepeat:
      type: object
      properties:
        waitInterval:
          type: integer
          nullable: true
        count:
          type: integer
          nullable: true
        resetRecipientStates:
          type: boolean
          nullable: true
        closeAlertAfterAll:
          type: boolean
          nullable: true
    CreateForwardingRulePayload:
      type: object
      required:
        - fromUser
        - toUser
        - startDate
        - endDate
      properties:
        fromUser:
          $ref: "#/components/schemas/UserMeta"
        toUser:
          $ref: "#/components/schemas/UserMeta"
        startDate:
          type: string
          format: date-time
          description: The date and time for forwarding will start
        endDate:
          type: string
          format: date-time
          description: The date and time for forwarding will end
        alias:
          type: string
          description: A user defined identifier for the forwarding rule.
    UpdateForwardingRulePayload:
      type: object
      required:
        - fromUser
        - toUser
        - startDate
        - endDate
      properties:
        fromUser:
          $ref: "#/components/schemas/UserMeta"
        toUser:
          $ref: "#/components/schemas/UserMeta"
        startDate:
          type: string
          format: date-time
          description: The date and time for forwarding will start
        endDate:
          type: string
          format: date-time
          description: The date and time for forwarding will end
    ListForwardingRulesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ForwardingRule"
    CreateForwardingRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ForwardingRuleMeta"
    GetForwardingRuleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/ForwardingRule"
    ForwardingRule:
      type: object
      properties:
        fromUser:
          $ref: "#/components/schemas/UserMeta"
        toUser:
          $ref: "#/components/schemas/UserMeta"
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        alias:
          type: string
        id:
          type: string
    ForwardingRuleMeta:
      type: object
      properties:
        id:
          type: string
        alias:
          type: string
    CreateCustomUserRolePayload:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of custom user role
        extendedRole:
          type: string
          description: Custom role. Must not be one of the defined values (i.e. "user",
            "observer", "stakeholder")
        grantedRights:
          type: array
          description: Rights granted to the custom user role.
          items:
            type: string
        disallowedRights:
          type: array
          description: Rights disallowed for the custom user role.
          items:
            type: string
    UpdateCustomUserRolePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of custom user role
        extendedRole:
          type: string
          description: Custom role. Must not be one of the defined values (i.e. "user",
            "observer", "stakeholder")
        grantedRights:
          type: array
          description: Rights granted to the custom user role.
          items:
            type: string
        disallowedRights:
          type: array
          description: Rights disallowed for the custom user role.
          items:
            type: string
    ListCustomUserRolesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/CustomUserRole"
    GetCustomUserRoleResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/CustomUserRole"
    CustomUserRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        extendedRole:
          type: string
          description: Custom role. Must not be one of the defined values (i.e. "user",
            "observer", "stakeholder")
        grantedRights:
          type: array
          description: Rights granted to the custom user role.
          items:
            type: string
        disallowedRights:
          type: array
          description: Rights disallowed for the custom user role.
          items:
            type: string
    ChangePolicyOrderPayload:
      type: object
      required:
        - targetIndex
      properties:
        targetIndex:
          type: integer
          format: int32
          description: Order of the target policy will be changed to this value. Larger
            values than policy count will put the target policy to last place
          minimum: 0
    CreatePolicyResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/PolicyMeta"
    ListPoliciesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/PolicyMeta"
    GetPolicyResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Policy"
    PolicyMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - alert
            - notification
        order:
          type: integer
          format: int32
        enabled:
          type: boolean
    Policy:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        id:
          type: string
        name:
          type: string
          description: Name of the policy
        policyDescription:
          type: string
          description: Description of the policy
        teamId:
          type: string
          description: TeamId of the policy
        filter:
          $ref: "#/components/schemas/Filter"
        timeRestrictions:
          $ref: "#/components/schemas/TimeRestrictionInterval"
        enabled:
          type: boolean
          description: Activity status of the alert policy
        type:
          type: string
          description: Type of the policy
          enum:
            - alert
            - notification
    AlertPolicy:
      type: object
      x-discriminator-value: alert
      allOf:
        - $ref: "#/components/schemas/Policy"
        - properties:
            ignoreOriginalActions:
              type: boolean
            ignoreOriginalDetails:
              description: If set to true, policy will ignore the original details of the
                alert. Default value is false
              type: boolean
            ignoreOriginalResponders:
              description: If set to true, policy will ignore the original responders of
                the alert. Default value is false
              type: boolean
            ignoreOriginalTags:
              description: If set to true, policy will ignore the original tags of the
                alert. Default value is false
              type: boolean
            ignoreOriginalTeams:
              description: If set to true, policy will ignore the original teams of the
                alert. Default value is false
              type: boolean
            continue:
              description: Will continue with other modify policies if set to true
              type: boolean
            alias:
              description: Alias of the alert. You can use {{alias}} to refer to the
                original alias. Default value is {{alias}}
              type: string
            description:
              description: Description of the alert. You can use {{description}} to refer
                to the original alert description. Default value is
                {{description}}
              type: string
            entity:
              description: Entity field of the alert. You can use {{entity}} to refer to
                the original entity. Default value is {{entity}}
              type: string
            message:
              description: Message of the alert
              type: string
            source:
              description: Source field of the alert. You can use {{source}} to refer to
                the original source. Default value is {{source}}
              type: string
            actions:
              description: Alert actions as a list of strings to add to the alerts original
                actions value. If ignoreOriginalActions field is set to true,
                this will replace the original actions.
              type: array
              items:
                type: string
            responders:
              description: Responders to add to the alerts original responders value as a
                list of teams or users. If ignoreOriginalResponders field is set
                to true, this will replace the original responders.
              type: array
              items:
                $ref: "#/components/schemas/Responder"
            tags:
              description: Tags to add to the alerts original tags value as a list of
                strings. If ignoreOriginalTags field is set to true, this will
                replace the original tags.
              type: array
              items:
                type: string
            details:
              description: Custom properties to add to the alerts original details value as
                a list of strings. If ignoreOriginalDetails field is set to
                true, this will replace the original details.
              type: object
              additionalProperties:
                type: string
            priority:
              type: string
              description: Priority level of the alert
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
    NotificationPolicy:
      type: object
      x-discriminator-value: notification
      allOf:
        - $ref: "#/components/schemas/Policy"
        - properties:
            autoRestartAction:
              $ref: "#/components/schemas/AutoRestartAction"
            autoCloseAction:
              $ref: "#/components/schemas/AutoCloseAction"
            deduplicationAction:
              $ref: "#/components/schemas/DeduplicationAction"
            delayAction:
              $ref: "#/components/schemas/DelayAction"
            suppress:
              description: If set to true, notifications related to the matching alert will
                be suppressed. Default value is false.
              type: boolean
    AutoRestartAction:
      type: object
      required:
        - duration
        - maxRepeatCount
      properties:
        duration:
          $ref: "#/components/schemas/Duration"
        maxRepeatCount:
          type: integer
          format: int32
    AutoCloseAction:
      type: object
      required:
        - duration
      properties:
        duration:
          $ref: "#/components/schemas/Duration"
    DeduplicationAction:
      type: object
      required:
        - deduplicationActionType
        - count
      properties:
        deduplicationActionType:
          type: string
          enum:
            - value-based
            - frequency-based
        count:
          type: integer
          format: int32
          minimum: 2
          maximum: 100
        duration:
          $ref: "#/components/schemas/Duration"
    DelayAction:
      type: object
      required:
        - delayOption
      properties:
        delayOption:
          type: string
          enum:
            - for-duration
            - next-time
            - next-weekday
            - next-monday
            - next-tuesday
            - next-wednesday
            - next-thursday
            - next-friday
            - next-saturday
            - next-sunday
        untilHour:
          type: integer
          format: int32
          minimum: 0
          maximum: 23
        untilMinute:
          type: integer
          format: int32
          minimum: 0
          maximum: 59
        duration:
          $ref: "#/components/schemas/Duration"
    StatusPageEntry:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - required:
            - title
        - properties:
            title:
              type: string
              description: The message to be added using status page into incident
            details:
              type: string
              description: Description of the message being added via stats page into
                incident
    CreateIncidentPayload:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - required:
            - message
            - serviceId
        - properties:
            message:
              type: string
              description: Message of the incident
            description:
              type: string
              description: Description field of the incident that is generally used to
                provide a detailed information about the incident.
            responders:
              type: array
              description: Responders that the incident will be routed to send notifications
              items:
                $ref: "#/components/schemas/Recipient"
            tags:
              type: array
              description: Tags of the incident.
              items:
                type: string
            details:
              type: object
              description: Map of key-value pairs to use as custom properties of the
                incident
              additionalProperties:
                type: string
            priority:
              type: string
              description: Priority level of the incident
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
            note:
              type: string
              description: Additional note that will be added while creating the incident
            serviceId:
              type: string
              description: Service on which incident will be created.
            statusPageEntry:
              type: object
              description: Status page entry fields. If this field is leaved blank, message
                and description of incident will be used for title and detail
                respectively.
              additionalProperties:
                $ref: "#/components/schemas/StatusPageEntry"
            notifyStakeholders:
              type: boolean
              description: Indicate whether stakeholders are notified or not. Default value
                is false.
    IncidentActionPayload:
      x-opsgenie-domain: incident
      type: object
      properties:
        note:
          type: string
          description: Additional note that will be included with the incident
    CloseIncidentPayload:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - $ref: "#/components/schemas/IncidentActionPayload"
    GetIncidentRequestStatusResponse:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/IncidentRequestStatus"
    GetIncidentResponse:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              $ref: "#/components/schemas/Incident"
    ListIncidentsResponse:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BaseIncident"
            paging:
              $ref: "#/components/schemas/PageDetails"
    IncidentRequestStatus:
      x-opsgenie-domain: incident
      type: object
      properties:
        success:
          type: boolean
        action:
          type: string
        processedAt:
          type: string
          format: date-time
        integrationId:
          type: string
        isSuccess:
          type: boolean
        status:
          type: string
        incidentId:
          type: string
    Incident:
      x-opsgenie-domain: incident
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseIncident"
        - properties:
            requestId:
              type: string
    BaseIncident:
      x-opsgenie-domain: incident
      type: object
      required:
        - id
      properties:
        id:
          type: string
        tinyId:
          type: string
        message:
          type: string
        status:
          type: string
        isSeen:
          type: boolean
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        source:
          type: string
        owner:
          type: string
        priority:
          type: string
        responders:
          type: array
          items:
            $ref: "#/components/schemas/Responder"
        ownerTeam:
          type: string
        extraProperties:
          type: object
          description: Map of key-value pairs to use as custom properties of the incident
          additionalProperties:
            type: string